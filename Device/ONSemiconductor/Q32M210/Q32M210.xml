<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE model SYSTEM "embsysregview.dtd">
<model chipname="Q32M210">
  <chip_description>Q32M210 is a precision mixed-signal 32-bit microcontroller, ideally suited for portable sensing devices.

Features
    * ARM® Cortex™-M3 processor
    * 256 kB on-chip flash, 48 kB on-chip SRAM
    * Ultra low power consumption
    * Low-noise, low-leakage configurable sensor interface
        + Ultra-low noise op-amps with configurable outputs
        + Dual programmable gain amplifiers
    * Flexible sensor interconnection scheme
        + 8:1 input multiplexing
        + 4 multi-switches, 4 SPST switches
    * Dual 16-bit, low power, low noise ADCs with integrated precision voltage reference.
    * Triple 10-bit DACs with configurable dynamic range.
    * Integrated temperature measurement.
    * Integrated PWM
    * Hardware ECC
    * Flexible clocking architecture
    * Segment LCD interface (up to 112 segments) with integrated backlight driver
    * Smart power management, consuming less than 750 nA in sleep mode with RTC active.
    
Copyright © 2011 Semiconductor Components Industries, LLC (d/b/a ON Semiconductor). All Rights Reserved.
  </chip_description>
  <group name="Q32M210" description="">
    <registergroup name="AFE" description="Analog Front-End">
      <register name="AFE_PSU_CTRL" address="0x40000008" access="RW" resetvalue="0x00000000">
        <description>Power Supply Charge Pump and LCD Backlight Control</description>
        <field name="LCDBACKLIGHT_CFG" bitoffset="8" bitlength="10">
          <description>Select whether the LCD driver backlight is currently enabled and select the current provided to the backlight
Values:
0x00 (LCDBACKLIGHT_DISABLE) - Disable the LCD driver backlight
0x01 (LCDBACKLIGHT_1_INOM) - LCD driver backlight current supplied is the nominal setting
0x03 (LCDBACKLIGHT_2_INOM) - LCD driver backlight current supplied is 2 times  the nominal setting
0x07 (LCDBACKLIGHT_3_INOM) - LCD driver backlight current supplied is 3 times  the nominal setting
0x0F (LCDBACKLIGHT_4_INOM) - LCD driver backlight current supplied is 4 times  the nominal setting
0x1F (LCDBACKLIGHT_5_INOM) - LCD driver backlight current supplied is 5 times  the nominal setting
0x3F (LCDBACKLIGHT_6_INOM) - LCD driver backlight current supplied is 6 times  the nominal setting
0x7F (LCDBACKLIGHT_7_INOM) - LCD driver backlight current supplied is 7 times  the nominal setting
0xFF (LCDBACKLIGHT_8_INOM) - LCD driver backlight current supplied is 8 times  the nominal setting
0x1FF (LCDBACKLIGHT_9_INOM) - LCD driver backlight current supplied is 9 times  the nominal setting
0x3FF (LCDBACKLIGHT_10_INOM) - LCD driver backlight current supplied is 10 times  the nominal setting
          </description>
        </field>
        <field name="VCP_ENABLE" bitoffset="2" bitlength="1">
          <description>Select whether the charge pump LDO is currently enabled
Values:
0x00 (VCP_DISABLE) - Disable the charge pump LDO
0x01 (VCP_ENABLE) - Enable the charge pump LDO
          </description>
        </field>
        <field name="LCDDRIVER_ENABLE" bitoffset="1" bitlength="1">
          <description>Select whether the LCD driver is currently enabled
Values:
0x00 (LCDDRIVER_DISABLE) - Disable the LCD driver
0x01 (LCDDRIVER_ENABLE) - Enable the LCD driver
          </description>
        </field>
        <field name="VDBL_ENABLE" bitoffset="0" bitlength="1">
          <description>Select whether the VDBL is enabled
Values:
0x00 (VDBL_DISABLE) - Disable VDBL
0x01 (VDBL_ENABLE) - Enable VDBL
          </description>
        </field>
      </register>
      <register name="AFE_OPMODE_CTRL" address="0x4000000C" access="RW" resetvalue="0x00000008">
        <description>Operation Control</description>
        <field name="RC_OSC_ENABLE" bitoffset="3" bitlength="1">
          <description>Select whether the RC oscillator is enabled
Values:
0x00 (RC_OSC_DISABLE) - The RC oscillator is disabled
0x01 (RC_OSC_ENABLE) - The RC oscillator is enabled
          </description>
        </field>
        <field name="VADC_ENABLE" bitoffset="2" bitlength="1">
          <description>Select whether VADC is enabled
Values:
0x00 (VADC_DISABLE) - VADC supply is disabled
0x01 (VADC_ENABLE) - VADC supply is enabled
          </description>
        </field>
        <field name="STANDBY_MODE" bitoffset="1" bitlength="1">
          <description>Control standby mode selection
Values:
0x00 (STANDBY_MODE_DISABLE) - Device operates in normal mode
0x01 (STANDBY_MODE_ENABLE) - Device transitions to standby mode
          </description>
        </field>
        <field name="SLEEP_MODE" bitoffset="0" bitlength="1">
          <description>Control sleep mode selection
Values:
0x00 (SLEEP_MODE_DISABLE) - Device operates in normal mode
0x01 (SLEEP_MODE_ENABLE) - Device transitions to sleep mode
          </description>
        </field>
      </register>
      <register name="AFE_32K_CCR_CTRL" address="0x40000010" access="RW" resetvalue="0x00000000">
        <description>32 kHz Crystal Clock Calibration Control</description>
        <field name="CCR_CTRL" bitoffset="0" bitlength="8">
          <description>Trimming of the 32 kHz crystal oscillator in -0.012 Hz or +0.096 Hz steps          </description>
        </field>
      </register>
      <register name="AFE_48M_CCR_CTRL" address="0x40000018" access="RW" resetvalue="0x00000000">
        <description>48 MHz Crystal Clock Calibration Control</description>
        <field name="CCR_CTRL" bitoffset="0" bitlength="8">
          <description>Trimming of the 48 MHz crystal oscillator          </description>
        </field>
      </register>
      <register name="AFE_RC_CCR_CTRL" address="0x40000020" access="RW" resetvalue="0x0020040A">
        <description>RC Clock Calibration Control</description>
        <field name="FINE_CTRL" bitoffset="16" bitlength="6">
          <description>Fine trimming of RC oscillator frequency          </description>
        </field>
        <field name="RANGE_SEL" bitoffset="8" bitlength="3">
          <description>Select the frequency range for the RC oscillator
Values:
0x00 (RC_OSC_FREQ_RANGE_7) - Select RC oscillator frequency range 7
0x01 (RC_OSC_FREQ_RANGE_6) - Select RC oscillator frequency range 6
0x02 (RC_OSC_FREQ_RANGE_5) - Select RC oscillator frequency range 5
0x03 (RC_OSC_FREQ_RANGE_4) - Select RC oscillator frequency range 4
0x04 (RC_OSC_FREQ_RANGE_3) - Select RC oscillator frequency range 3
0x05 (RC_OSC_FREQ_RANGE_2) - Select RC oscillator frequency range 2
0x06 (RC_OSC_FREQ_RANGE_1) - Select RC oscillator frequency range 1
0x07 (RC_OSC_FREQ_RANGE_0) - Select RC oscillator frequency range 0
          </description>
        </field>
        <field name="COARSE_CTRL" bitoffset="0" bitlength="6">
          <description>Coarse trimming of RC oscillator frequency          </description>
        </field>
      </register>
      <register name="AFE_IN_SW_CTRL" address="0x40000030" access="RW" resetvalue="0x00000F78">
        <description>Input Control and Configuration</description>
        <field name="ALT1_SW" bitoffset="8" bitlength="4">
          <description>Configure the connection to the ALT1 pad and multiplexer M0
Values:
0x00 (ALT1_SW_SEL_NONE) - All pads IN3 to IN7 connected to multiplexer M0
0x01 (ALT1_SW_SEL_IN3) - IN3 connected to ALT1 pad, IN4  to IN7 connected to multiplexer M0
0x02 (ALT1_SW_SEL_IN4) - IN4 connected to ALT1 pad, IN3, IN5  to IN7 connected to multiplexer M0
0x03 (ALT1_SW_SEL_IN5) - IN5 connected to ALT1 pad, IN3 to IN4, IN6  to IN7 connected to multiplexer M0
0x04 (ALT1_SW_SEL_IN6) - IN6 connected to ALT1 pad, IN3 to IN5,  IN7 connected to multiplexer M0
0x05 (ALT1_SW_SEL_IN7) - IN7 connected to ALT1 pad, IN3 to IN6 connected to multiplexer M0
0x06 (ALT1_SW_SEL_M0_IN3) - IN3 connected to ALT1 pad, IN3  to IN7 connected to multiplexer M0
0x07 (ALT1_SW_SEL_M0_IN4) - IN4 connected to ALT1 pad, IN3  to IN7 connected to multiplexer M0
0x08 (ALT1_SW_SEL_M0_IN5) - IN5 connected to ALT1 pad, IN3  to IN7 connected to multiplexer M0
0x09 (ALT1_SW_SEL_M0_IN6) - IN6 connected to ALT1 pad, IN3  to IN7 connected to multiplexer M0
0x0A (ALT1_SW_SEL_M0_IN7) - IN7 connected to ALT1 pad, IN3  to IN7 connected to multiplexer M0
0x0F (ALT1_SW_DISABLE) - Switches disabled
          </description>
        </field>
        <field name="ALT0_SW" bitoffset="4" bitlength="3">
          <description>Configure the connection to the ALT0 pad and multiplexer M0
Values:
0x00 (ALT0_SW_SEL_NONE) - All pads IN0 to IN2 connected to multiplexer M0
0x01 (ALT0_SW_SEL_IN0) - IN0 connected to ALT0 pad, IN1 and IN2 connected to multiplexer M0
0x02 (ALT0_SW_SEL_IN1) - IN1 connected to ALT0 pad, IN0 and IN2 connected to multiplexer M0
0x03 (ALT0_SW_SEL_IN2) - IN2 connected to ALT0 pad, IN0 and IN1 connected to multiplexer M0
0x04 (ALT0_SW_SEL_M0_IN0) - IN0 connected to ALT0 pad, IN0 to IN2 connected to multiplexer M0
0x05 (ALT0_SW_SEL_M0_IN1) - IN1 connected to ALT0 pad, IN0 to IN2 connected to multiplexer M0
0x06 (ALT0_SW_SEL_M0_IN2) - IN2 connected to ALT0 pad, IN0 to IN2 connected to multiplexer M0
0x07 (ALT0_SW_DISABLE) - Switches disabled
          </description>
        </field>
        <field name="A0_IN_CFG" bitoffset="0" bitlength="4">
          <description>Configuration of input to the AO negative terminal input
Values:
0x00 (A0_CFG_SEL_IN0) - Connect negative terminal of A0 to IN0
0x01 (A0_CFG_SEL_IN1) - Connect negative terminal of A0 to IN1
0x02 (A0_CFG_SEL_IN2) - Connect negative terminal of A0 to IN2
0x03 (A0_CFG_SEL_IN3) - Connect negative terminal of A0 to IN3
0x04 (A0_CFG_SEL_IN4) - Connect negative terminal of A0 to IN4
0x05 (A0_CFG_SEL_IN5) - Connect negative terminal of A0 to IN5
0x06 (A0_CFG_SEL_IN6) - Connect negative terminal of A0 to IN6
0x07 (A0_CFG_SEL_IN7) - Connect negative terminal of A0 to IN7
0x08 (A0_CFG_SEL_DISABLE) - Mux M0 powered off
          </description>
        </field>
      </register>
      <register name="AFE_AMP_CTRL" address="0x40000034" access="RW" resetvalue="0x00000000">
        <description>Opamp Control</description>
        <field name="A2_ENABLE" bitoffset="2" bitlength="1">
          <description>Enable opamp A2
Values:
0x00 (A2_DISABLE) - Disable opamp A2
0x01 (A2_ENABLE) - Enable opamp A2
          </description>
        </field>
        <field name="A1_ENABLE" bitoffset="1" bitlength="1">
          <description>Enable opamp A1
Values:
0x00 (A1_DISABLE) - Disable opamp A1
0x01 (A1_ENABLE) - Enable opamp A1
          </description>
        </field>
        <field name="A0_ENABLE" bitoffset="0" bitlength="1">
          <description>Enable opamp A0
Values:
0x00 (A0_DISABLE) - Disable opamp A0
0x01 (A0_ENABLE) - Enable opamp A0
          </description>
        </field>
      </register>
      <register name="AFE_OUT_SW_CTRL" address="0x40000038" access="RW" resetvalue="0x00000000">
        <description>Output Control and Configuration</description>
        <field name="A2_OUTB_ENABLE" bitoffset="5" bitlength="1">
          <description>Opamp A2 B output connection
Values:
0x00 (A2_OUTB_DISABLE) - Disable A2 output B
0x01 (A2_OUTB_ENABLE) - Enable A2 output B
          </description>
        </field>
        <field name="A2_OUTA_ENABLE" bitoffset="4" bitlength="1">
          <description>Opamp A2 A output connection
Values:
0x00 (A2_OUTA_DISABLE) - Disable A2 output A
0x01 (A2_OUTA_ENABLE) - Enable A2 output A
          </description>
        </field>
        <field name="A1_OUTB_ENABLE" bitoffset="3" bitlength="1">
          <description>Opamp A1 B output connection
Values:
0x00 (A1_OUTB_DISABLE) - Disable A1 output B
0x01 (A1_OUTB_ENABLE) - Enable A1 output B
          </description>
        </field>
        <field name="A1_OUTA_ENABLE" bitoffset="2" bitlength="1">
          <description>Opamp A1 A output connection
Values:
0x00 (A1_OUTA_DISABLE) - Disable A1 output A
0x01 (A1_OUTA_ENABLE) - Enable A1 output A
          </description>
        </field>
        <field name="A0_OUTB_ENABLE" bitoffset="1" bitlength="1">
          <description>Opamp A0 B output connection
Values:
0x00 (A0_OUTB_DISABLE) - Disable A0 output B
0x01 (A0_OUTB_ENABLE) - Enable A0 output B
          </description>
        </field>
        <field name="A0_OUTA_ENABLE" bitoffset="0" bitlength="1">
          <description>Opamp A0 A output connection
Values:
0x00 (A0_OUTA_DISABLE) - Disable A0 output A
0x01 (A0_OUTA_ENABLE) - Enable A0 output A
          </description>
        </field>
      </register>
      <register name="AFE_SPST_CTRL" address="0x40000040" access="RW" resetvalue="0x000000FF">
        <description>SPST Switch Control</description>
        <field name="SPST3_DISABLE" bitoffset="7" bitlength="1">
          <description>Disable SPST switch 3
Values:
0x00 (SPST3_ENABLE) - Switch enabled
0x01 (SPST3_DISABLE) - Switch diabled (no connection)
          </description>
        </field>
        <field name="SPST3_SELECT" bitoffset="6" bitlength="1">
          <description>Select whether SPST switch 3 is open or closed
Values:
0x00 (SPST3_SEL_OPEN) - Switch open
0x01 (SPST3_SEL_CLOSE) - Switch closed
          </description>
        </field>
        <field name="SPST2_DISABLE" bitoffset="5" bitlength="1">
          <description>Disable SPST switch 2
Values:
0x00 (SPST2_ENABLE) - Switch enabled
0x01 (SPST2_DISABLE) - Switch diabled (no connection)
          </description>
        </field>
        <field name="SPST2_SELECT" bitoffset="4" bitlength="1">
          <description>Select whether SPST switch 2 is open or closed
Values:
0x00 (SPST2_SEL_OPEN) - Switch open
0x01 (SPST2_SEL_CLOSE) - Switch closed
          </description>
        </field>
        <field name="SPST1_DISABLE" bitoffset="3" bitlength="1">
          <description>Disable SPST switch 1
Values:
0x00 (SPST1_ENABLE) - Switch enabled
0x01 (SPST1_DISABLE) - Switch diabled (no connection)
          </description>
        </field>
        <field name="SPST1_SELECT" bitoffset="2" bitlength="1">
          <description>Select whether SPST switch 1 is open or closed
Values:
0x00 (SPST1_SEL_OPEN) - Switch open
0x01 (SPST1_SEL_CLOSE) - Switch closed
          </description>
        </field>
        <field name="SPST0_DISABLE" bitoffset="1" bitlength="1">
          <description>Disable SPST switch 0
Values:
0x00 (SPST0_ENABLE) - Switch enabled
0x01 (SPST0_DISABLE) - Switch diabled (no connection)
          </description>
        </field>
        <field name="SPST0_SELECT" bitoffset="0" bitlength="1">
          <description>Select whether SPST switch 0 is open or closed
Values:
0x00 (SPST0_SEL_OPEN) - Switch open
0x01 (SPST0_SEL_CLOSE) - Switch closed
          </description>
        </field>
      </register>
      <register name="AFE_MSW_CTRL" address="0x40000044" access="RW" resetvalue="0x00003F3F">
        <description>Multi-Switch Control</description>
        <field name="MSW3_SELECT" bitoffset="11" bitlength="3">
          <description>Select configuration for multi-switch 3
Values:
0x00 (MSW3_SEL_A) - Connect MSW3 A to common
0x01 (MSW3_SEL_B) - Connect MSW3 B to common
0x02 (MSW3_SEL_A_B) - Connect MSW3 A and B to common
0x03 (MSW3_SEL_DISABLE) - Common disconnected
0x04 (MSW3_SEL_PWM3) - MSW3 is configured by PWM3
          </description>
        </field>
        <field name="MSW2_SELECT" bitoffset="8" bitlength="3">
          <description>Select configuration for multi-switch 2
Values:
0x00 (MSW2_SEL_A) - Connect MSW2 A to common
0x01 (MSW2_SEL_B) - Connect MSW2 B to common
0x02 (MSW2_SEL_A_B) - Connect MSW2 A and B to common
0x03 (MSW2_SEL_DISABLE) - Common disconnected
0x04 (MSW2_SEL_PWM2) - MSW2 is configured by PWM2
          </description>
        </field>
        <field name="MSW1_SELECT" bitoffset="3" bitlength="3">
          <description>Select configuration for multi-switch 1
Values:
0x00 (MSW1_SEL_A) - Connect MSW1 A to common
0x01 (MSW1_SEL_B) - Connect MSW1 B to common
0x02 (MSW1_SEL_A_B) - Connect MSW1 A and B to common
0x03 (MSW1_SEL_DISABLE) - Common disconnected
0x04 (MSW1_SEL_PWM1) - MSW1 is configured by PWM1
          </description>
        </field>
        <field name="MSW0_SELECT" bitoffset="0" bitlength="3">
          <description>Select configuration for multi-switch 0
Values:
0x00 (MSW0_SEL_A) - Connect MSW0 A to common
0x01 (MSW0_SEL_B) - Connect MSW0 B to common
0x02 (MSW0_SEL_A_B) - Connect MSW0 A and B to common
0x03 (MSW0_SEL_DISABLE) - Common disconnected
0x04 (MSW0_SEL_PWM0) - MSW0 is configured by PWM0
          </description>
        </field>
      </register>
      <register name="AFE_PGA0_CTRL" address="0x40000050" access="RW" resetvalue="0x0000010A">
        <description>Programmable Gain Amplifier 0 Control</description>
        <field name="PGA0_DIF_SELECT" bitoffset="5" bitlength="4">
          <description>Select subtractor for PGA0 input
Values:
0x00 (PGA0_DIF_SEL_VSS) - PGA0 differential input is VSS
0x01 (PGA0_DIF_SEL_VBAT_2) - PGA0 differential input is VBAT/2
0x02 (PGA0_DIF_SEL_VBATA_2) - PGA0 differential input is VBATA/2
0x03 (PGA0_DIF_SEL_VREF) - PGA0 differential input is VREF
0x04 (PGA0_DIF_SEL_OUT0) - PGA0 differential input is OUT0
0x05 (PGA0_DIF_SEL_OUT1) - PGA0 differential input is OUT1
0x06 (PGA0_DIF_SEL_OUT2) - PGA0 differential input is OUT2
0x07 (PGA0_DIF_SEL_A0REF) - PGA0 differential input is A0REF
0x08 (PGA0_DIF_SEL_A1REF) - PGA0 differential input is A1REF
0x09 (PGA0_DIF_SEL_A2REF) - PGA0 differential input is A2REF
0x0A (PGA0_DIF_SEL_VWAKEUP) - PGA0 differential input is VWAKEUP
0x0B (PGA0_DIF_SEL_VTS2) - PGA0 differential input is VTS2
0x0D (PGA0_DIF_SEL_AUX_IN1) - PGA0 differential input is AUX_IN1
0x0E (PGA0_DIF_SEL_AUX_IN0) - PGA0 differential input is AUX_IN0
0x0F (PGA0_DIF_SEL_VADC_2) - PGA0 differential input is VADC/2
          </description>
        </field>
        <field name="PGA0_SELECT" bitoffset="1" bitlength="4">
          <description>Select PGA0 primary input signal
Values:
0x00 (PGA0_SEL_VSS) - PGA0 input is VSS
0x01 (PGA0_SEL_VBAT_2) - PGA0 input is VBAT/2
0x02 (PGA0_SEL_VBATA_2) - PGA0 input is VBATA/2
0x03 (PGA0_SEL_VREF) - PGA0 input is VREF
0x04 (PGA0_SEL_OUT0) - PGA0 input is OUT0
0x05 (PGA0_SEL_OUT1) - PGA0 input is OUT1
0x06 (PGA0_SEL_OUT2) - PGA0 input is OUT2
0x07 (PGA0_SEL_A0REF) - PGA0 input is A0REF
0x08 (PGA0_SEL_A1REF) - PGA0 input is A1REF
0x09 (PGA0_SEL_A2REF) - PGA0 input is A2REF
0x0A (PGA0_SEL_VWAKEUP) - PGA0 input is VWAKEUP
0x0B (PGA0_SEL_VTS1) - PGA0 input is VTS1
0x0C (PGA0_SEL_AUX_IN2) - PGA0 input is AUX_IN2
0x0D (PGA0_SEL_AUX_IN1) - PGA0 input is AUX_IN1
0x0E (PGA0_SEL_AUX_IN0) - PGA0 input is AUX_IN0
0x0F (PGA0_SEL_VADC_2) - PGA0 input is VADC/2
          </description>
        </field>
        <field name="PGA0_ENABLE" bitoffset="0" bitlength="1">
          <description>Enable PGA0 amplifier
Values:
0x00 (PGA0_DISABLE) - Disable PGA0
0x01 (PGA0_ENABLE) - Enable PGA0
          </description>
        </field>
      </register>
      <register name="AFE_PGA1_CTRL" address="0x40000054" access="RW" resetvalue="0x0000010A">
        <description>Programmable Gain Amplifier 1 Control</description>
        <field name="PGA1_DIF_SELECT" bitoffset="5" bitlength="4">
          <description>Select subtractor for PGA1 input
Values:
0x00 (PGA1_DIF_SEL_VSS) - PGA1 differential input is VSS
0x01 (PGA1_DIF_SEL_VBAT_2) - PGA1 differential input is VBAT/2
0x02 (PGA1_DIF_SEL_VBATA_2) - PGA1 differential input is VBATA/2
0x03 (PGA1_DIF_SEL_VREF) - PGA1 differential input is VREF
0x04 (PGA1_DIF_SEL_OUT0) - PGA1 differential input is OUT0
0x05 (PGA1_DIF_SEL_OUT1) - PGA1 differential input is OUT1
0x06 (PGA1_DIF_SEL_OUT2) - PGA1 differential input is OUT2
0x07 (PGA1_DIF_SEL_A0REF) - PGA1 differential input is A0REF
0x08 (PGA1_DIF_SEL_A1REF) - PGA1 differential input is A1REF
0x09 (PGA1_DIF_SEL_A2REF) - PGA1 differential input is A2REF
0x0A (PGA1_DIF_SEL_VWAKEUP) - PGA1 differential input is VWAKEUP
0x0B (PGA1_DIF_SEL_VTS2) - PGA1 differential input is VTS2
0x0D (PGA1_DIF_SEL_AUX_IN1) - PGA1 differential input is AUX_IN1
0x0E (PGA1_DIF_SEL_AUX_IN0) - PGA1 differential input is AUX_IN0
0x0F (PGA1_DIF_SEL_VADC_2) - PGA1 differential input is VADC/2
          </description>
        </field>
        <field name="PGA1_SELECT" bitoffset="1" bitlength="4">
          <description>Select PGA1 primary input signal
Values:
0x00 (PGA1_SEL_VSS) - PGA1 input is VSS
0x01 (PGA1_SEL_VBAT_2) - PGA1 input is VBAT/2
0x02 (PGA1_SEL_VBATA_2) - PGA1 input is VBATA/2
0x03 (PGA1_SEL_VREF) - PGA1 input is VREF
0x04 (PGA1_SEL_OUT0) - PGA1 input is OUT0
0x05 (PGA1_SEL_OUT1) - PGA1 input is OUT1
0x06 (PGA1_SEL_OUT2) - PGA1 input is OUT2
0x07 (PGA1_SEL_A0REF) - PGA1 input is A0REF
0x08 (PGA1_SEL_A1REF) - PGA1 input is A1REF
0x09 (PGA1_SEL_A2REF) - PGA1 input is A2REF
0x0A (PGA1_SEL_VWAKEUP) - PGA1 input is VWAKEUP
0x0B (PGA1_SEL_VTS1) - PGA1 input is VTS1
0x0C (PGA1_SEL_AUX_IN2) - PGA1 input is AUX_IN2
0x0D (PGA1_SEL_AUX_IN1) - PGA1 input is AUX_IN1
0x0E (PGA1_SEL_AUX_IN0) - PGA1 input is AUX_IN0
0x0F (PGA1_SEL_VADC_2) - PGA1 input is VADC/2
          </description>
        </field>
        <field name="PGA1_ENABLE" bitoffset="0" bitlength="1">
          <description>Enable PGA1 amplifier
Values:
0x00 (PGA1_DISABLE) - Disable PGA1
0x01 (PGA1_ENABLE) - Enable PGA1
          </description>
        </field>
      </register>
      <register name="AFE_PGA_GAIN_CTRL" address="0x40000058" access="RW" resetvalue="0x00000040">
        <description>Programmable Gain Amplifier Configuration and Control</description>
        <field name="CUT_OFF_CFG" bitoffset="6" bitlength="2">
          <description>Select cut-off frequency for anti-aliasing filter
Values:
0x01 (PGA_CUT_OFF_LOW) - Low cut-off
0x00 (PGA_CUT_OFF_HIGH) - High cut-off
          </description>
        </field>
        <field name="PGA1_GAIN_CFG" bitoffset="3" bitlength="3">
          <description>Select the gain for PGA1
Values:
0x00 (PGA1_GAIN_0DB) - 0 dB
0x01 (PGA1_GAIN_6DB) - 6 dB
0x02 (PGA1_GAIN_12DB) - 12 dB
0x03 (PGA1_GAIN_18DB) - 18 dB
0x04 (PGA1_GAIN_24DB) - 24 dB
0x05 (PGA1_GAIN_30DB) - 30 dB
0x06 (PGA1_GAIN_36DB) - 36 dB
          </description>
        </field>
        <field name="PGA0_GAIN_CFG" bitoffset="0" bitlength="3">
          <description>Select the gain for PGA0
Values:
0x00 (PGA0_GAIN_0DB) - 0 dB
0x01 (PGA0_GAIN_6DB) - 6 dB
0x02 (PGA0_GAIN_12DB) - 12 dB
0x03 (PGA0_GAIN_18DB) - 18 dB
0x04 (PGA0_GAIN_24DB) - 24 dB
0x05 (PGA0_GAIN_30DB) - 30 dB
0x06 (PGA0_GAIN_36DB) - 36 dB
0x07 (PGA0_GAIN_42DB) - 42 dB
          </description>
        </field>
      </register>
      <register name="AFE_THRESHOLD_COMPARE_CTRL" address="0x4000005C" access="RW" resetvalue="0x00000000">
        <description>Voltage Threshold Comparator Control</description>
        <field name="THRESHOLD" bitoffset="0" bitlength="2">
          <description>Enable and select the voltage threshold for the threshold comparator
Values:
0x00 (THRESHOLD_COMPARE_DISABLE) - Disable the threshold comparatpr
0x01 (THRESHOLD_COMPARE_40MV) - Threshold for the comparitor is 40 mV
0x02 (THRESHOLD_COMPARE_80MV) - Threshold for the comparitor is 80 mV
0x03 (THRESHOLD_COMPARE_120MV) - Threshold for the comparitor is 120 mV
          </description>
        </field>
      </register>
      <register name="AFE_ADC_CTRL" address="0x40000060" access="RW" resetvalue="0x00000000">
        <description>ADC Configuration and Control</description>
        <field name="ADC1_GAIN_ENABLE" bitoffset="7" bitlength="1">
          <description>Enable the gain error correction multiplier for ADC1
Values:
0x00 (ADC1_GAIN_DISABLE) - Disable the gain error correction multiplier for ADC1
0x01 (ADC1_GAIN_ENABLE) - Enable the gain error correction multiplier for ADC1
          </description>
        </field>
        <field name="ADC1_OFFSET_ENABLE" bitoffset="6" bitlength="1">
          <description>Enable offset correction for ADC1
Values:
0x00 (ADC1_OFFSET_DISABLE) - Disable offset correction for ADC1
0x01 (ADC1_OFFSET_ENABLE) - Enable offset correction for ADC1
          </description>
        </field>
        <field name="ADC0_GAIN_ENABLE" bitoffset="5" bitlength="1">
          <description>Enable the gain error correction multiplier for ADC0
Values:
0x00 (ADC0_GAIN_DISABLE) - Disable the gain error correction multiplier for ADC0
0x01 (ADC0_GAIN_ENABLE) - Enable the gain error correction multiplier for ADC0
          </description>
        </field>
        <field name="ADC0_OFFSET_ENABLE" bitoffset="4" bitlength="1">
          <description>Enable offset correction for ADC0
Values:
0x00 (ADC0_OFFSET_DISABLE) - Disable offset correction for ADC0
0x01 (ADC0_OFFSET_ENABLE) - Enable offset correction for ADC0
          </description>
        </field>
        <field name="ADC1_FORMAT_CFG" bitoffset="3" bitlength="1">
          <description>ADC output number format
Values:
0x00 (ADC1_FORMAT_TWOS_COMP) - "2's complement output mode"
0x01 (ADC1_FORMAT_UNSIGNED_INT) - Unsigned integer output mode
          </description>
        </field>
        <field name="ADC0_FORMAT_CFG" bitoffset="2" bitlength="1">
          <description>ADC output number format
Values:
0x00 (ADC0_FORMAT_TWOS_COMP) - "2's complement output mode"
0x01 (ADC0_FORMAT_UNSIGNED_INT) - Unsigned integer output mode
          </description>
        </field>
        <field name="ADC1_ENABLE" bitoffset="1" bitlength="1">
          <description>Enable ADC1
Values:
0x00 (ADC1_DISABLE) - ADC1 Disable
0x01 (ADC1_ENABLE) - ADC1 Enable
          </description>
        </field>
        <field name="ADC0_ENABLE" bitoffset="0" bitlength="1">
          <description>Enable ADC0
Values:
0x00 (ADC0_DISABLE) - ADC0 Disable
0x01 (ADC0_ENABLE) - ADC0 Enable
          </description>
        </field>
      </register>
      <register name="AFE_ADC0_DATA" address="0x40000064" access="RO" resetvalue="0x00000000">
        <description>ADC0 Output</description>
        <field name="ALIGN" bitoffset="16" bitlength="16">
          <description>Output from ADC0          </description>
        </field>
      </register>
      <register name="AFE_ADC1_DATA" address="0x40000068" access="RO" resetvalue="0x00000000">
        <description>ADC1 Output</description>
        <field name="ALIGN" bitoffset="16" bitlength="16">
          <description>Output from ADC1          </description>
        </field>
      </register>
      <register name="AFE_ADC01_DATA" address="0x4000006C" access="RO" resetvalue="0x00000000">
        <description>ADC 0 and 1 Shared Output</description>
        <field name="ADC0" bitoffset="16" bitlength="16">
          <description>16 MSBs of output from ADC0          </description>
        </field>
        <field name="ADC1" bitoffset="0" bitlength="16">
          <description>16 MSBs of output from ADC1          </description>
        </field>
      </register>
      <register name="AFE_ADC0_OFFSET" address="0x40000070" access="RW" resetvalue="0x00000000">
        <description>ADC0 Offset Calibration</description>
        <field name="CAL" bitoffset="14" bitlength="18">
          <description>Offset value that is added to ADC0 output for calibration purposes          </description>
        </field>
      </register>
      <register name="AFE_ADC1_OFFSET" address="0x40000074" access="RW" resetvalue="0x00000000">
        <description>ADC1  Offset Calibration</description>
        <field name="CAL" bitoffset="14" bitlength="18">
          <description>Offset value that is added to ADC1 output for calibration purposes          </description>
        </field>
      </register>
      <register name="AFE_ADC0_GAIN" address="0x40000078" access="RW" resetvalue="0x10000000">
        <description>ADC0 Gain Calibration</description>
        <field name="CAL" bitoffset="14" bitlength="18">
          <description>Gain value that is multiplied to ADC0 output for calibration purposes          </description>
        </field>
      </register>
      <register name="AFE_ADC1_GAIN" address="0x4000007C" access="RW" resetvalue="0x10000000">
        <description>ADC1  Gain Calibration</description>
        <field name="CAL" bitoffset="14" bitlength="18">
          <description>Gain value that is multiplied to ADC1 output for calibration purposes          </description>
        </field>
      </register>
      <register name="AFE_DATARATE_CFG" address="0x40000080" access="RW" resetvalue="0x00000000">
        <description>ADC Data Rate Configuration</description>
        <field name="DECIMATION_FACTOR" bitoffset="25" bitlength="6">
          <description>Set the decimation rate portion of the ADC data rate          </description>
        </field>
        <field name="DECIMATION_ENABLE" bitoffset="24" bitlength="1">
          <description>Enable the decimation filter
Values:
0x01 (DATARATE_DECIMATE_ENABLE) - Decimation filter is enabled
0x00 (DATARATE_DECIMATE_DISABLE) - Decimation filter is disabled
          </description>
        </field>
        <field name="ADJUST" bitoffset="0" bitlength="10">
          <description>Adjustment factor used to calculate the undecimated data rate          </description>
        </field>
      </register>
      <register name="AFE_DATARATE_CFG1" address="0x4000008C" access="RW" resetvalue="0x0000000A">
        <description>AFE Data Rate Mode Configuration</description>
        <field name="FREQ_MODE" bitoffset="0" bitlength="4">
          <description>Configure the oversampling mode used by the ADCs          </description>
        </field>
      </register>
      <register name="AFE_PWM0_PERIOD" address="0x40000090" access="RW" resetvalue="0x000000FF">
        <description>PWM0 Period Configuration</description>
        <field name="PWM0_PERIOD" bitoffset="0" bitlength="8">
          <description>Configure the number of cycles per period for PWM0          </description>
        </field>
      </register>
      <register name="AFE_PWM1_PERIOD" address="0x40000094" access="RW" resetvalue="0x000000FF">
        <description>PWM1 Period Configuration</description>
        <field name="PWM1_PERIOD" bitoffset="0" bitlength="8">
          <description>Configure the number of cycles per period for PWM1          </description>
        </field>
      </register>
      <register name="AFE_PWM2_PERIOD" address="0x40000098" access="RW" resetvalue="0x000000FF">
        <description>PWM2  Period Configuration</description>
        <field name="PWM2_PERIOD" bitoffset="0" bitlength="8">
          <description>Configure the number of cycles per period for PWM2          </description>
        </field>
      </register>
      <register name="AFE_PWM3_PERIOD" address="0x4000009C" access="RW" resetvalue="0x000000FF">
        <description>PWM3 Period Configuration</description>
        <field name="PWM3_PERIOD" bitoffset="0" bitlength="8">
          <description>Configure the number of cycles per period for PWM3          </description>
        </field>
      </register>
      <register name="AFE_PWM0_HI" address="0x400000A0" access="RW" resetvalue="0x00000080">
        <description>PWM0 Duty Cycle Configuration</description>
        <field name="PWM0_HI" bitoffset="0" bitlength="8">
          <description>Configure how many high cycles there are per period for PWM0          </description>
        </field>
      </register>
      <register name="AFE_PWM1_HI" address="0x400000A4" access="RW" resetvalue="0x00000080">
        <description>PWM1 Duty Cycle Configuration</description>
        <field name="PWM1_HI" bitoffset="0" bitlength="8">
          <description>Configure how many high cycles there are per period for PWM1          </description>
        </field>
      </register>
      <register name="AFE_PWM2_HI" address="0x400000A8" access="RW" resetvalue="0x00000080">
        <description>PWM2  Duty Cycle Configuration</description>
        <field name="PWM2_HI" bitoffset="0" bitlength="8">
          <description>Configure how many high cycles there are per period for PWM2          </description>
        </field>
      </register>
      <register name="AFE_PWM3_HI" address="0x400000AC" access="RW" resetvalue="0x00000080">
        <description>PWM3 Duty Cycle Configuration</description>
        <field name="PWM3_HI" bitoffset="0" bitlength="8">
          <description>Configure how many high cycles there are per period for PWM3          </description>
        </field>
      </register>
      <register name="AFE_TEMP_SENSE_CTRL" address="0x400000B0" access="RW" resetvalue="0x00000000">
        <description>Temperature Sensor Control and Configuration</description>
        <field name="TEMP_SENSE_ENABLE" bitoffset="0" bitlength="1">
          <description>Enable temperature sensor circuitry
Values:
0x00 (TEMP_SENSE_DISABLE) - Disable the temperature sensor
0x01 (TEMP_SENSE_ENABLE) - Enable the temperature sensor
          </description>
        </field>
      </register>
      <register name="AFE_DAC0_REF_CTRL" address="0x400000C0" access="RW" resetvalue="0x00000001">
        <description>DAC0 Voltage Reference control</description>
        <field name="DAC0_REF_CTRL" bitoffset="0" bitlength="2">
          <description>Select reference for DAC0
Values:
0x00 (DAC0_REF_SELECT_VREF) - Select VREF as the DAC0 reference voltage
0x01 (DAC0_REF_SELECT_2VREF) - Select 2*VREF as the DAC0 reference voltage
0x02 (DAC0_REF_SELECT_3VREF) - Select 3*VREF as the DAC0 reference voltage
          </description>
        </field>
      </register>
      <register name="AFE_DAC_CTRL" address="0x400000C4" access="RW" resetvalue="0x00120000">
        <description>DAC Control and Configuration</description>
        <field name="MODE_SELECT_B" bitoffset="19" bitlength="2">
          <description>Select the operating mode for PGA1 input B
Values:
0x00 (PGA1_B_MODE_DISABLE) - Disable PGA1 input B
0x01 (PGA1_B_MODE_1) - Set PGA1 input B for high-range inputs
0x02 (PGA1_B_MODE_0) - Set PGA1 input B for low-range inputs
0x03 (PGA1_B_MODE_2) - Set PGA1 input B for full-range inputs
          </description>
        </field>
        <field name="MODE_SELECT_A" bitoffset="16" bitlength="2">
          <description>Select the operating mode for PGA1 input A
Values:
0x00 (PGA1_A_MODE_DISABLE) - Disable PGA1 input A
0x01 (PGA1_A_MODE_1) - Set PGA1 input A for high-range inputs
0x02 (PGA1_A_MODE_0) - Set PGA1 input A for low-range inputs
0x03 (PGA1_A_MODE_2) - Set PGA1 input A for full-range inputs
          </description>
        </field>
        <field name="DAC2_CUR" bitoffset="6" bitlength="2">
          <description>Select the DAC2 output drive current
Values:
0x00 (DAC2_CUR_NOMINAL) - Nominal DAC2 output drive current
0x01 (DAC2_CUR_4_NOMINAL) - DAC2 output drive current is 4 times nominal
0x02 (DAC2_CUR_10_NOMINAL) - DAC2 output drive current is 10 times nominal
0x03 (DAC2_CUR_20_NOMINAL) - DAC2 output drive current is 20 times nominal
          </description>
        </field>
        <field name="DAC2_ENABLE" bitoffset="4" bitlength="1">
          <description>Enable DAC2
Values:
0x00 (DAC2_DISABLE) - Disable DAC2
0x01 (DAC2_ENABLE) - Enable DAC2
          </description>
        </field>
        <field name="DAC1_ENABLE" bitoffset="2" bitlength="1">
          <description>Enable DAC1
Values:
0x00 (DAC1_DISABLE) - Disable DAC1
0x01 (DAC1_ENABLE) - Enable DAC1
          </description>
        </field>
        <field name="DAC0_ENABLE" bitoffset="0" bitlength="1">
          <description>Enable DAC0
Values:
0x00 (DAC0_DISABLE) - Disable DAC0
0x01 (DAC0_ENABLE) - Enable DAC0
          </description>
        </field>
      </register>
      <register name="AFE_DAC0_DATA" address="0x400000C8" access="RW" resetvalue="0x00000000">
        <description>DAC0 Input Data</description>
        <field name="DAC0_DATA" bitoffset="0" bitlength="10">
          <description>Input data for DAC0          </description>
        </field>
      </register>
      <register name="AFE_DAC1_DATA" address="0x400000CC" access="RW" resetvalue="0x00000000">
        <description>DAC1 Input Data</description>
        <field name="DAC1_DATA" bitoffset="0" bitlength="10">
          <description>Input data for DAC1          </description>
        </field>
      </register>
      <register name="AFE_DAC2_DATA" address="0x400000D0" access="RW" resetvalue="0x00000000">
        <description>DAC2 Input Data</description>
        <field name="DAC2_DATA" bitoffset="0" bitlength="10">
          <description>Input data for DAC2          </description>
        </field>
      </register>
      <register name="AFE_DAC01_DATA" address="0x400000D4" access="WO" resetvalue="0x00000000">
        <description>DAC 0 and DAC 1 Input Data</description>
        <field name="DAC0_DATA" bitoffset="16" bitlength="10">
          <description>Input data for DAC0          </description>
        </field>
        <field name="DAC1_DATA" bitoffset="0" bitlength="10">
          <description>Input data for DAC1          </description>
        </field>
      </register>
      <register name="AFE_RTC_CTRL" address="0x400000E0" access="RW" resetvalue="0x00000004">
        <description>RTC Clock Control</description>
        <field name="RTC_LOAD" bitoffset="3" bitlength="1">
          <description>Load the RTC counter and alarm configuration
Values:
0x01 (RTC_LOAD) - Load the RTC counter and alarm configuration
          </description>
        </field>
        <field name="RTC_BIAS_ENABLE" bitoffset="2" bitlength="1">
          <description>Enable the real-time clock
Values:
0x00 (RTC_DISABLE) - The real-time clock is disabled
0x01 (RTC_ENABLE) - The real-time clock is enabled
          </description>
        </field>
        <field name="ALARM_ENABLE" bitoffset="1" bitlength="1">
          <description>Alarm enable
Values:
0x00 (ALARM_DISABLE) - Disable the RTC alarm
0x01 (ALARM_ENABLE) - Enable the RTC alarm
          </description>
        </field>
        <field name="RTC_MODE_CFG" bitoffset="0" bitlength="1">
          <description>Set RTC operation mode
Values:
0x00 (RTC_RUN_MODE) - Run the RTC clock, maintaining a calculation of the current time
0x01 (RTC_SET_MODE) - Pause the RTC clock, allowing it to be set
          </description>
        </field>
      </register>
      <register name="AFE_RTC_COUNT" address="0x400000E4" access="RW" resetvalue="0x00000000">
        <description>RTC Count</description>
        <field name="RTC_COUNT" bitoffset="0" bitlength="32">
          <description>Current time based on the real-time clock          </description>
        </field>
      </register>
      <register name="AFE_RTC_ALARM" address="0x400000E8" access="RW" resetvalue="0x80000000">
        <description>RTC Alarm Count</description>
        <field name="RTC_ALARM_MODE" bitoffset="31" bitlength="1">
          <description>Select between relative and absolute alarm mode
Values:
0x00 (ALARM_ABSOLUTE_MODE) - The RTC alarm is triggered when RTC_ALARM matches the low 31 bits of RTC_COUNT
0x01 (ALARM_RELATIVE_MODE) - The RTC alarm is triggered every RTC_ALARM RTC clock cycles
          </description>
        </field>
        <field name="RTC_ALARM" bitoffset="0" bitlength="31">
          <description>Real-time clock alarm setting          </description>
        </field>
      </register>
      <register name="AFE_INTERRUPT_STATUS" address="0x400000F4" access="RW" resetvalue="0x00000000">
        <description>Analog Interrupt Status</description>
        <field name="WAKEUP_INT" bitoffset="7" bitlength="1">
          <description>Analog general-purpose wakeup (IF5, pin 0) was the wakeup source
Values:
0x00 (WAKEUP_INT_CLEARED) - No wakeup sources are active
0x01 (WAKEUP_INT_PEND) - A wakeup source is active and will pend the wakeup interrupt if active
          </description>
        </field>
        <field name="IF5_PIN3" bitoffset="6" bitlength="1">
          <description>General-purpose wakeup 3 (IF5, pin 3) was the wakeup source
Values:
0x00 (WAKEUP_IF5_PIN3_NOT_SET) - Wakeup on GPIO IF5, pin 3 source not set
0x01 (WAKEUP_IF5_PIN3_SET) - Wakeup on GPIO IF5, pin 3 source is set
0x01 (WAKEUP_IF5_PIN3_CLEAR) - Clear the IF5, pin 3 wakeup GPIO source
          </description>
        </field>
        <field name="IF5_PIN2" bitoffset="5" bitlength="1">
          <description>General-purpose wakeup 2 (IF5, pin 2) was the wakeup source
Values:
0x00 (WAKEUP_IF5_PIN2_NOT_SET) - Wakeup on GPIO IF5, pin 2 source not set
0x01 (WAKEUP_IF5_PIN2_SET) - Wakeup on GPIO IF5, pin 2 source is set
0x01 (WAKEUP_IF5_PIN2_CLEAR) - Clear the IF5, pin 2 wakeup GPIO source
          </description>
        </field>
        <field name="IF5_PIN1" bitoffset="4" bitlength="1">
          <description>General-purpose wakeup 1 (IF5, pin 1) was the wakeup source
Values:
0x00 (WAKEUP_IF5_PIN1_NOT_SET) - Wakeup on GPIO IF5, pin 1 source not set
0x01 (WAKEUP_IF5_PIN1_SET) - Wakeup on GPIO IF5, pin 1 source is set
0x01 (WAKEUP_IF5_PIN1_CLEAR) - Clear the IF5, pin 1 wakeup GPIO source
          </description>
        </field>
        <field name="RTC_CLOCK" bitoffset="3" bitlength="1">
          <description>Indicate if an RTC clock interrupt has occurred
Values:
0x00 (RTC_CLOCK_NOT_SET) - RTC clock interrupt has not occured
0x01 (RTC_CLOCK_SET) - RTC clock interrupt has occured
0x01 (RTC_CLOCK_CLEAR) - Clear the RTC clock interrupt
          </description>
        </field>
        <field name="RTC_ALARM" bitoffset="2" bitlength="1">
          <description>Indicate if an RTC alarm interrupt has occurred
Values:
0x00 (RTC_ALARM_NOT_SET) - RTC alarm has not occured
0x01 (RTC_ALARM_SET) - RTC alarm has occured
0x01 (RTC_ALARM_CLEAR) - Clear the RTC alarm interrupt
          </description>
        </field>
        <field name="IF5_PIN0" bitoffset="1" bitlength="1">
          <description>Indicate if an IF5, pin 0 specific wakeup interrupt has occurred
Values:
0x00 (WAKEUP_IF5_PIN0_NOT_SET) - Wakeup on GPIO IF5, pin 0 source not set
0x01 (WAKEUP_IF5_PIN0_SET) - Wakeup on GPIO IF5, pin 0 source is set
0x01 (WAKEUP_IF5_PIN0_CLEAR) - Clear the IF5, pin 0 wakeup GPIO source
          </description>
        </field>
        <field name="THRESHOLD_COMPARE" bitoffset="0" bitlength="1">
          <description>Indicate if a threshold comparator event has occurred
Values:
0x00 (THRESHOLD_COMPARE_NOT_SET) - Threshold comparator has not triggered
0x01 (THRESHOLD_COMPARE_SET) - Voltage threshold comparator has triggered
0x01 (THRESHOLD_COMPARE_CLEAR) - Clear the voltage threshold comparator status
          </description>
        </field>
      </register>
      <register name="AFE_RETENTION_DATA" address="0x400000F8" access="RW" resetvalue="0x00000000">
        <description>General-Purpose Data Retention</description>
        <field name="RETENTION_DATA" bitoffset="0" bitlength="8">
          <description>Data storage register that retains state while in sleep mode          </description>
        </field>
      </register>
    </registergroup>
    <registergroup name="DMA" description="DMA Controller Configuration and Control">
      <register name="DMA_CH0_CTRL0" address="0x40000200" access="RW" resetvalue="0x00000000">
        <description>DMA Channel 0 Control and Configuration</description>
        <field name="BYTE_ORDER" bitoffset="25" bitlength="1">
          <description>Select the byte ordering for the DMA channel
Values:
0x00 (DMA_CH0_LITTLE_ENDIAN) - DMA channel 0 uses little endian mode
0x01 (DMA_CH0_BIG_ENDIAN) - DMA channel 0 uses big endian mode
          </description>
        </field>
        <field name="DISABLE_INT_ENABLE" bitoffset="24" bitlength="1">
          <description>Raise an interrupt when the DMA channel is disabled
Values:
0x00 (DMA_CH0_DISABLE_INT_DISABLE) - Disable channel disable indicating interrupts for DMA channel 0
0x01 (DMA_CH0_DISABLE_INT_ENABLE) - Enable channel disable indicating interrupts for DMA channel 0
          </description>
        </field>
        <field name="ERROR_INT_ENABLE" bitoffset="23" bitlength="1">
          <description>Raise an interrupt when a state machine error occurs during a DMA transfer
Values:
0x00 (DMA_CH0_ERROR_INT_DISABLE) - Disable error indicating interrupts for DMA channel 0
0x01 (DMA_CH0_ERROR_INT_ENABLE) - Enable error indicating interrupts for DMA channel 0
          </description>
        </field>
        <field name="COMPLETE_INT_ENABLE" bitoffset="22" bitlength="1">
          <description>Raise an interrupt when the DMA transfer completes
Values:
0x00 (DMA_CH0_COMPLETE_INT_DISABLE) - Disable completion interrupts for DMA channel 0
0x01 (DMA_CH0_COMPLETE_INT_ENABLE) - Enable completion interrupts for DMA channel 0
          </description>
        </field>
        <field name="COUNTER_INT_ENABLE" bitoffset="21" bitlength="1">
          <description>Raise an interrupt when the DMA transfer reaches the counter value
Values:
0x00 (DMA_CH0_COUNTER_INT_DISABLE) - Disable counter interrupts for DMA channel 0
0x01 (DMA_CH0_COUNTER_INT_ENABLE) - Enable counter interrupts for DMA channel 0
          </description>
        </field>
        <field name="START_INT_ENABLE" bitoffset="20" bitlength="1">
          <description>Raise an interrupt when the DMA transfer starts
Values:
0x00 (DMA_CH0_START_INT_DISABLE) - Disable start interrupts for DMA channel 0
0x01 (DMA_CH0_START_INT_ENABLE) - Enable start interrupts for DMA channel 0
          </description>
        </field>
        <field name="DEST_WORD_SIZE" bitoffset="18" bitlength="2">
          <description>Select the destination word size
Values:
0x00 (DMA_CH0_DEST_WORD_SIZE_8) - Destination data uses 8-bit words
0x01 (DMA_CH0_DEST_WORD_SIZE_16) - Destination data uses 16-bit words
0x02 (DMA_CH0_DEST_WORD_SIZE_32) - Destination data uses 32-bit words
          </description>
        </field>
        <field name="SRC_WORD_SIZE" bitoffset="16" bitlength="2">
          <description>Select the source word size
Values:
0x00 (DMA_CH0_SRC_WORD_SIZE_8) - Source data uses 8-bit words
0x01 (DMA_CH0_SRC_WORD_SIZE_16) - Source data uses 16-bit words
0x02 (DMA_CH0_SRC_WORD_SIZE_32) - Source data uses 32-bit words
          </description>
        </field>
        <field name="DEST_SELECT" bitoffset="12" bitlength="4">
          <description>Select the request line for the destination
Values:
0x01 (DMA_CH0_DEST_DAC0) - Data writes are controlled by the DAC0 request line
0x02 (DMA_CH0_DEST_DAC1) - Data writes are controlled by the DAC1 request line
0x03 (DMA_CH0_DEST_USB) - Data writes are controlled by the USB request line
0x06 (DMA_CH0_DEST_PCM) - Data writes are controlled by the PCM request line
0x07 (DMA_CH0_DEST_SPI0) - Data writes are controlled by the SPI0 request line
0x08 (DMA_CH0_DEST_SPI1) - Data writes are controlled by the SPI1 request line
0x09 (DMA_CH0_DEST_I2C) - Data writes are controlled by the I2C request line
0x0A (DMA_CH0_DEST_UART0) - Data writes are controlled by the UART0 request line
0x0B (DMA_CH0_DEST_UART1) - Data writes are controlled by the UART1 request line
          </description>
        </field>
        <field name="SRC_SELECT" bitoffset="8" bitlength="4">
          <description>Select the request line for the source
Values:
0x00 (DMA_CH0_SRC_ADC) - Data reads are controlled by the ADC request line
0x03 (DMA_CH0_SRC_USB) - Data reads are controlled by the USB  request line
0x06 (DMA_CH0_SRC_PCM) - Data reads are controlled by the PCM request line
0x07 (DMA_CH0_SRC_SPI0) - Data reads are controlled by the SPI0 request line
0x08 (DMA_CH0_SRC_SPI1) - Data reads are controlled by the SPI1 request line
0x09 (DMA_CH0_SRC_I2C) - Data reads are controlled by the I2C request line
0x0A (DMA_CH0_SRC_UART0) - Data reads are controlled by the UART0 request line
0x0B (DMA_CH0_SRC_UART1) - Data reads are controlled by the UART1 request line
          </description>
        </field>
        <field name="CHANNEL_PRIORITY" bitoffset="6" bitlength="2">
          <description>Select the priority level for this channel
Values:
0x00 (DMA_CH0_PRIORITY_0) - Set the priority of DMA channel 0 to 0 (Highest)
0x01 (DMA_CH0_PRIORITY_1) - Set the priority of DMA channel 0 to 1
0x02 (DMA_CH0_PRIORITY_2) - Set the priority of DMA channel 0 to 2
0x03 (DMA_CH0_PRIORITY_3) - Set the priority of DMA channel 0 to 3 (Lowest)
          </description>
        </field>
        <field name="TRANSFER_TYPE" bitoffset="4" bitlength="2">
          <description>Select the type of transfer implemented by DMA channel 0
Values:
0x00 (DMA_CH0_TRANSFER_M_TO_M) - DMA channel 0 will provide a memory-to-memory data transfer
0x01 (DMA_CH0_TRANSFER_M_TO_P) - DMA channel 0 will provide a memory-to-peripheral data transfer
0x02 (DMA_CH0_TRANSFER_P_TO_M) - DMA channel 0 will provide a peripheral to memory data transfer
          </description>
        </field>
        <field name="DEST_ADDR_INC" bitoffset="3" bitlength="1">
          <description>Configure whether the destination address will be incremented
Values:
0x00 (DMA_CH0_DEST_ADDR_STATIC) - Do not increment the destination address used by DMA channel 0
0x01 (DMA_CH0_DEST_ADDR_INC) - Increment destination address used by DMA channel 0
          </description>
        </field>
        <field name="SRC_ADDR_INC" bitoffset="2" bitlength="1">
          <description>Configure whether the source address will be incremented
Values:
0x00 (DMA_CH0_SRC_ADDR_STATIC) - Do not increment the source address used by DMA channel 0
0x01 (DMA_CH0_SRC_ADDR_INC) - Increment source address used by DMA channel 0
          </description>
        </field>
        <field name="ADDR_MODE" bitoffset="1" bitlength="1">
          <description>Select the addressing mode for this channel
Values:
0x00 (DMA_CH0_ADDR_CIRC) - Use circular addressing for DMA channel 0
0x01 (DMA_CH0_ADDR_LIN) - Use linear addressing for DMA channel 0
          </description>
        </field>
        <field name="ENABLE" bitoffset="0" bitlength="1">
          <description>Enable DMA Channel 0
Values:
0x00 (DMA_CH0_DISABLE) - Disable DMA channel 0
0x01 (DMA_CH0_ENABLE) - Enable DMA channel 0
          </description>
        </field>
      </register>
      <register name="DMA_CH0_SRC_BASE_ADDR" address="0x40000204" access="RW" resetvalue="0x00000000">
        <description>DMA Channel 0 Source Base Address</description>
        <field name="DMA_CH0_SRC_BASE_ADDR" bitoffset="0" bitlength="32">
          <description>Base address for the source of data transferred using DMA channel 0          </description>
        </field>
      </register>
      <register name="DMA_CH0_DEST_BASE_ADDR" address="0x40000208" access="RW" resetvalue="0x00000000">
        <description>DMA Channel 0 Destination Base Address</description>
        <field name="DMA_CH0_DEST_BASE_ADDR" bitoffset="0" bitlength="32">
          <description>Base address for the destination of data transferred using DMA channel 0          </description>
        </field>
      </register>
      <register name="DMA_CH0_CTRL1" address="0x4000020C" access="RW" resetvalue="0x00000000">
        <description>DMA Channel 0 Transfer Control</description>
        <field name="COUNTER_INT_VALUE" bitoffset="16" bitlength="16">
          <description>Raise an interrupt when the DMA transfer word count reaches this value          </description>
        </field>
        <field name="TRANSFER_LENGTH" bitoffset="0" bitlength="16">
          <description>The length, in words, of each data transfer using DMA channel 0          </description>
        </field>
      </register>
      <register name="DMA_CH0_NEXT_SRC_ADDR" address="0x40000210" access="RO" resetvalue="0x00000000">
        <description>DMA Channel 0 Next Source Address</description>
        <field name="DMA_CH0_NEXT_SRC_ADDR" bitoffset="0" bitlength="32">
          <description>Address of the next data to be transferred using DMA channel 0          </description>
        </field>
      </register>
      <register name="DMA_CH0_NEXT_DEST_ADDR" address="0x40000214" access="RO" resetvalue="0x00000000">
        <description>DMA Channel 0 Next Destination Address</description>
        <field name="DMA_CH0_NEXT_DEST_ADDR" bitoffset="0" bitlength="32">
          <description>Address where the next data to be transferred using DMA channel 0 will be stored          </description>
        </field>
      </register>
      <register name="DMA_CH0_WORD_CNT" address="0x40000218" access="RO" resetvalue="0x00000000">
        <description>DMA Channel 0 Word Count</description>
        <field name="DMA_CH0_WORD_CNT" bitoffset="0" bitlength="16">
          <description>The number of words that have been transferred using DMA channel 0 during the current transfer          </description>
        </field>
      </register>
      <register name="DMA_CH1_CTRL0" address="0x40000220" access="RW" resetvalue="0x00000000">
        <description>DMA channel 1 Control and Configuration</description>
        <field name="BYTE_ORDER" bitoffset="25" bitlength="1">
          <description>Select the byte ordering for the DMA channel
Values:
0x00 (DMA_CH1_LITTLE_ENDIAN) - DMA channel 1 uses little endian mode
0x01 (DMA_CH1_BIG_ENDIAN) - DMA channel 1 uses big endian mode
          </description>
        </field>
        <field name="DISABLE_INT_ENABLE" bitoffset="24" bitlength="1">
          <description>Raise an interrupt when the DMA channel is disabled
Values:
0x00 (DMA_CH1_DISABLE_INT_DISABLE) - Disable channel disable indicating interrupts for DMA channel 1
0x01 (DMA_CH1_DISABLE_INT_ENABLE) - Enable channel disable indicating interrupts for DMA channel 1
          </description>
        </field>
        <field name="ERROR_INT_ENABLE" bitoffset="23" bitlength="1">
          <description>Raise an interrupt when a state machine error occurs during a DMA transfer
Values:
0x00 (DMA_CH1_ERROR_INT_DISABLE) - Disable error indicating interrupts for DMA channel 1
0x01 (DMA_CH1_ERROR_INT_ENABLE) - Enable error indicating interrupts for DMA channel 1
          </description>
        </field>
        <field name="COMPLETE_INT_ENABLE" bitoffset="22" bitlength="1">
          <description>Raise an interrupt when the DMA transfer completes
Values:
0x00 (DMA_CH1_COMPLETE_INT_DISABLE) - Disable completion interrupts for DMA channel 1
0x01 (DMA_CH1_COMPLETE_INT_ENABLE) - Enable completion interrupts for DMA channel 1
          </description>
        </field>
        <field name="COUNTER_INT_ENABLE" bitoffset="21" bitlength="1">
          <description>Raise an interrupt when the DMA transfer reaches the counter value
Values:
0x00 (DMA_CH1_COUNTER_INT_DISABLE) - Disable counter interrupts for DMA channel 1
0x01 (DMA_CH1_COUNTER_INT_ENABLE) - Enable counter interrupts for DMA channel 1
          </description>
        </field>
        <field name="START_INT_ENABLE" bitoffset="20" bitlength="1">
          <description>Raise an interrupt when the DMA transfer starts
Values:
0x00 (DMA_CH1_START_INT_DISABLE) - Disable start interrupts for DMA channel 1
0x01 (DMA_CH1_START_INT_ENABLE) - Enable start interrupts for DMA channel 1
          </description>
        </field>
        <field name="DEST_WORD_SIZE" bitoffset="18" bitlength="2">
          <description>Select the destination word size
Values:
0x00 (DMA_CH1_DEST_WORD_SIZE_8) - Destination data uses 8-bit words
0x01 (DMA_CH1_DEST_WORD_SIZE_16) - Destination data uses 16-bit words
0x02 (DMA_CH1_DEST_WORD_SIZE_32) - Destination data uses 32-bit words
          </description>
        </field>
        <field name="SRC_WORD_SIZE" bitoffset="16" bitlength="2">
          <description>Select the source word size
Values:
0x00 (DMA_CH1_SRC_WORD_SIZE_8) - Source data uses 8-bit words
0x01 (DMA_CH1_SRC_WORD_SIZE_16) - Source data uses 16-bit words
0x02 (DMA_CH1_SRC_WORD_SIZE_32) - Source data uses 32-bit words
          </description>
        </field>
        <field name="DEST_SELECT" bitoffset="12" bitlength="4">
          <description>Select the request line for the destination
Values:
0x01 (DMA_CH1_DEST_DAC0) - Data writes are controlled by the DAC0 request line
0x02 (DMA_CH1_DEST_DAC1) - Data writes are controlled by the DAC1 request line
0x03 (DMA_CH1_DEST_USB) - Data writes are controlled by the USB request line
0x06 (DMA_CH1_DEST_PCM) - Data writes are controlled by the PCM request line
0x07 (DMA_CH1_DEST_SPI0) - Data writes are controlled by the SPI0 request line
0x08 (DMA_CH1_DEST_SPI1) - Data writes are controlled by the SPI1 request line
0x09 (DMA_CH1_DEST_I2C) - Data writes are controlled by the I2C request line
0x0A (DMA_CH1_DEST_UART0) - Data writes are controlled by the UART0 request line
0x0B (DMA_CH1_DEST_UART1) - Data writes are controlled by the UART1 request line
          </description>
        </field>
        <field name="SRC_SELECT" bitoffset="8" bitlength="4">
          <description>Select the request line for the source
Values:
0x00 (DMA_CH1_SRC_ADC) - Data reads are controlled by the ADC request line
0x03 (DMA_CH1_SRC_USB) - Data reads are controlled by the USB request line
0x06 (DMA_CH1_SRC_PCM) - Data reads are controlled by the PCM request line
0x07 (DMA_CH1_SRC_SPI0) - Data reads are controlled by the SPI0 request line
0x08 (DMA_CH1_SRC_SPI1) - Data reads are controlled by the SPI1 request line
0x09 (DMA_CH1_SRC_I2C) - Data reads are controlled by the I2C request line
0x0A (DMA_CH1_SRC_UART0) - Data reads are controlled by the UART0 request line
0x0B (DMA_CH1_SRC_UART1) - Data reads are controlled by the UART1 request line
          </description>
        </field>
        <field name="CHANNEL_PRIORITY" bitoffset="6" bitlength="2">
          <description>Select the priority level for this channel
Values:
0x00 (DMA_CH1_PRIORITY_0) - Set the priority of DMA channel 1 to 0 (Highest)
0x01 (DMA_CH1_PRIORITY_1) - Set the priority of DMA channel 1 to 1
0x02 (DMA_CH1_PRIORITY_2) - Set the priority of DMA channel 1 to 2
0x03 (DMA_CH1_PRIORITY_3) - Set the priority of DMA channel 1 to 3 (Lowest)
          </description>
        </field>
        <field name="TRANSFER_TYPE" bitoffset="4" bitlength="2">
          <description>Select the type of transfer implemented by DMA channel 1
Values:
0x00 (DMA_CH1_TRANSFER_M_TO_M) - DMA channel 1 will provide a memory-to-memory data transfer
0x01 (DMA_CH1_TRANSFER_M_TO_P) - DMA channel 1 will provide a memory-to-peripheral data transfer
0x02 (DMA_CH1_TRANSFER_P_TO_M) - DMA channel 1 will provide a peripheral to memory data transfer
          </description>
        </field>
        <field name="DEST_ADDR_INC" bitoffset="3" bitlength="1">
          <description>Configure whether the destination address will be incremented
Values:
0x00 (DMA_CH1_DEST_ADDR_STATIC) - Do not increment the destination address used by DMA channel 1
0x01 (DMA_CH1_DEST_ADDR_INC) - Increment destination address used by DMA channel 1
          </description>
        </field>
        <field name="SRC_ADDR_INC" bitoffset="2" bitlength="1">
          <description>Configure whether the source address will be incremented
Values:
0x00 (DMA_CH1_SRC_ADDR_STATIC) - Do not increment the source address used by DMA channel 1
0x01 (DMA_CH1_SRC_ADDR_INC) - Increment source address used by DMA channel 1
          </description>
        </field>
        <field name="ADDR_MODE" bitoffset="1" bitlength="1">
          <description>Select the addressing mode for this channel
Values:
0x00 (DMA_CH1_ADDR_CIRC) - Use circular addressing for DMA channel 1
0x01 (DMA_CH1_ADDR_LIN) - Use linear addressing for DMA channel 1
          </description>
        </field>
        <field name="ENABLE" bitoffset="0" bitlength="1">
          <description>Enable DMA channel 1
Values:
0x00 (DMA_CH1_DISABLE) - Disable DMA channel 1
0x01 (DMA_CH1_ENABLE) - Enable DMA channel 1
          </description>
        </field>
      </register>
      <register name="DMA_CH1_SRC_BASE_ADDR" address="0x40000224" access="RW" resetvalue="0x00000000">
        <description>DMA channel 1 Source Base Address</description>
        <field name="DMA_CH1_SRC_BASE_ADDR" bitoffset="0" bitlength="32">
          <description>Base address for the source of data transferred using DMA channel 1          </description>
        </field>
      </register>
      <register name="DMA_CH1_DEST_BASE_ADDR" address="0x40000228" access="RW" resetvalue="0x00000000">
        <description>DMA channel 1 Destination Base Address</description>
        <field name="DMA_CH1_DEST_BASE_ADDR" bitoffset="0" bitlength="32">
          <description>Base address for the destination of data transferred using DMA channel 1          </description>
        </field>
      </register>
      <register name="DMA_CH1_CTRL1" address="0x4000022C" access="RW" resetvalue="0x00000000">
        <description>DMA channel 1 Transfer Control</description>
        <field name="COUNTER_INT_VALUE" bitoffset="16" bitlength="16">
          <description>Raise an interrupt when the DMA transfer word count reaches this value          </description>
        </field>
        <field name="TRANSFER_LENGTH" bitoffset="0" bitlength="16">
          <description>The length, in words, of each data transfer using DMA channel 1          </description>
        </field>
      </register>
      <register name="DMA_CH1_NEXT_SRC_ADDR" address="0x40000230" access="RO" resetvalue="0x00000000">
        <description>DMA channel 1 Next Source Address</description>
        <field name="DMA_CH1_NEXT_SRC_ADDR" bitoffset="0" bitlength="32">
          <description>Address of the next data to be transferred using DMA channel 1          </description>
        </field>
      </register>
      <register name="DMA_CH1_NEXT_DEST_ADDR" address="0x40000234" access="RO" resetvalue="0x00000000">
        <description>DMA channel 1 Next Destination Address</description>
        <field name="DMA_CH1_NEXT_DEST_ADDR" bitoffset="0" bitlength="32">
          <description>Address where the next data to be transferred using DMA channel 1 will be stored          </description>
        </field>
      </register>
      <register name="DMA_CH1_WORD_CNT" address="0x40000238" access="RO" resetvalue="0x00000000">
        <description>DMA channel 1 Word Count</description>
        <field name="DMA_CH1_WORD_CNT" bitoffset="0" bitlength="16">
          <description>The number of words that have been transferred using DMA channel 1 during the current transfer          </description>
        </field>
      </register>
      <register name="DMA_CH2_CTRL0" address="0x40000240" access="RW" resetvalue="0x00000000">
        <description>DMA channel 2 Control and Configuration</description>
        <field name="BYTE_ORDER" bitoffset="25" bitlength="1">
          <description>Select the byte ordering for the DMA channel
Values:
0x00 (DMA_CH2_LITTLE_ENDIAN) - DMA channel 2 uses little endian mode
0x01 (DMA_CH2_BIG_ENDIAN) - DMA channel 2 uses big endian mode
          </description>
        </field>
        <field name="DISABLE_INT_ENABLE" bitoffset="24" bitlength="1">
          <description>Raise an interrupt when the DMA channel is disabled
Values:
0x00 (DMA_CH2_DISABLE_INT_DISABLE) - Disable channel disable indicating interrupts for DMA channel 2
0x01 (DMA_CH2_DISABLE_INT_ENABLE) - Enable channel disable indicating interrupts for DMA channel 2
          </description>
        </field>
        <field name="ERROR_INT_ENABLE" bitoffset="23" bitlength="1">
          <description>Raise an interrupt when a state machine error occurs during a DMA transfer
Values:
0x00 (DMA_CH2_ERROR_INT_DISABLE) - Disable error indicating interrupts for DMA channel 2
0x01 (DMA_CH2_ERROR_INT_ENABLE) - Enable error indicating interrupts for DMA channel 2
          </description>
        </field>
        <field name="COMPLETE_INT_ENABLE" bitoffset="22" bitlength="1">
          <description>Raise an interrupt when the DMA transfer completes
Values:
0x00 (DMA_CH2_COMPLETE_INT_DISABLE) - Disable completion interrupts for DMA channel 2
0x01 (DMA_CH2_COMPLETE_INT_ENABLE) - Enable completion interrupts for DMA channel 2
          </description>
        </field>
        <field name="COUNTER_INT_ENABLE" bitoffset="21" bitlength="1">
          <description>Raise an interrupt when the DMA transfer reaches the counter value
Values:
0x00 (DMA_CH2_COUNTER_INT_DISABLE) - Disable counter interrupts for DMA channel 2
0x01 (DMA_CH2_COUNTER_INT_ENABLE) - Enable counter interrupts for DMA channel 2
          </description>
        </field>
        <field name="START_INT_ENABLE" bitoffset="20" bitlength="1">
          <description>Raise an interrupt when the DMA transfer starts
Values:
0x00 (DMA_CH2_START_INT_DISABLE) - Disable start interrupts for DMA channel 2
0x01 (DMA_CH2_START_INT_ENABLE) - Enable start interrupts for DMA channel 2
          </description>
        </field>
        <field name="DEST_WORD_SIZE" bitoffset="18" bitlength="2">
          <description>Select the destination word size
Values:
0x00 (DMA_CH2_DEST_WORD_SIZE_8) - Destination data uses 8-bit words
0x01 (DMA_CH2_DEST_WORD_SIZE_16) - Destination data uses 16-bit words
0x02 (DMA_CH2_DEST_WORD_SIZE_32) - Destination data uses 32-bit words
          </description>
        </field>
        <field name="SRC_WORD_SIZE" bitoffset="16" bitlength="2">
          <description>Select the source word size
Values:
0x00 (DMA_CH2_SRC_WORD_SIZE_8) - Source data uses 8-bit words
0x01 (DMA_CH2_SRC_WORD_SIZE_16) - Source data uses 16-bit words
0x02 (DMA_CH2_SRC_WORD_SIZE_32) - Source data uses 32-bit words
          </description>
        </field>
        <field name="DEST_SELECT" bitoffset="12" bitlength="4">
          <description>Select the request line for the destination
Values:
0x01 (DMA_CH2_DEST_DAC0) - Data writes are controlled by the DAC0 request line
0x02 (DMA_CH2_DEST_DAC1) - Data writes are controlled by the DAC1 request line
0x03 (DMA_CH2_DEST_USB) - Data writes are controlled by the USB request line
0x06 (DMA_CH2_DEST_PCM) - Data writes are controlled by the PCM request line
0x07 (DMA_CH2_DEST_SPI0) - Data writes are controlled by the SPI0 request line
0x08 (DMA_CH2_DEST_SPI1) - Data writes are controlled by the SPI1 request line
0x09 (DMA_CH2_DEST_I2C) - Data writes are controlled by the I2C request line
0x0A (DMA_CH2_DEST_UART0) - Data writes are controlled by the UART0 request line
0x0B (DMA_CH2_DEST_UART1) - Data writes are controlled by the UART1 request line
          </description>
        </field>
        <field name="SRC_SELECT" bitoffset="8" bitlength="4">
          <description>Select the request line for the source
Values:
0x00 (DMA_CH2_SRC_ADC) - Data reads are controlled by the ADC request line
0x03 (DMA_CH2_SRC_USB) - Data reads are controlled by the USB  request line
0x06 (DMA_CH2_SRC_PCM) - Data reads are controlled by the PCM request line
0x07 (DMA_CH2_SRC_SPI0) - Data reads are controlled by the SPI0 request line
0x08 (DMA_CH2_SRC_SPI1) - Data reads are controlled by the SPI1 request line
0x09 (DMA_CH2_SRC_I2C) - Data reads are controlled by the I2C request line
0x0A (DMA_CH2_SRC_UART0) - Data reads are controlled by the UART0 request line
0x0B (DMA_CH2_SRC_UART1) - Data reads are controlled by the UART1 request line
          </description>
        </field>
        <field name="CHANNEL_PRIORITY" bitoffset="6" bitlength="2">
          <description>Select the priority level for this channel
Values:
0x00 (DMA_CH2_PRIORITY_0) - Set the priority of DMA channel 2 to 0 (Highest)
0x01 (DMA_CH2_PRIORITY_1) - Set the priority of DMA channel 2 to 1
0x02 (DMA_CH2_PRIORITY_2) - Set the priority of DMA channel 2 to 2
0x03 (DMA_CH2_PRIORITY_3) - Set the priority of DMA channel 2 to 3 (Lowest)
          </description>
        </field>
        <field name="TRANSFER_TYPE" bitoffset="4" bitlength="2">
          <description>Select the type of transfer implemented by DMA channel 2
Values:
0x00 (DMA_CH2_TRANSFER_M_TO_M) - DMA channel 2 will provide a memory-to-memory data transfer
0x01 (DMA_CH2_TRANSFER_M_TO_P) - DMA channel 2 will provide a memory-to-peripheral data transfer
0x02 (DMA_CH2_TRANSFER_P_TO_M) - DMA channel 2 will provide a peripheral to memory data transfer
          </description>
        </field>
        <field name="DEST_ADDR_INC" bitoffset="3" bitlength="1">
          <description>Configure whether the destination address will be incremented
Values:
0x00 (DMA_CH2_DEST_ADDR_STATIC) - Do not increment the destination address used by DMA channel 2
0x01 (DMA_CH2_DEST_ADDR_INC) - Increment destination address used by DMA channel 2
          </description>
        </field>
        <field name="SRC_ADDR_INC" bitoffset="2" bitlength="1">
          <description>Configure whether the source address will be incremented
Values:
0x00 (DMA_CH2_SRC_ADDR_STATIC) - Do not increment the source address used by DMA channel 2
0x01 (DMA_CH2_SRC_ADDR_INC) - Increment source address used by DMA channel 2
          </description>
        </field>
        <field name="ADDR_MODE" bitoffset="1" bitlength="1">
          <description>Select the addressing mode for this channel
Values:
0x00 (DMA_CH2_ADDR_CIRC) - Use circular addressing for DMA channel 2
0x01 (DMA_CH2_ADDR_LIN) - Use linear addressing for DMA channel 2
          </description>
        </field>
        <field name="ENABLE" bitoffset="0" bitlength="1">
          <description>Enable DMA channel 2
Values:
0x00 (DMA_CH2_DISABLE) - Disable DMA channel 2
0x01 (DMA_CH2_ENABLE) - Enable DMA channel 2
          </description>
        </field>
      </register>
      <register name="DMA_CH2_SRC_BASE_ADDR" address="0x40000244" access="RW" resetvalue="0x00000000">
        <description>DMA channel 2 Source Base Address</description>
        <field name="DMA_CH2_SRC_BASE_ADDR" bitoffset="0" bitlength="32">
          <description>Base address for the source of data transferred using DMA channel 2          </description>
        </field>
      </register>
      <register name="DMA_CH2_DEST_BASE_ADDR" address="0x40000248" access="RW" resetvalue="0x00000000">
        <description>DMA channel 2 Destination Base Address</description>
        <field name="DMA_CH2_DEST_BASE_ADDR" bitoffset="0" bitlength="32">
          <description>Base address for the destination of data transferred using DMA channel 2          </description>
        </field>
      </register>
      <register name="DMA_CH2_CTRL1" address="0x4000024C" access="RW" resetvalue="0x00000000">
        <description>DMA channel 2 Transfer Control</description>
        <field name="COUNTER_INT_VALUE" bitoffset="16" bitlength="16">
          <description>Raise an interrupt when the DMA transfer word count reaches this value          </description>
        </field>
        <field name="TRANSFER_LENGTH" bitoffset="0" bitlength="16">
          <description>The length, in words, of each data transfer using DMA channel 2          </description>
        </field>
      </register>
      <register name="DMA_CH2_NEXT_SRC_ADDR" address="0x40000250" access="RO" resetvalue="0x00000000">
        <description>DMA channel 2 Next Source Address</description>
        <field name="DMA_CH2_NEXT_SRC_ADDR" bitoffset="0" bitlength="32">
          <description>Address of the next data to be transferred using DMA channel 2          </description>
        </field>
      </register>
      <register name="DMA_CH2_NEXT_DEST_ADDR" address="0x40000254" access="RO" resetvalue="0x00000000">
        <description>DMA channel 2 Next Destination Address</description>
        <field name="DMA_CH2_NEXT_DEST_ADDR" bitoffset="0" bitlength="32">
          <description>Address where the next data to be transferred using DMA channel 2 will be stored          </description>
        </field>
      </register>
      <register name="DMA_CH2_WORD_CNT" address="0x40000258" access="RO" resetvalue="0x00000000">
        <description>DMA channel 2 Word Count</description>
        <field name="DMA_CH2_WORD_CNT" bitoffset="0" bitlength="16">
          <description>The number of words that have been transferred using DMA channel 2 during the current transfer          </description>
        </field>
      </register>
      <register name="DMA_CH3_CTRL0" address="0x40000260" access="RW" resetvalue="0x00000000">
        <description>DMA channel 3 Control and Configuration</description>
        <field name="BYTE_ORDER" bitoffset="25" bitlength="1">
          <description>Select the byte ordering for the DMA channel
Values:
0x00 (DMA_CH3_LITTLE_ENDIAN) - DMA channel 3 uses little endian mode
0x01 (DMA_CH3_BIG_ENDIAN) - DMA channel 3 uses big endian mode
          </description>
        </field>
        <field name="DISABLE_INT_ENABLE" bitoffset="24" bitlength="1">
          <description>Raise an interrupt when the DMA channel is disabled
Values:
0x00 (DMA_CH3_DISABLE_INT_DISABLE) - Disable channel disable indicating interrupts for DMA channel 3
0x01 (DMA_CH3_DISABLE_INT_ENABLE) - Enable channel disable indicating interrupts for DMA channel 3
          </description>
        </field>
        <field name="ERROR_INT_ENABLE" bitoffset="23" bitlength="1">
          <description>Raise an interrupt when a state machine error occurs during a DMA transfer
Values:
0x00 (DMA_CH3_ERROR_INT_DISABLE) - Disable error indicating interrupts for DMA channel 3
0x01 (DMA_CH3_ERROR_INT_ENABLE) - Enable error indicating interrupts for DMA channel 3
          </description>
        </field>
        <field name="COMPLETE_INT_ENABLE" bitoffset="22" bitlength="1">
          <description>Raise an interrupt when the DMA transfer completes
Values:
0x00 (DMA_CH3_COMPLETE_INT_DISABLE) - Disable completion interrupts for DMA channel 3
0x01 (DMA_CH3_COMPLETE_INT_ENABLE) - Enable completion interrupts for DMA channel 3
          </description>
        </field>
        <field name="COUNTER_INT_ENABLE" bitoffset="21" bitlength="1">
          <description>Raise an interrupt when the DMA transfer reaches the counter value
Values:
0x00 (DMA_CH3_COUNTER_INT_DISABLE) - Disable counter interrupts for DMA channel 3
0x01 (DMA_CH3_COUNTER_INT_ENABLE) - Enable counter interrupts for DMA channel 3
          </description>
        </field>
        <field name="START_INT_ENABLE" bitoffset="20" bitlength="1">
          <description>Raise an interrupt when the DMA transfer starts
Values:
0x00 (DMA_CH3_START_INT_DISABLE) - Disable start interrupts for DMA channel 3
0x01 (DMA_CH3_START_INT_ENABLE) - Enable start interrupts for DMA channel 3
          </description>
        </field>
        <field name="DEST_WORD_SIZE" bitoffset="18" bitlength="2">
          <description>Select the destination word size
Values:
0x00 (DMA_CH3_DEST_WORD_SIZE_8) - Destination data uses 8-bit words
0x01 (DMA_CH3_DEST_WORD_SIZE_16) - Destination data uses 16-bit words
0x02 (DMA_CH3_DEST_WORD_SIZE_32) - Destination data uses 32-bit words
          </description>
        </field>
        <field name="SRC_WORD_SIZE" bitoffset="16" bitlength="2">
          <description>Select the source word size
Values:
0x00 (DMA_CH3_SRC_WORD_SIZE_8) - Source data uses 8-bit words
0x01 (DMA_CH3_SRC_WORD_SIZE_16) - Source data uses 16-bit words
0x02 (DMA_CH3_SRC_WORD_SIZE_32) - Source data uses 32-bit words
          </description>
        </field>
        <field name="DEST_SELECT" bitoffset="12" bitlength="4">
          <description>Select the request line for the destination
Values:
0x01 (DMA_CH3_DEST_DAC0) - Data writes are controlled by the DAC0 request line
0x02 (DMA_CH3_DEST_DAC1) - Data writes are controlled by the DAC1 request line
0x03 (DMA_CH3_DEST_USB) - Data writes are controlled by the USB request line
0x06 (DMA_CH3_DEST_PCM) - Data writes are controlled by the PCM request line
0x07 (DMA_CH3_DEST_SPI0) - Data writes are controlled by the SPI0 request line
0x08 (DMA_CH3_DEST_SPI1) - Data writes are controlled by the SPI1 request line
0x09 (DMA_CH3_DEST_I2C) - Data writes are controlled by the I2C request line
0x0A (DMA_CH3_DEST_UART0) - Data writes are controlled by the UART0 request line
0x0B (DMA_CH3_DEST_UART1) - Data writes are controlled by the UART1 request line
          </description>
        </field>
        <field name="SRC_SELECT" bitoffset="8" bitlength="4">
          <description>Select the request line for the source
Values:
0x00 (DMA_CH3_SRC_ADC) - Data reads are controlled by the ADC request line
0x03 (DMA_CH3_SRC_USB) - Data reads are controlled by the USB request line
0x06 (DMA_CH3_SRC_PCM) - Data reads are controlled by the PCM request line
0x07 (DMA_CH3_SRC_SPI0) - Data reads are controlled by the SPI0 request line
0x08 (DMA_CH3_SRC_SPI1) - Data reads are controlled by the SPI1 request line
0x09 (DMA_CH3_SRC_I2C) - Data reads are controlled by the I2C request line
0x0A (DMA_CH3_SRC_UART0) - Data reads are controlled by the UART0 request line
0x0B (DMA_CH3_SRC_UART1) - Data reads are controlled by the UART1 request line
          </description>
        </field>
        <field name="CHANNEL_PRIORITY" bitoffset="6" bitlength="2">
          <description>Select the priority level for this channel
Values:
0x00 (DMA_CH3_PRIORITY_0) - Set the priority of DMA channel 3 to 0 (Highest)
0x01 (DMA_CH3_PRIORITY_1) - Set the priority of DMA channel 3 to 1
0x02 (DMA_CH3_PRIORITY_2) - Set the priority of DMA channel 3 to 2
0x03 (DMA_CH3_PRIORITY_3) - Set the priority of DMA channel 3 to 3 (Lowest)
          </description>
        </field>
        <field name="TRANSFER_TYPE" bitoffset="4" bitlength="2">
          <description>Select the type of transfer implemented by DMA channel 3
Values:
0x00 (DMA_CH3_TRANSFER_M_TO_M) - DMA channel 3 will provide a memory-to-memory data transfer
0x01 (DMA_CH3_TRANSFER_M_TO_P) - DMA channel 3 will provide a memory-to-peripheral data transfer
0x02 (DMA_CH3_TRANSFER_P_TO_M) - DMA channel 3 will provide a peripheral to memory data transfer
          </description>
        </field>
        <field name="DEST_ADDR_INC" bitoffset="3" bitlength="1">
          <description>Configure whether the destination address will be incremented
Values:
0x00 (DMA_CH3_DEST_ADDR_STATIC) - Do not increment the destination address used by DMA channel 3
0x01 (DMA_CH3_DEST_ADDR_INC) - Increment destination address used by DMA channel 3
          </description>
        </field>
        <field name="SRC_ADDR_INC" bitoffset="2" bitlength="1">
          <description>Configure whether the source address will be incremented
Values:
0x00 (DMA_CH3_SRC_ADDR_STATIC) - Do not increment the source address used by DMA channel 3
0x01 (DMA_CH3_SRC_ADDR_INC) - Increment source address used by DMA channel 3
          </description>
        </field>
        <field name="ADDR_MODE" bitoffset="1" bitlength="1">
          <description>Select the addressing mode for this channel
Values:
0x00 (DMA_CH3_ADDR_CIRC) - Use circular addressing for DMA channel 3
0x01 (DMA_CH3_ADDR_LIN) - Use linear addressing for DMA channel 3
          </description>
        </field>
        <field name="ENABLE" bitoffset="0" bitlength="1">
          <description>Enable DMA channel 3
Values:
0x00 (DMA_CH3_DISABLE) - Disable DMA channel 3
0x01 (DMA_CH3_ENABLE) - Enable DMA channel 3
          </description>
        </field>
      </register>
      <register name="DMA_CH3_SRC_BASE_ADDR" address="0x40000264" access="RW" resetvalue="0x00000000">
        <description>DMA channel 3 Source Base Address</description>
        <field name="DMA_CH3_SRC_BASE_ADDR" bitoffset="0" bitlength="32">
          <description>Base address for the source of data transferred using DMA channel 3          </description>
        </field>
      </register>
      <register name="DMA_CH3_DEST_BASE_ADDR" address="0x40000268" access="RW" resetvalue="0x00000000">
        <description>DMA channel 3 Destination Base Address</description>
        <field name="DMA_CH3_DEST_BASE_ADDR" bitoffset="0" bitlength="32">
          <description>Base address for the destination of data transferred using DMA channel 3          </description>
        </field>
      </register>
      <register name="DMA_CH3_CTRL1" address="0x4000026C" access="RW" resetvalue="0x00000000">
        <description>DMA channel 3 Transfer Control</description>
        <field name="COUNTER_INT_VALUE" bitoffset="16" bitlength="16">
          <description>Raise an interrupt when the DMA transfer word count reaches this value          </description>
        </field>
        <field name="TRANSFER_LENGTH" bitoffset="0" bitlength="16">
          <description>The length, in words, of each data transfer using DMA channel 3          </description>
        </field>
      </register>
      <register name="DMA_CH3_NEXT_SRC_ADDR" address="0x40000270" access="RO" resetvalue="0x00000000">
        <description>DMA channel 3 Next Source Address</description>
        <field name="DMA_CH3_NEXT_SRC_ADDR" bitoffset="0" bitlength="32">
          <description>Address of the next data to be transferred using DMA channel 3          </description>
        </field>
      </register>
      <register name="DMA_CH3_NEXT_DEST_ADDR" address="0x40000274" access="RO" resetvalue="0x00000000">
        <description>DMA channel 3 Next Destination Address</description>
        <field name="DMA_CH3_NEXT_DEST_ADDR" bitoffset="0" bitlength="32">
          <description>Address where the next data to be transferred using DMA channel 3 will be stored          </description>
        </field>
      </register>
      <register name="DMA_CH3_WORD_CNT" address="0x40000278" access="RO" resetvalue="0x00000000">
        <description>DMA channel 3 Word Count</description>
        <field name="DMA_CH3_WORD_CNT" bitoffset="0" bitlength="16">
          <description>The number of words that have been transferred using DMA channel 3 during the current transfer          </description>
        </field>
      </register>
      <register name="DMA_DAC0_REQUEST" address="0x40000280" access="RW" resetvalue="0x00000000">
        <description>DMA Request Control for DAC0</description>
        <field name="DMA_ENABLE" bitoffset="16" bitlength="1">
          <description>Select whether DMA requests are enabled for the DAC0 request line
Values:
0x00 (DMA_DAC0_REQUEST_DISABLE) - Disable the DAC0 DMA request line
0x01 (DMA_DAC0_REQUEST_ENABLE) - Enable the DAC0 DMA request line
          </description>
        </field>
        <field name="RATE" bitoffset="0" bitlength="10">
          <description>Select how often a DAC0 DMA request will occur          </description>
        </field>
      </register>
      <register name="DMA_DAC1_REQUEST" address="0x40000284" access="RW" resetvalue="0x00000000">
        <description>DMA Request Control for DAC1</description>
        <field name="DMA_ENABLE" bitoffset="16" bitlength="1">
          <description>Select whether DMA request are enabled for the DAC1 request line
Values:
0x00 (DMA_DAC1_REQUEST_DISABLE) - Disable the DAC1 DMA request line
0x01 (DMA_DAC1_REQUEST_ENABLE) - Enable the DAC1 DMA request line
          </description>
        </field>
        <field name="RATE" bitoffset="0" bitlength="10">
          <description>Select how often a DAC1 DMA request will occur          </description>
        </field>
      </register>
      <register name="DMA_STATUS" address="0x40000290" access="RW" resetvalue="0x00000000">
        <description>DMA Status</description>
        <field name="CH3_ERROR_INT_STATUS" bitoffset="31" bitlength="1">
          <description>Indicate if a state machine error interrupt has occurred on DMA channel 3
Values:
0x01 (DMA_CH3_ERROR_INT) - Indicate that a state machine error interrupt has occurred
          </description>
        </field>
        <field name="CH3_COMPLETE_INT_STATUS" bitoffset="30" bitlength="1">
          <description>Indicate if a complete interrupt has occurred on DMA channel 3
Values:
0x01 (DMA_CH3_COMPLETE_INT) - Indicate that a complete interrupt has occurred
          </description>
        </field>
        <field name="CH3_COUNTER_INT_STATUS" bitoffset="29" bitlength="1">
          <description>Indicate if a counter interrupt has occurred on DMA channel 3
Values:
0x01 (DMA_CH3_COUNTER_INT) - Indicate that a counter interrupt has occurred
          </description>
        </field>
        <field name="CH3_START_INT_STATUS" bitoffset="28" bitlength="1">
          <description>Indicate if a start interrupt has occurred on DMA channel 3
Values:
0x01 (DMA_CH3_START_INT) - Indicate that a start interrupt has occurred
          </description>
        </field>
        <field name="CH3_DISABLE_INT_STATUS" bitoffset="27" bitlength="1">
          <description>Indicate if a channel disable interrupt has occurred on DMA channel 3
Values:
0x01 (DMA_CH3_DISABLE_INT) - Indicate that a channel disable interrupt has occurred
          </description>
        </field>
        <field name="CH3_STATE" bitoffset="24" bitlength="3">
          <description>DMA channel 3 state
Values:
0x00 (DMA_CH3_IDLE) - Indicate that DMA channel 3 is idle
          </description>
        </field>
        <field name="CH2_ERROR_INT_STATUS" bitoffset="23" bitlength="1">
          <description>Indicate if a state machine error interrupt has occurred on DMA channel 2
Values:
0x01 (DMA_CH2_ERROR_INT) - Indicate that a state machine error interrupt has occurred
          </description>
        </field>
        <field name="CH2_COMPLETE_INT_STATUS" bitoffset="22" bitlength="1">
          <description>Indicate if a complete interrupt has occurred on DMA channel 2
Values:
0x01 (DMA_CH2_COMPLETE_INT) - Indicate that a complete interrupt has occurred
          </description>
        </field>
        <field name="CH2_COUNTER_INT_STATUS" bitoffset="21" bitlength="1">
          <description>Indicate if a counter interrupt has occurred on DMA channel 2
Values:
0x01 (DMA_CH2_COUNTER_INT) - Indicate that a counter interrupt has occurred
          </description>
        </field>
        <field name="CH2_START_INT_STATUS" bitoffset="20" bitlength="1">
          <description>Indicate if a start interrupt has occurred on DMA channel 2
Values:
0x01 (DMA_CH2_START_INT) - Indicate that a start interrupt has occurred
          </description>
        </field>
        <field name="CH2_DISABLE_INT_STATUS" bitoffset="19" bitlength="1">
          <description>Indicate if a channel disable interrupt has occurred on DMA channel 2
Values:
0x01 (DMA_CH2_DISABLE_INT) - Indicate that a channel disable interrupt has occurred
          </description>
        </field>
        <field name="CH2_STATE" bitoffset="16" bitlength="3">
          <description>DMA channel 2 state
Values:
0x00 (DMA_CH2_IDLE) - Indicate that DMA channel 2 is idle
          </description>
        </field>
        <field name="CH1_ERROR_INT_STATUS" bitoffset="15" bitlength="1">
          <description>Indicate if a state machine error interrupt has occurred on DMA channel 1
Values:
0x01 (DMA_CH1_ERROR_INT) - Indicate that a state machine error interrupt has occurred
          </description>
        </field>
        <field name="CH1_COMPLETE_INT_STATUS" bitoffset="14" bitlength="1">
          <description>Indicate if a complete interrupt has occurred on DMA channel 1
Values:
0x01 (DMA_CH1_COMPLETE_INT) - Indicate that a complete interrupt has occurred
          </description>
        </field>
        <field name="CH1_COUNTER_INT_STATUS" bitoffset="13" bitlength="1">
          <description>Indicate if a counter interrupt has occurred on DMA channel 1
Values:
0x01 (DMA_CH1_COUNTER_INT) - Indicate that a counter interrupt has occurred
          </description>
        </field>
        <field name="CH1_START_INT_STATUS" bitoffset="12" bitlength="1">
          <description>Indicate if a start interrupt has occurred on DMA channel 1
Values:
0x01 (DMA_CH1_START_INT) - Indicate that a start interrupt has occurred
          </description>
        </field>
        <field name="CH1_DISABLE_INT_STATUS" bitoffset="11" bitlength="1">
          <description>Indicate if a channel disable interrupt has occurred on DMA channel 1
Values:
0x01 (DMA_CH1_DISABLE_INT) - Indicate that a channel disable interrupt has occurred
          </description>
        </field>
        <field name="CH1_STATE" bitoffset="8" bitlength="3">
          <description>DMA channel 1 state
Values:
0x00 (DMA_CH1_IDLE) - Indicate that DMA channel 1 is idle
          </description>
        </field>
        <field name="CH0_ERROR_INT_STATUS" bitoffset="7" bitlength="1">
          <description>Indicate if a state machine error interrupt has occurred on DMA channel 0
Values:
0x01 (DMA_CH0_ERROR_INT) - Indicate that a state machine error interrupt has occurred
          </description>
        </field>
        <field name="CH0_COMPLETE_INT_STATUS" bitoffset="6" bitlength="1">
          <description>Indicate if a complete interrupt has occurred on DMA channel 0
Values:
0x01 (DMA_CH0_COMPLETE_INT) - Indicate that a complete interrupt has occurred
          </description>
        </field>
        <field name="CH0_COUNTER_INT_STATUS" bitoffset="5" bitlength="1">
          <description>Indicate if a counter interrupt has occurred on DMA channel 0
Values:
0x01 (DMA_CH0_COUNTER_INT) - Indicate that a counter interrupt has occurred
          </description>
        </field>
        <field name="CH0_START_INT_STATUS" bitoffset="4" bitlength="1">
          <description>Indicate if a start interrupt has occurred on DMA channel 0
Values:
0x01 (DMA_CH0_START_INT) - Indicate that a start interrupt has occurred
          </description>
        </field>
        <field name="CH0_DISABLE_INT_STATUS" bitoffset="3" bitlength="1">
          <description>Indicate if a channel disable interrupt has occurred on DMA channel 0
Values:
0x01 (DMA_CH0_DISABLE_INT) - Indicate that a channel disable interrupt has occurred
          </description>
        </field>
        <field name="CH0_STATE" bitoffset="0" bitlength="3">
          <description>DMA channel 0 state
Values:
0x00 (DMA_CH0_IDLE) - Indicate that DMA channel 0 is idle
          </description>
        </field>
      </register>
    </registergroup>
    <registergroup name="UART0" description="UART0 Interface Configuration and Control">
      <register name="UART0_CTRL" address="0x40000300" access="RW" resetvalue="0x00000000">
        <description>UART0 Control and Configuration</description>
        <field name="CONTROLLER" bitoffset="2" bitlength="1">
          <description>Select whether data transfer will be controlled by the ARM Cortex-M3 processor or the DMA for UART0
Values:
0x00 (UART0_CONTROLLER_CM3) - The ARM Cortex-M3 controls data transfers using UART0
0x01 (UART0_CONTROLLER_DMA) - The DMA controls data transfers using UART0
          </description>
        </field>
        <field name="ENABLE" bitoffset="1" bitlength="1">
          <description>Enable or disable UART0
Values:
0x00 (UART0_DISABLE) - Disable the UART0 interface
0x01 (UART0_ENABLE) - Enable the UART0 interface
          </description>
        </field>
        <field name="PRESCALE_ENABLE" bitoffset="0" bitlength="1">
          <description>Enable or disable a prescale of the supplied UART clock by 12
Values:
0x00 (UART0_PRESCALE_DISABLE) - Disable the prescaling division of the supplied UART clock by 12
0x01 (UART0_PRESCALE_ENABLE) - Enable a prescaling division of the supplied UART clock by 12
          </description>
        </field>
      </register>
      <register name="UART0_SPEED_CTRL" address="0x40000304" access="RW" resetvalue="0x00000000">
        <description>UART0 Baud Rate Configuration</description>
        <field name="UART0_SPEED_CTRL" bitoffset="0" bitlength="16">
          <description>Configure the UART0 baud rate (divided from RCLK, potentially including a prescaling divisor of 12 based on UART0_CTRL_PRESCALE_ENABLE in UART0_CTRL)          </description>
        </field>
      </register>
      <register name="UART0_STATUS" address="0x40000308" access="RW" resetvalue="0x00000000">
        <description>UART0 Status</description>
        <field name="OVERRUN_STATUS" bitoffset="1" bitlength="1">
          <description>Indicate that an overrun has occurred when receiving data on the UART0 interface
Values:
0x00 (UART0_OVERRUN_FALSE) - UART0 no input overrun detected
0x01 (UART0_OVERRUN_TRUE) - UART0 input overrun detected
0x01 (UART0_OVERRUN_CLEAR) - Clear the UART0 overrun bit
          </description>
        </field>
      </register>
      <register name="UART0_TXDATA" address="0x4000030C" access="RW" resetvalue="0x00000000">
        <description>UART0 Transmit Data</description>
        <field name="UART0_TXDATA" bitoffset="0" bitlength="8">
          <description>Byte of data to transmit over the UART interface          </description>
        </field>
      </register>
      <register name="UART0_RXDATA" address="0x40000310" access="RO" resetvalue="0x00000000">
        <description>UART0 Receive Data</description>
        <field name="UART0_RXDATA" bitoffset="0" bitlength="8">
          <description>Byte of data received from the UART interface          </description>
        </field>
      </register>
    </registergroup>
    <registergroup name="UART1" description="UART1 Interface Configuration and Control">
      <register name="UART1_CTRL" address="0x40000400" access="RW" resetvalue="0x00000000">
        <description>UART1 Control and Configuration</description>
        <field name="CONTROLLER" bitoffset="2" bitlength="1">
          <description>Select whether data transfer will be controlled by the ARM Cortex-M3 processor or the DMA for UART1
Values:
0x00 (UART1_CONTROLLER_CM3) - The ARM Cortex-M3 controls data transfers using UART1
0x01 (UART1_CONTROLLER_DMA) - The DMA controls data transfers using UART1
          </description>
        </field>
        <field name="ENABLE" bitoffset="1" bitlength="1">
          <description>Enable or disable UART1
Values:
0x00 (UART1_DISABLE) - Disable the UART1 interface
0x01 (UART1_ENABLE) - Enable the UART1 interface
          </description>
        </field>
        <field name="PRESCALE_ENABLE" bitoffset="0" bitlength="1">
          <description>Enable or disable a prescale of the supplied UART clock by 12
Values:
0x00 (UART1_PRESCALE_DISABLE) - Disable the prescaling division of the supplied UART clock by 12
0x01 (UART1_PRESCALE_ENABLE) - Enable a prescaling division of the supplied UART clock by 12
          </description>
        </field>
      </register>
      <register name="UART1_SPEED_CTRL" address="0x40000404" access="RW" resetvalue="0x00000000">
        <description>UART1 Baud Rate Configuration</description>
        <field name="UART1_SPEED_CTRL" bitoffset="0" bitlength="16">
          <description>Configure the UART1 baud rate (divided from RCLK, potentially including a prescaling divisor of 12 based on UART1_CTRL_PRESCALE_ENABLE in UART1_CTRL)          </description>
        </field>
      </register>
      <register name="UART1_STATUS" address="0x40000408" access="RW" resetvalue="0x00000000">
        <description>UART1 Status</description>
        <field name="OVERRUN_STATUS" bitoffset="1" bitlength="1">
          <description>Indicate that an overrun has occurred when receiving data on the UART1 interface
Values:
0x00 (UART1_OVERRUN_FALSE) - UART1 no input overrun detected
0x01 (UART1_OVERRUN_TRUE) - UART1 input overrun detected
0x01 (UART1_OVERRUN_CLEAR) - Clear the UART1 overrun bit
          </description>
        </field>
      </register>
      <register name="UART1_TXDATA" address="0x4000040C" access="RW" resetvalue="0x00000000">
        <description>UART1 Transmit Data</description>
        <field name="UART1_TXDATA" bitoffset="0" bitlength="8">
          <description>Byte of data to transmit over the UART interface          </description>
        </field>
      </register>
      <register name="UART1_RXDATA" address="0x40000410" access="RO" resetvalue="0x00000000">
        <description>UART1 Receive Data</description>
        <field name="UART1_RXDATA" bitoffset="0" bitlength="8">
          <description>Byte of data received from the UART interface          </description>
        </field>
      </register>
    </registergroup>
    <registergroup name="GPIO_LCD" description="GPIO and LCD Driver Configuration and Control">
      <register name="GPIO_IF0_FUNC_SEL" address="0x40000500" access="RW" resetvalue="0x0000F000">
        <description>GPIO IF0 Function Select</description>
        <field name="PULLUP_ENABLE_PIN3" bitoffset="15" bitlength="1">
          <description>Configure the pull-up resistor for GPIO IF0, pin 3
Values:
0x00 (GPIO_IF0_PIN3_PULLUP_DISABLE) - Disable the pull-up resistor for GPIO IF0, pin 3
0x01 (GPIO_IF0_PIN3_PULLUP_ENABLE) - Enable the pull-up resistor for GPIO IF0, pin 3
          </description>
        </field>
        <field name="PULLUP_ENABLE_PIN2" bitoffset="14" bitlength="1">
          <description>Configure the pull-up resistor for GPIO IF0, pin 2
Values:
0x00 (GPIO_IF0_PIN2_PULLUP_DISABLE) - Disable the pull-up resistor for GPIO IF0, pin 2
0x01 (GPIO_IF0_PIN2_PULLUP_ENABLE) - Enable the pull-up resistor for GPIO IF0, pin 2
          </description>
        </field>
        <field name="PULLUP_ENABLE_PIN1" bitoffset="13" bitlength="1">
          <description>Configure the pull-up resistor for GPIO IF0, pin 1
Values:
0x00 (GPIO_IF0_PIN1_PULLUP_DISABLE) - Disable the pull-up resistor for GPIO IF0, pin 1
0x01 (GPIO_IF0_PIN1_PULLUP_ENABLE) - Enable the pull-up resistor for GPIO IF0, pin 1
          </description>
        </field>
        <field name="PULLUP_ENABLE_PIN0" bitoffset="12" bitlength="1">
          <description>Configure the pull-up resistor for GPIO IF0, pin 0
Values:
0x00 (GPIO_IF0_PIN0_PULLUP_DISABLE) - Disable the pull-up resistor for GPIO IF0, pin 0
0x01 (GPIO_IF0_PIN0_PULLUP_ENABLE) - Enable the pull-up resistor for GPIO IF0, pin 0
          </description>
        </field>
        <field name="OUTPUT_ENABLE_PIN3" bitoffset="11" bitlength="1">
          <description>Enable output on GPIO IF0, pin 3
Values:
0x00 (GPIO_IF0_PIN3_OUTPUT_DISABLE) - Disable output on GPIO IF0, pin 3
0x01 (GPIO_IF0_PIN3_OUTPUT_ENABLE) - Enable output on GPIO IF0, pin 3
          </description>
        </field>
        <field name="OUTPUT_ENABLE_PIN2" bitoffset="10" bitlength="1">
          <description>Enable output on GPIO IF0, pin 2
Values:
0x00 (GPIO_IF0_PIN2_OUTPUT_DISABLE) - Disable output on GPIO IF0, pin 2
0x01 (GPIO_IF0_PIN2_OUTPUT_ENABLE) - Enable output on GPIO IF0, pin 2
          </description>
        </field>
        <field name="OUTPUT_ENABLE_PIN1" bitoffset="9" bitlength="1">
          <description>Enable output on GPIO IF0, pin 1
Values:
0x00 (GPIO_IF0_PIN1_OUTPUT_DISABLE) - Disable output on GPIO IF0, pin 1
0x01 (GPIO_IF0_PIN1_OUTPUT_ENABLE) - Enable output on GPIO IF0, pin 1
          </description>
        </field>
        <field name="OUTPUT_ENABLE_PIN0" bitoffset="8" bitlength="1">
          <description>Enable output on GPIO IF0, pin 0
Values:
0x00 (GPIO_IF0_PIN0_OUTPUT_DISABLE) - Disable output on GPIO IF0, pin 0
0x01 (GPIO_IF0_PIN0_OUTPUT_ENABLE) - Enable output on GPIO IF0, pin 0
          </description>
        </field>
        <field name="INPUT_DATA" bitoffset="4" bitlength="4">
          <description>Input data from GPIO IF0          </description>
        </field>
        <field name="FUNC_SEL" bitoffset="0" bitlength="2">
          <description>Select the multiplexed function for the GPIO IF0 pins
Values:
0x00 (GPIO_IF0_SELECT_SPI0) - Enables the SPI0 multiplexed function of GPIO IF0
0x01 (GPIO_IF0_SELECT_GPIO) - Enables the GPIO multiplexed function of GPIO IF0
0x02 (GPIO_IF0_SELECT_USR_CLK) - Enables the user clock multiplexed function of GPIO IF0 (IF0, Pin 0 set to ground)
          </description>
        </field>
      </register>
      <register name="GPIO_IF0_OUT" address="0x40000504" access="RW" resetvalue="0x00000000">
        <description>GPIO IF0 Output</description>
        <field name="OUTPUT_DATA_PIN3" bitoffset="3" bitlength="1">
          <description>Output data for GPIO IF0, pin 3          </description>
        </field>
        <field name="OUTPUT_DATA_PIN2" bitoffset="2" bitlength="1">
          <description>Output data for GPIO IF0, pin 2          </description>
        </field>
        <field name="OUTPUT_DATA_PIN1" bitoffset="1" bitlength="1">
          <description>Output data for GPIO IF0, pin 1          </description>
        </field>
        <field name="OUTPUT_DATA_PIN0" bitoffset="0" bitlength="1">
          <description>Output data for GPIO IF0, pin 0          </description>
        </field>
      </register>
      <register name="GPIO_IF1_FUNC_SEL" address="0x40000508" access="RW" resetvalue="0x0000F000">
        <description>GPIO IF1 Function Select</description>
        <field name="PULLUP_ENABLE_PIN3" bitoffset="15" bitlength="1">
          <description>Configure the pull-up resistor for GPIO IF1, pin 3
Values:
0x00 (GPIO_IF1_PIN3_PULLUP_DISABLE) - Disable the pull-up resistor for GPIO IF1, pin 3
0x01 (GPIO_IF1_PIN3_PULLUP_ENABLE) - Enable the pull-up resistor for GPIO IF1, pin 3
          </description>
        </field>
        <field name="PULLUP_ENABLE_PIN2" bitoffset="14" bitlength="1">
          <description>Configure the pull-up resistor for GPIO IF1, pin 2
Values:
0x00 (GPIO_IF1_PIN2_PULLUP_DISABLE) - Disable the pull-up resistor for GPIO IF1, pin 2
0x01 (GPIO_IF1_PIN2_PULLUP_ENABLE) - Enable the pull-up resistor for GPIO IF1, pin 2
          </description>
        </field>
        <field name="PULLUP_ENABLE_PIN1" bitoffset="13" bitlength="1">
          <description>Configure the pull-up resistor for GPIO IF1, pin 1
Values:
0x00 (GPIO_IF1_PIN1_PULLUP_DISABLE) - Disable the pull-up resistor for GPIO IF1, pin 1
0x01 (GPIO_IF1_PIN1_PULLUP_ENABLE) - Enable the pull-up resistor for GPIO IF1, pin 1
          </description>
        </field>
        <field name="PULLUP_ENABLE_PIN0" bitoffset="12" bitlength="1">
          <description>Configure the pull-up resistor for GPIO IF1, pin 0
Values:
0x00 (GPIO_IF1_PIN0_PULLUP_DISABLE) - Disable the pull-up resistor for GPIO IF1, pin 0
0x01 (GPIO_IF1_PIN0_PULLUP_ENABLE) - Enable the pull-up resistor for GPIO IF1, pin 0
          </description>
        </field>
        <field name="OUTPUT_ENABLE_PIN3" bitoffset="11" bitlength="1">
          <description>Enable output on GPIO IF1, pin 3
Values:
0x00 (GPIO_IF1_PIN3_OUTPUT_DISABLE) - Disable output on GPIO IF1, pin 3
0x01 (GPIO_IF1_PIN3_OUTPUT_ENABLE) - Enable output on GPIO IF1, pin 3
          </description>
        </field>
        <field name="OUTPUT_ENABLE_PIN2" bitoffset="10" bitlength="1">
          <description>Enable output on GPIO IF1, pin 2
Values:
0x00 (GPIO_IF1_PIN2_OUTPUT_DISABLE) - Disable output on GPIO IF1, pin 2
0x01 (GPIO_IF1_PIN2_OUTPUT_ENABLE) - Enable output on GPIO IF1, pin 2
          </description>
        </field>
        <field name="OUTPUT_ENABLE_PIN1" bitoffset="9" bitlength="1">
          <description>Enable output on GPIO IF1, pin 1
Values:
0x00 (GPIO_IF1_PIN1_OUTPUT_DISABLE) - Disable output on GPIO IF1, pin 1
0x01 (GPIO_IF1_PIN1_OUTPUT_ENABLE) - Enable output on GPIO IF1, pin 1
          </description>
        </field>
        <field name="OUTPUT_ENABLE_PIN0" bitoffset="8" bitlength="1">
          <description>Enable output on GPIO IF1, pin 0
Values:
0x00 (GPIO_IF1_PIN0_OUTPUT_DISABLE) - Disable output on GPIO IF1, pin 0
0x01 (GPIO_IF1_PIN0_OUTPUT_ENABLE) - Enable output on GPIO IF1, pin 0
          </description>
        </field>
        <field name="INPUT_DATA" bitoffset="4" bitlength="4">
          <description>Input data from GPIO IF1          </description>
        </field>
        <field name="FUNC_SEL" bitoffset="0" bitlength="2">
          <description>Select the multiplexed function for the GPIO IF1 pins
Values:
0x00 (GPIO_IF1_SELECT_SPI1) - Enables the SPI0 multiplexed function of GPIO IF1
0x01 (GPIO_IF1_SELECT_GPIO) - Enables the GPIO multiplexed function of GPIO IF1
0x02 (GPIO_IF1_SELECT_PCM) - Enables the PCM multiplexed function of GPIO IF1
          </description>
        </field>
      </register>
      <register name="GPIO_IF1_OUT" address="0x4000050C" access="RW" resetvalue="0x00000000">
        <description>GPIO IF1 Output</description>
        <field name="OUTPUT_DATA_PIN3" bitoffset="3" bitlength="1">
          <description>Output data for GPIO IF1, pin 3          </description>
        </field>
        <field name="OUTPUT_DATA_PIN2" bitoffset="2" bitlength="1">
          <description>Output data for GPIO IF1, pin 2          </description>
        </field>
        <field name="OUTPUT_DATA_PIN1" bitoffset="1" bitlength="1">
          <description>Output data for GPIO IF1, pin 1          </description>
        </field>
        <field name="OUTPUT_DATA_PIN0" bitoffset="0" bitlength="1">
          <description>Output data for GPIO IF1, pin 0          </description>
        </field>
      </register>
      <register name="GPIO_IF23_FUNC_SEL" address="0x40000510" access="RW" resetvalue="0x0000F000">
        <description>GPIO IF2/IF3 Function Select</description>
        <field name="PULLUP_ENABLE_IF3_PIN1" bitoffset="15" bitlength="1">
          <description>Configure the pull-up resistor for GPIO IF3, pin 1
Values:
0x00 (GPIO_IF3_PIN1_PULLUP_DISABLE) - Disable the pull-up resistor for GPIO IF3, pin 1
0x01 (GPIO_IF3_PIN1_PULLUP_ENABLE) - Enable the pull-up resistor for GPIO IF3, pin 1
          </description>
        </field>
        <field name="PULLUP_ENABLE_IF3_PIN0" bitoffset="14" bitlength="1">
          <description>Configure the pull-up resistor for GPIO IF3, pin 0
Values:
0x00 (GPIO_IF3_PIN0_PULLUP_DISABLE) - Disable the pull-up resistor for GPIO IF3, pin 0
0x01 (GPIO_IF3_PIN0_PULLUP_ENABLE) - Enable the pull-up resistor for GPIO IF3, pin 0
          </description>
        </field>
        <field name="PULLUP_ENABLE_IF2_PIN1" bitoffset="13" bitlength="1">
          <description>Configure the pull-up resistor for GPIO IF2, pin 1
Values:
0x00 (GPIO_IF2_PIN1_PULLUP_DISABLE) - Disable the pull-up resistor for GPIO IF2, pin 1
0x01 (GPIO_IF2_PIN1_PULLUP_ENABLE) - Enable the pull-up resistor for GPIO IF2, pin 1
          </description>
        </field>
        <field name="PULLUP_ENABLE_IF2_PIN0" bitoffset="12" bitlength="1">
          <description>Configure the pull-up resistor for GPIO IF2, pin 0
Values:
0x00 (GPIO_IF2_PIN0_PULLUP_DISABLE) - Disable the pull-up resistor for GPIO IF2, pin 0
0x01 (GPIO_IF2_PIN0_PULLUP_ENABLE) - Enable the pull-up resistor for GPIO IF2, pin 0
          </description>
        </field>
        <field name="OUTPUT_ENABLE_IF3_PIN1" bitoffset="11" bitlength="1">
          <description>Enable output on GPIO IF3, pin 1
Values:
0x00 (GPIO_IF3_PIN1_OUTPUT_DISABLE) - Disable output on GPIO IF3, pin 1
0x01 (GPIO_IF3_PIN1_OUTPUT_ENABLE) - Enable output on GPIO IF3, pin 1
          </description>
        </field>
        <field name="OUTPUT_ENABLE_IF3_PIN0" bitoffset="10" bitlength="1">
          <description>Enable output on GPIO IF3, pin 0
Values:
0x00 (GPIO_IF3_PIN0_OUTPUT_DISABLE) - Disable output on GPIO IF3, pin 0
0x01 (GPIO_IF3_PIN0_OUTPUT_ENABLE) - Enable output on GPIO IF3, pin 0
          </description>
        </field>
        <field name="OUTPUT_ENABLE_IF2_PIN1" bitoffset="9" bitlength="1">
          <description>Enable output on GPIO IF2, pin 1
Values:
0x00 (GPIO_IF2_PIN1_OUTPUT_DISABLE) - Disable output on GPIO IF2, pin 1
0x01 (GPIO_IF2_PIN1_OUTPUT_ENABLE) - Enable output on GPIO IF2, pin 1
          </description>
        </field>
        <field name="OUTPUT_ENABLE_IF2_PIN0" bitoffset="8" bitlength="1">
          <description>Enable output on GPIO IF2, pin 0
Values:
0x00 (GPIO_IF2_PIN0_OUTPUT_DISABLE) - Disable output on GPIO IF2, pin 0
0x01 (GPIO_IF2_PIN0_OUTPUT_ENABLE) - Enable output on GPIO IF2, pin 0
          </description>
        </field>
        <field name="INPUT_DATA_IF3" bitoffset="6" bitlength="2">
          <description>Input data from GPIO IF3          </description>
        </field>
        <field name="INPUT_DATA_IF2" bitoffset="4" bitlength="2">
          <description>Input data from GPIO IF2          </description>
        </field>
        <field name="FUNC_SEL_IF3" bitoffset="1" bitlength="2">
          <description>Select the multiplexed function for the GPIO IF3 pins
Values:
0x00 (GPIO_IF3_SELECT_UART1) - Enables the UART1 multiplexed function of GPIO IF3
0x01 (GPIO_IF3_SELECT_GPIO) - Enables the GPIO multiplexed function of GPIO IF3
0x02 (GPIO_IF3_SELECT_SQI) - Enables the SQI multiplexed function of GPIO IF3
          </description>
        </field>
        <field name="FUNC_SEL_IF2" bitoffset="0" bitlength="1">
          <description>Select the multiplexed function for the GPIO IF2 pins
Values:
0x00 (GPIO_IF2_SELECT_UART0) - Enables the UART0 multiplexed function of GPIO IF2
0x01 (GPIO_IF2_SELECT_GPIO) - Enables the GPIO multiplexed function of GPIO IF2
          </description>
        </field>
      </register>
      <register name="GPIO_IF23_OUT" address="0x40000514" access="RW" resetvalue="0x00000000">
        <description>GPIO IF2/IF3 Output</description>
        <field name="OUTPUT_DATA_IF3_PIN1" bitoffset="3" bitlength="1">
          <description>Output data from GPIO IF3, pin 1          </description>
        </field>
        <field name="OUTPUT_DATA_IF3_PIN0" bitoffset="2" bitlength="1">
          <description>Output data from GPIO IF3, pin 0          </description>
        </field>
        <field name="OUTPUT_DATA_IF2_PIN1" bitoffset="1" bitlength="1">
          <description>Output data from GPIO IF2, pin 1          </description>
        </field>
        <field name="OUTPUT_DATA_IF2_PIN0" bitoffset="0" bitlength="1">
          <description>Output data from GPIO IF2, pin 0          </description>
        </field>
      </register>
      <register name="GPIO_IF_DATA" address="0x40000518" access="RW" resetvalue="0x00000000">
        <description>GPIO IF0 to IF3 Collected Input and Output</description>
        <field name="IF3_DATA" bitoffset="10" bitlength="2">
          <description>Inputs (read) and outputs (write) for IF3          </description>
        </field>
        <field name="IF2_DATA" bitoffset="8" bitlength="2">
          <description>Inputs (read) and outputs (write) for IF2          </description>
        </field>
        <field name="IF1_DATA" bitoffset="4" bitlength="4">
          <description>Inputs (read) and outputs (write) for IF1          </description>
        </field>
        <field name="IF0_DATA" bitoffset="0" bitlength="4">
          <description>Inputs (read) and outputs (write) for IF0          </description>
        </field>
      </register>
      <register name="GPIO_IF4_LCD_FUNC_SEL" address="0x4000051C" access="RW" resetvalue="0x00000000">
        <description>GPIO IF4, LCD Driver Function Select</description>
        <field name="FUNC_SEL" bitoffset="0" bitlength="32">
          <description>Select the multiplexed function for the GPIO IF4 pins (set to 0 for GPIO, 1 for LCD driver)
Values:
0x00 (GPIO_IF4_ALL_GPIO) - Enables the GPIO multiplexed function of GPIO IF4
0xFFFFFFFF (GPIO_IF4_ALL_LCD) - Enables the LCD driver multiplexed function of GPIO IF4
          </description>
        </field>
      </register>
      <register name="GPIO_IF4_LCD_DRV_SEL0" address="0x40000520" access="RW" resetvalue="0x00000000">
        <description>GPIO IF4, LCD Driver Select 0</description>
        <field name="DRIVER_SELECT_PIN7" bitoffset="28" bitlength="4">
          <description>Select the LCD driver waveform for segment 7 (GPIO IF4, pin 11)          </description>
        </field>
        <field name="DRIVER_SELECT_PIN6" bitoffset="24" bitlength="4">
          <description>Select the LCD driver waveform for segment 6 (GPIO IF4, pin 10)          </description>
        </field>
        <field name="DRIVER_SELECT_PIN5" bitoffset="20" bitlength="4">
          <description>Select the LCD driver waveform for segment 5 (GPIO IF4, pin 9)          </description>
        </field>
        <field name="DRIVER_SELECT_PIN4" bitoffset="16" bitlength="4">
          <description>Select the LCD driver waveform for segment 4 (GPIO IF4, pin 8)          </description>
        </field>
        <field name="DRIVER_SELECT_PIN3" bitoffset="12" bitlength="4">
          <description>Select the LCD driver waveform for segment 3 (GPIO IF4, pin 7)          </description>
        </field>
        <field name="DRIVER_SELECT_PIN2" bitoffset="8" bitlength="4">
          <description>Select the LCD driver waveform for segment 2 (GPIO IF4, pin 6)          </description>
        </field>
        <field name="DRIVER_SELECT_PIN1" bitoffset="4" bitlength="4">
          <description>Select the LCD driver waveform for segment 1 (GPIO IF4, pin 5)          </description>
        </field>
        <field name="DRIVER_SELECT_PIN0" bitoffset="0" bitlength="4">
          <description>Select the LCD driver waveform for segment 0 (GPIO IF4, pin 4)          </description>
        </field>
      </register>
      <register name="GPIO_IF4_LCD_DRV_SEL1" address="0x40000524" access="RW" resetvalue="0x00000000">
        <description>GPIO IF4, LCD Driver Select 1</description>
        <field name="DRIVER_SELECT_PIN15" bitoffset="28" bitlength="4">
          <description>Select the LCD driver waveform for segment 15 (GPIO IF4, pin 19)          </description>
        </field>
        <field name="DRIVER_SELECT_PIN14" bitoffset="24" bitlength="4">
          <description>Select the LCD driver waveform for segment 14 (GPIO IF4, pin 18)          </description>
        </field>
        <field name="DRIVER_SELECT_PIN13" bitoffset="20" bitlength="4">
          <description>Select the LCD driver waveform for segment 13 (GPIO IF4, pin 17)          </description>
        </field>
        <field name="DRIVER_SELECT_PIN12" bitoffset="16" bitlength="4">
          <description>Select the LCD driver waveform for segment 12 (GPIO IF4, pin 16)          </description>
        </field>
        <field name="DRIVER_SELECT_PIN11" bitoffset="12" bitlength="4">
          <description>Select the LCD driver waveform for segment 11 (GPIO IF4, pin 15)          </description>
        </field>
        <field name="DRIVER_SELECT_PIN10" bitoffset="8" bitlength="4">
          <description>Select the LCD driver waveform for segment 10 (GPIO IF4, pin 14)          </description>
        </field>
        <field name="DRIVER_SELECT_PIN9" bitoffset="4" bitlength="4">
          <description>Select the LCD driver waveform for segment 9 (GPIO IF4, pin 13)          </description>
        </field>
        <field name="DRIVER_SELECT_PIN8" bitoffset="0" bitlength="4">
          <description>Select the LCD driver waveform for segment 8 (GPIO IF4, pin 12)          </description>
        </field>
      </register>
      <register name="GPIO_IF4_LCD_DRV_SEL2" address="0x40000528" access="RW" resetvalue="0x00000000">
        <description>GPIO IF4, LCD Driver Select 2</description>
        <field name="DRIVER_SELECT_PIN23" bitoffset="28" bitlength="4">
          <description>Select the LCD driver waveform for segment 23 (GPIO IF4, pin 27)          </description>
        </field>
        <field name="DRIVER_SELECT_PIN22" bitoffset="24" bitlength="4">
          <description>Select the LCD driver waveform for segment 22 (GPIO IF4, pin 26)          </description>
        </field>
        <field name="DRIVER_SELECT_PIN21" bitoffset="20" bitlength="4">
          <description>Select the LCD driver waveform for segment 21 (GPIO IF4, pin 25)          </description>
        </field>
        <field name="DRIVER_SELECT_PIN20" bitoffset="16" bitlength="4">
          <description>Select the LCD driver waveform for segment 20 (GPIO IF4, pin 24)          </description>
        </field>
        <field name="DRIVER_SELECT_PIN19" bitoffset="12" bitlength="4">
          <description>Select the LCD driver waveform for segment 19 (GPIO IF4, pin 23)          </description>
        </field>
        <field name="DRIVER_SELECT_PIN18" bitoffset="8" bitlength="4">
          <description>Select the LCD driver waveform for segment 18 (GPIO IF4, pin 22)          </description>
        </field>
        <field name="DRIVER_SELECT_PIN17" bitoffset="4" bitlength="4">
          <description>Select the LCD driver waveform for segment 17 (GPIO IF4, pin 21)          </description>
        </field>
        <field name="DRIVER_SELECT_PIN16" bitoffset="0" bitlength="4">
          <description>Select the LCD driver waveform for segment 16 (GPIO IF4, pin 20)          </description>
        </field>
      </register>
      <register name="GPIO_IF4_LCD_DRV_SEL3" address="0x4000052C" access="RW" resetvalue="0x00000000">
        <description>GPIO IF4, LCD Driver Select 3</description>
        <field name="DRIVER_SELECT_PIN27" bitoffset="12" bitlength="4">
          <description>Select the LCD driver waveform for segment 27 (GPIO IF4, pin 31)          </description>
        </field>
        <field name="DRIVER_SELECT_PIN26" bitoffset="8" bitlength="4">
          <description>Select the LCD driver waveform for segment 26 (GPIO IF4, pin 30)          </description>
        </field>
        <field name="DRIVER_SELECT_PIN25" bitoffset="4" bitlength="4">
          <description>Select the LCD driver waveform for segment 25 (GPIO IF4, pin 29)          </description>
        </field>
        <field name="DRIVER_SELECT_PIN24" bitoffset="0" bitlength="4">
          <description>Select the LCD driver waveform for segment 24 (GPIO IF4, pin 28)          </description>
        </field>
      </register>
      <register name="GPIO_IF4_LCD_OUT" address="0x40000530" access="RW" resetvalue="0x00000000">
        <description>GPIO IF4, LCD Driver Output</description>
        <field name="OUTPUT_DATA_PIN31" bitoffset="31" bitlength="1">
          <description>Output data for GPIO IF4, pin 31          </description>
        </field>
        <field name="OUTPUT_DATA_PIN30" bitoffset="30" bitlength="1">
          <description>Output data for GPIO IF4, pin 30          </description>
        </field>
        <field name="OUTPUT_DATA_PIN29" bitoffset="29" bitlength="1">
          <description>Output data for GPIO IF4, pin 29          </description>
        </field>
        <field name="OUTPUT_DATA_PIN28" bitoffset="28" bitlength="1">
          <description>Output data for GPIO IF4, pin 28          </description>
        </field>
        <field name="OUTPUT_DATA_PIN27" bitoffset="27" bitlength="1">
          <description>Output data for GPIO IF4, pin 27          </description>
        </field>
        <field name="OUTPUT_DATA_PIN26" bitoffset="26" bitlength="1">
          <description>Output data for GPIO IF4, pin 26          </description>
        </field>
        <field name="OUTPUT_DATA_PIN25" bitoffset="25" bitlength="1">
          <description>Output data for GPIO IF4, pin 25          </description>
        </field>
        <field name="OUTPUT_DATA_PIN24" bitoffset="24" bitlength="1">
          <description>Output data for GPIO IF4, pin 24          </description>
        </field>
        <field name="OUTPUT_DATA_PIN23" bitoffset="23" bitlength="1">
          <description>Output data for GPIO IF4, pin 23          </description>
        </field>
        <field name="OUTPUT_DATA_PIN22" bitoffset="22" bitlength="1">
          <description>Output data for GPIO IF4, pin 22          </description>
        </field>
        <field name="OUTPUT_DATA_PIN21" bitoffset="21" bitlength="1">
          <description>Output data for GPIO IF4, pin 21          </description>
        </field>
        <field name="OUTPUT_DATA_PIN20" bitoffset="20" bitlength="1">
          <description>Output data for GPIO IF4, pin 20          </description>
        </field>
        <field name="OUTPUT_DATA_PIN19" bitoffset="19" bitlength="1">
          <description>Output data for GPIO IF4, pin 19          </description>
        </field>
        <field name="OUTPUT_DATA_PIN18" bitoffset="18" bitlength="1">
          <description>Output data for GPIO IF4, pin 18          </description>
        </field>
        <field name="OUTPUT_DATA_PIN17" bitoffset="17" bitlength="1">
          <description>Output data for GPIO IF4, pin 17          </description>
        </field>
        <field name="OUTPUT_DATA_PIN16" bitoffset="16" bitlength="1">
          <description>Output data for GPIO IF4, pin 16          </description>
        </field>
        <field name="OUTPUT_DATA_PIN15" bitoffset="15" bitlength="1">
          <description>Output data for GPIO IF4, pin 15          </description>
        </field>
        <field name="OUTPUT_DATA_PIN14" bitoffset="14" bitlength="1">
          <description>Output data for GPIO IF4, pin 14          </description>
        </field>
        <field name="OUTPUT_DATA_PIN13" bitoffset="13" bitlength="1">
          <description>Output data for GPIO IF4, pin 13          </description>
        </field>
        <field name="OUTPUT_DATA_PIN12" bitoffset="12" bitlength="1">
          <description>Output data for GPIO IF4, pin 12          </description>
        </field>
        <field name="OUTPUT_DATA_PIN11" bitoffset="11" bitlength="1">
          <description>Output data for GPIO IF4, pin 11          </description>
        </field>
        <field name="OUTPUT_DATA_PIN10" bitoffset="10" bitlength="1">
          <description>Output data for GPIO IF4, pin 10          </description>
        </field>
        <field name="OUTPUT_DATA_PIN9" bitoffset="9" bitlength="1">
          <description>Output data for GPIO IF4, pin 9          </description>
        </field>
        <field name="OUTPUT_DATA_PIN8" bitoffset="8" bitlength="1">
          <description>Output data for GPIO IF4, pin 8          </description>
        </field>
        <field name="OUTPUT_DATA_PIN7" bitoffset="7" bitlength="1">
          <description>Output data for GPIO IF4, pin 7          </description>
        </field>
        <field name="OUTPUT_DATA_PIN6" bitoffset="6" bitlength="1">
          <description>Output data for GPIO IF4, pin 6          </description>
        </field>
        <field name="OUTPUT_DATA_PIN5" bitoffset="5" bitlength="1">
          <description>Output data for GPIO IF4, pin 5          </description>
        </field>
        <field name="OUTPUT_DATA_PIN4" bitoffset="4" bitlength="1">
          <description>Output data for GPIO IF4, pin 4          </description>
        </field>
        <field name="OUTPUT_DATA_PIN3" bitoffset="3" bitlength="1">
          <description>Output data for GPIO IF4, pin 3          </description>
        </field>
        <field name="OUTPUT_DATA_PIN2" bitoffset="2" bitlength="1">
          <description>Output data for GPIO IF4, pin 2          </description>
        </field>
        <field name="OUTPUT_DATA_PIN1" bitoffset="1" bitlength="1">
          <description>Output data for GPIO IF4, pin 1          </description>
        </field>
        <field name="OUTPUT_DATA_PIN0" bitoffset="0" bitlength="1">
          <description>Output data for GPIO IF4, pin 0          </description>
        </field>
      </register>
      <register name="GPIO_IF4_LCD_OE" address="0x40000534" access="RW" resetvalue="0x00000000">
        <description>GPIO IF4, LCD Driver Output Enable</description>
        <field name="OUTPUT_ENABLE" bitoffset="0" bitlength="32">
          <description>Output enable for GPIO IF4 (set to 0 to disable output, 1 to enable output)
Values:
0x00 (GPIO_IF4_OUTPUT_DISABLE_ALL) - Disable output on all GPIO IF4 pins
0xFFFFFFFF (GPIO_IF4_OUTPUT_ENABLE_ALL) - Enable output on all GPIO IF4 pins
          </description>
        </field>
      </register>
      <register name="GPIO_IF4_LCD_IN" address="0x40000538" access="RO" resetvalue="0x00000000">
        <description>GPIO IF4, LCD Driver Input</description>
        <field name="INPUT_DATA" bitoffset="0" bitlength="32">
          <description>Input data from GPIO IF4          </description>
        </field>
      </register>
      <register name="GPIO_IF4_LCD_PULLDOWN" address="0x4000053C" access="RW" resetvalue="0xFFFFFFFF">
        <description>GPIO IF4, LCD Driver Pull-down Configuration</description>
        <field name="ENABLE" bitoffset="0" bitlength="32">
          <description>Configure pull-down resistors for GPIO IF4 (set to 0 to disable the pull-down resistor, 1 to enable the pull-down resistor)
Values:
0x00 (GPIO_IF4_PULLDOWN_DISABLE_ALL) - Disable pull-down resistors for all GPIO IF4 pins
0xFFFFFFFF (GPIO_IF4_PULLDOWN_ENABLE_ALL) - Enable pull-down resistors for all GPIO IF4 pins
          </description>
        </field>
      </register>
      <register name="GPIO_IF4_LCD_CTRL" address="0x40000540" access="RW" resetvalue="0x00000000">
        <description>GPIO LCD Driver Control</description>
        <field name="BLANK_ENABLE" bitoffset="1" bitlength="1">
          <description>Select whether the LCD segment output is blanked
Values:
0x00 (LCD_BLANK_DISABLE) - LCD segment output is defined by the driver selection for that segment
0x01 (LCD_BLANK_ENABLE) - All LCD segments are blanked
          </description>
        </field>
        <field name="LCD_ENABLE" bitoffset="0" bitlength="1">
          <description>Enable the LCD driver
Values:
0x00 (LCD_DISABLE) - LCD segment and backplane signals are pulled to ground
0x01 (LCD_ENABLE) - LCD segment signals controlled by the LCD blank setting and segment configuration
          </description>
        </field>
      </register>
      <register name="GPIO_IF4_PWM_CTRL" address="0x40000544" access="RW" resetvalue="0x00000000">
        <description>GPIO Pulse-Width Modulator Control</description>
        <field name="PWM3_ENABLE" bitoffset="3" bitlength="1">
          <description>Enable PWM3 output. Overrides the GPIO 35 (GPIO IF4 pin 27 and LCD driver segment 27) configuration.
Values:
0x00 (PWM3_DISABLE) - Use GPIO IF4, LCD driver function configuration for GPIO 35
0x01 (PWM3_ENABLE) - Enable PWM3 output on GPIO 35
          </description>
        </field>
        <field name="PWM2_ENABLE" bitoffset="2" bitlength="1">
          <description>Enable PWM2 output. Overrides the GPIO 34 (GPIO IF4 pin 26 and LCD driver segment 26) configuration.
Values:
0x00 (PWM2_DISABLE) - Use GPIO IF4, LCD driver function configuration for GPIO 34
0x01 (PWM2_ENABLE) - Enable PWM2 output on GPIO 34
          </description>
        </field>
        <field name="PWM1_ENABLE" bitoffset="1" bitlength="1">
          <description>Enable PWM1 output. Overrides the GPIO 33 (GPIO IF4 pin 25 and LCD driver segment 25) configuration.
Values:
0x00 (PWM1_DISABLE) - Use GPIO IF4, LCD driver function configuration for GPIO 33
0x01 (PWM1_ENABLE) - Enable PWM1 output on GPIO 33
          </description>
        </field>
        <field name="PWM0_ENABLE" bitoffset="0" bitlength="1">
          <description>Enable PWM0 output. Overrides the GPIO 32 (GPIO IF4 pin 24 and LCD driver segment 24) configuration.
Values:
0x00 (PWM0_DISABLE) - Use GPIO IF4, LCD driver function configuration for GPIO 32
0x01 (PWM0_ENABLE) - Enable PWM0 output on GPIO 32
          </description>
        </field>
      </register>
      <register name="GPIO_IF5_FUNC_SEL" address="0x40000548" access="RW" resetvalue="0x0000E001">
        <description>GPIO IF5, Wakeup Function Select</description>
        <field name="PULLDOWN_ENABLE_PIN3" bitoffset="15" bitlength="1">
          <description>Configure the pull-down resistor for GPIO IF5, pin 3
Values:
0x00 (GPIO_IF5_PIN3_PULLDOWN_DISABLE) - Disable the pull-down resistor for GPIO IF5, pin 3
0x01 (GPIO_IF5_PIN3_PULLDOWN_ENABLE) - Enable the pull-down resistor for GPIO IF5, pin 3
          </description>
        </field>
        <field name="PULLDOWN_ENABLE_PIN2" bitoffset="14" bitlength="1">
          <description>Configure the pull-down resistor for GPIO IF5, pin 2
Values:
0x00 (GPIO_IF5_PIN2_PULLDOWN_DISABLE) - Disable the pull-down resistor for GPIO IF5, pin 2
0x01 (GPIO_IF5_PIN2_PULLDOWN_ENABLE) - Enable the pull-down resistor for GPIO IF5, pin 2
          </description>
        </field>
        <field name="PULLUP_ENABLE_PIN1" bitoffset="13" bitlength="1">
          <description>Configure the pull-up resistor for GPIO IF5, pin 1
Values:
0x00 (GPIO_IF5_PIN1_PULLUP_DISABLE) - Disable the pull-up resistor for GPIO IF5, pin 1
0x01 (GPIO_IF5_PIN1_PULLUP_ENABLE) - Enable the pull-up resistor for GPIO IF5, pin 1
          </description>
        </field>
        <field name="PULLUP_ENABLE_PIN0" bitoffset="12" bitlength="1">
          <description>Configure the pull-up resistor for GPIO IF5, pin 0
Values:
0x00 (GPIO_IF5_PIN0_PULLUP_DISABLE) - Disable the pull-up resistor for GPIO IF5, pin 0
0x01 (GPIO_IF5_PIN0_PULLUP_ENABLE) - Enable the pull-up resistor for GPIO IF5, pin 0
          </description>
        </field>
        <field name="OUTPUT_ENABLE_PIN3" bitoffset="11" bitlength="1">
          <description>Enable output on GPIO IF5, pin 3
Values:
0x00 (GPIO_IF5_PIN3_OUTPUT_DISABLE) - Disable output on GPIO IF5, pin 3
0x01 (GPIO_IF5_PIN3_OUTPUT_ENABLE) - Enable output on GPIO IF5, pin 3
          </description>
        </field>
        <field name="OUTPUT_ENABLE_PIN2" bitoffset="10" bitlength="1">
          <description>Enable output on GPIO IF5, pin 2
Values:
0x00 (GPIO_IF5_PIN2_OUTPUT_DISABLE) - Disable output on GPIO IF5, pin 2
0x01 (GPIO_IF5_PIN2_OUTPUT_ENABLE) - Enable output on GPIO IF5, pin 2
          </description>
        </field>
        <field name="OUTPUT_ENABLE_PIN1" bitoffset="9" bitlength="1">
          <description>Enable output on GPIO IF5, pin 1
Values:
0x00 (GPIO_IF5_PIN1_OUTPUT_DISABLE) - Disable output on GPIO IF5, pin 1
0x01 (GPIO_IF5_PIN1_OUTPUT_ENABLE) - Enable output on GPIO IF5, pin 1
          </description>
        </field>
        <field name="OUTPUT_ENABLE_PIN0" bitoffset="8" bitlength="1">
          <description>Enable output on GPIO IF5, pin 0
Values:
0x00 (GPIO_IF5_PIN0_OUTPUT_DISABLE) - Disable output on GPIO IF5, pin 0
0x01 (GPIO_IF5_PIN0_OUTPUT_ENABLE) - Enable output on GPIO IF5, pin 0
          </description>
        </field>
        <field name="INPUT_DATA" bitoffset="4" bitlength="4">
          <description>Input data from GPIO IF5          </description>
        </field>
        <field name="WAKEUP_ENABLE_PIN3" bitoffset="3" bitlength="1">
          <description>Enable wakeup for high-to-low transition GPIO IF5, pin 3
Values:
0x00 (GPIO_IF5_PIN3_WAKEUP_DISABLE) - Disable wakeup controller for GPIO IF5, pin 3
0x01 (GPIO_IF5_PIN3_WAKEUP_ENABLE) - Enable wakeup controller for GPIO IF5, pin 3
          </description>
        </field>
        <field name="WAKEUP_ENABLE_PIN2" bitoffset="2" bitlength="1">
          <description>Enable wakeup for high-to-low transition GPIO IF5, pin 2
Values:
0x00 (GPIO_IF5_PIN2_WAKEUP_DISABLE) - Disable wakeup controller for GPIO IF5, pin 2
0x01 (GPIO_IF5_PIN2_WAKEUP_ENABLE) - Enable wakeup controller for GPIO IF5, pin 2
          </description>
        </field>
        <field name="WAKEUP_ENABLE_PIN1" bitoffset="1" bitlength="1">
          <description>Enable wakeup for low-to-high transition GPIO IF5, pin 1
Values:
0x00 (GPIO_IF5_PIN1_WAKEUP_DISABLE) - Disable wakeup controller for GPIO IF5, pin 1
0x01 (GPIO_IF5_PIN1_WAKEUP_ENABLE) - Enable wakeup controller for GPIO IF5, pin 1
          </description>
        </field>
        <field name="WAKEUP_ENABLE_PIN0" bitoffset="0" bitlength="1">
          <description>Enable wakeup for low-to-high transition GPIO IF5, pin 0
Values:
0x00 (GPIO_IF5_PIN0_WAKEUP_DISABLE) - Disable wakeup controller for GPIO IF5, pin 0
0x01 (GPIO_IF5_PIN0_WAKEUP_ENABLE) - Enable wakeup controller for GPIO IF5, pin 0
          </description>
        </field>
      </register>
      <register name="GPIO_IF5_OUT" address="0x4000054C" access="RW" resetvalue="0x00000000">
        <description>GPIO IF5, Wakeup Output</description>
        <field name="OUTPUT_DATA_PIN3" bitoffset="3" bitlength="1">
          <description>Output data for GPIO IF5, pin 3          </description>
        </field>
        <field name="OUTPUT_DATA_PIN2" bitoffset="2" bitlength="1">
          <description>Output data for GPIO IF5, pin 2          </description>
        </field>
        <field name="OUTPUT_DATA_PIN1" bitoffset="1" bitlength="1">
          <description>Output data for GPIO IF5, pin 1          </description>
        </field>
        <field name="OUTPUT_DATA_PIN0" bitoffset="0" bitlength="1">
          <description>Output data for GPIO IF5, pin 0          </description>
        </field>
      </register>
      <register name="GPIO_IF_INPUT_ENABLE" address="0x40000550" access="RW" resetvalue="0x00000000">
        <description>GPIO Interface Input Enable</description>
        <field name="IF5_INPUT" bitoffset="5" bitlength="1">
          <description>Enable input sampling on GPIO IF5
Values:
0x00 (GPIO_IF5_IN_DISABLE) - Disable input signals on GPIO IF5
0x01 (GPIO_IF5_IN_ENABLE) - Enable input signals on GPIO IF5
          </description>
        </field>
        <field name="IF4_INPUT" bitoffset="4" bitlength="1">
          <description>Enable input sampling on GPIO IF4
Values:
0x00 (GPIO_IF4_IN_DISABLE) - Disable input signals on GPIO IF4
0x01 (GPIO_IF4_IN_ENABLE) - Enable input signals on GPIO IF4
          </description>
        </field>
        <field name="IF3_INPUT" bitoffset="3" bitlength="1">
          <description>Enable input sampling on GPIO IF3
Values:
0x00 (GPIO_IF3_IN_DISABLE) - Disable input signals on GPIO IF3
0x01 (GPIO_IF3_IN_ENABLE) - Enable input signals on GPIO IF3
          </description>
        </field>
        <field name="IF2_INPUT" bitoffset="2" bitlength="1">
          <description>Enable input sampling on GPIO IF2
Values:
0x00 (GPIO_IF2_IN_DISABLE) - Disable input signals on GPIO IF2
0x01 (GPIO_IF2_IN_ENABLE) - Enable input signals on GPIO IF2
          </description>
        </field>
        <field name="IF1_INPUT" bitoffset="1" bitlength="1">
          <description>Enable input sampling on GPIO IF1
Values:
0x00 (GPIO_IF1_IN_DISABLE) - Disable input signals on GPIO IF1
0x01 (GPIO_IF1_IN_ENABLE) - Enable input signals on GPIO IF1
          </description>
        </field>
        <field name="IF0_INPUT" bitoffset="0" bitlength="1">
          <description>Enable input sampling on GPIO IF0
Values:
0x00 (GPIO_IF0_IN_DISABLE) - Disable input signals on GPIO IF0
0x01 (GPIO_IF0_IN_ENABLE) - Enable input signals on GPIO IF0
          </description>
        </field>
      </register>
      <register name="GPIO_INT_CTRL0" address="0x40000560" access="RW" resetvalue="0x00000000">
        <description>GPIO Interrupt Control 0</description>
        <field name="GP0_INT_TYPE" bitoffset="24" bitlength="3">
          <description>Configure general-purpose GPIO interrupt 0
Values:
0x00 (GPIO_GP0_INT_DISABLE) - The GPIO GP0 interrupt is disabled
0x02 (GPIO_GP0_INT_LOW_TRIGGER) - GPIO GP0 interrupt is triggered on a low-level signal
0x03 (GPIO_GP0_INT_HIGH_TRIGGER) - GPIO GP0 interrupt is triggered on a high-level signal
0x04 (GPIO_GP0_INT_EDGE_TRIGGER) - GPIO GP0 interrupt is triggered on a positive or negative edge
0x06 (GPIO_GP0_INT_NEG_EDGE_TRIGGER) - GPIO GP0 interrupt is triggered on a negative edge
0x07 (GPIO_GP0_INT_POS_EDGE_TRIGGER) - GPIO GP0 interrupt is triggered on a positive edge
          </description>
        </field>
        <field name="GP0_INT_SRC" bitoffset="16" bitlength="6">
          <description>Select the source for general-purpose GPIO interrupt 0          </description>
        </field>
        <field name="GP1_INT_TYPE" bitoffset="8" bitlength="3">
          <description>Configure general-purpose GPIO interrupt 1
Values:
0x00 (GPIO_GP1_INT_DISABLE) - The GPIO GP1 interrupt is disabled
0x02 (GPIO_GP1_INT_LOW_TRIGGER) - GPIO GP1 interrupt is triggered on a low-level signal
0x03 (GPIO_GP1_INT_HIGH_TRIGGER) - GPIO GP1 interrupt is triggered on a high-level signal
0x04 (GPIO_GP1_INT_EDGE_TRIGGER) - GPIO GP1 interrupt is triggered on a positive or negative edge
0x06 (GPIO_GP1_INT_NEG_EDGE_TRIGGER) - GPIO GP1 interrupt is triggered on a negative edge
0x07 (GPIO_GP1_INT_POS_EDGE_TRIGGER) - GPIO GP1 interrupt is triggered on a positive edge
          </description>
        </field>
        <field name="GP1_INT_SRC" bitoffset="0" bitlength="6">
          <description>Select the source for general-purpose GPIO interrupt 1          </description>
        </field>
      </register>
      <register name="GPIO_INT_CTRL1" address="0x40000564" access="RW" resetvalue="0x00000000">
        <description>GPIO Interrupt Control 1</description>
        <field name="GP3_INT_TYPE" bitoffset="24" bitlength="3">
          <description>Configure general-purpose GPIO interrupt 3
Values:
0x00 (GPIO_GP3_INT_DISABLE) - The GPIO GP3 interrupt is disabled
0x02 (GPIO_GP3_INT_LOW_TRIGGER) - GPIO GP3 interrupt is triggered on a low-level signal
0x03 (GPIO_GP3_INT_HIGH_TRIGGER) - GPIO GP3 interrupt is triggered on a high-level signal
0x04 (GPIO_GP3_INT_EDGE_TRIGGER) - GPIO GP3 interrupt is triggered on a positive or negative edge
0x06 (GPIO_GP3_INT_NEG_EDGE_TRIGGER) - GPIO GP3 interrupt is triggered on a negative edge
0x07 (GPIO_GP3_INT_POS_EDGE_TRIGGER) - GPIO GP3 interrupt is triggered on a positive edge
          </description>
        </field>
        <field name="GP3_INT_SRC" bitoffset="16" bitlength="6">
          <description>Select the source for general-purpose GPIO interrupt 3          </description>
        </field>
        <field name="GP2_INT_TYPE" bitoffset="8" bitlength="3">
          <description>Configure general-purpose GPIO interrupt 2
Values:
0x00 (GPIO_GP2_INT_DISABLE) - The GPIO GP2 interrupt is disabled
0x02 (GPIO_GP2_INT_LOW_TRIGGER) - GPIO GP2 interrupt is triggered on a low-level signal
0x03 (GPIO_GP2_INT_HIGH_TRIGGER) - GPIO GP2 interrupt is triggered on a high-level signal
0x04 (GPIO_GP2_INT_EDGE_TRIGGER) - GPIO GP2 interrupt is triggered on a positive or negative edge
0x06 (GPIO_GP2_INT_NEG_EDGE_TRIGGER) - GPIO GP2 interrupt is triggered on a negative edge
0x07 (GPIO_GP2_INT_POS_EDGE_TRIGGER) - GPIO GP2 interrupt is triggered on a positive edge
          </description>
        </field>
        <field name="GP2_INT_SRC" bitoffset="0" bitlength="6">
          <description>Select the source for general-purpose GPIO interrupt 2          </description>
        </field>
      </register>
      <register name="GPIO_INT_CTRL2" address="0x40000568" access="RW" resetvalue="0x00000000">
        <description>GPIO Interrupt Control 2</description>
        <field name="GP5_INT_TYPE" bitoffset="24" bitlength="3">
          <description>Configure general-purpose GPIO interrupt 5
Values:
0x00 (GPIO_GP5_INT_DISABLE) - The GPIO GP5 interrupt is disabled
0x02 (GPIO_GP5_INT_LOW_TRIGGER) - GPIO GP5 interrupt is triggered on a low-level signal
0x03 (GPIO_GP5_INT_HIGH_TRIGGER) - GPIO GP5 interrupt is triggered on a high-level signal
0x04 (GPIO_GP5_INT_EDGE_TRIGGER) - GPIO GP5 interrupt is triggered on a positive or negative edge
0x06 (GPIO_GP5_INT_NEG_EDGE_TRIGGER) - GPIO GP5 interrupt is triggered on a negative edge
0x07 (GPIO_GP5_INT_POS_EDGE_TRIGGER) - GPIO GP5 interrupt is triggered on a positive edge
          </description>
        </field>
        <field name="GP5_INT_SRC" bitoffset="16" bitlength="6">
          <description>Select the source for general-purpose GPIO interrupt 5          </description>
        </field>
        <field name="GP4_INT_TYPE" bitoffset="8" bitlength="3">
          <description>Configure general-purpose GPIO interrupt 4
Values:
0x00 (GPIO_GP4_INT_DISABLE) - The GPIO GP4 interrupt is disabled
0x02 (GPIO_GP4_INT_LOW_TRIGGER) - GPIO GP4 interrupt is triggered on a low-level signal
0x03 (GPIO_GP4_INT_HIGH_TRIGGER) - GPIO GP4 interrupt is triggered on a high-level signal
0x04 (GPIO_GP4_INT_EDGE_TRIGGER) - GPIO GP4 interrupt is triggered on a positive or negative edge
0x06 (GPIO_GP4_INT_NEG_EDGE_TRIGGER) - GPIO GP4 interrupt is triggered on a negative edge
0x07 (GPIO_GP4_INT_POS_EDGE_TRIGGER) - GPIO GP4 interrupt is triggered on a positive edge
          </description>
        </field>
        <field name="GP4_INT_SRC" bitoffset="0" bitlength="6">
          <description>Select the source for general-purpose GPIO interrupt 4          </description>
        </field>
      </register>
      <register name="GPIO_INT_CTRL3" address="0x4000056C" access="RW" resetvalue="0x00000000">
        <description>GPIO Interrupt Control 3</description>
        <field name="GP7_INT_TYPE" bitoffset="24" bitlength="3">
          <description>Configure general-purpose GPIO interrupt 7
Values:
0x00 (GPIO_GP7_INT_DISABLE) - The GPIO GP7 interrupt is disabled
0x02 (GPIO_GP7_INT_LOW_TRIGGER) - GPIO GP7 interrupt is triggered on a low-level signal
0x03 (GPIO_GP7_INT_HIGH_TRIGGER) - GPIO GP7 interrupt is triggered on a high-level signal
0x04 (GPIO_GP7_INT_EDGE_TRIGGER) - GPIO GP7 interrupt is triggered on a positive or negative edge
0x06 (GPIO_GP7_INT_NEG_EDGE_TRIGGER) - GPIO GP7 interrupt is triggered on a negative edge
0x07 (GPIO_GP7_INT_POS_EDGE_TRIGGER) - GPIO GP7 interrupt is triggered on a positive edge
          </description>
        </field>
        <field name="GP7_INT_SRC" bitoffset="16" bitlength="6">
          <description>Select the source for general-purpose GPIO interrupt 7          </description>
        </field>
        <field name="GP6_INT_TYPE" bitoffset="8" bitlength="3">
          <description>Configure general-purpose GPIO interrupt 6
Values:
0x00 (GPIO_GP6_INT_DISABLE) - The GPIO GP6 interrupt is disabled
0x02 (GPIO_GP6_INT_LOW_TRIGGER) - GPIO GP6 interrupt is triggered on a low-level signal
0x03 (GPIO_GP6_INT_HIGH_TRIGGER) - GPIO GP6 interrupt is triggered on a high-level signal
0x04 (GPIO_GP6_INT_EDGE_TRIGGER) - GPIO GP6 interrupt is triggered on a positive or negative edge
0x06 (GPIO_GP6_INT_NEG_EDGE_TRIGGER) - GPIO GP6 interrupt is triggered on a negative edge
0x07 (GPIO_GP6_INT_POS_EDGE_TRIGGER) - GPIO GP6 interrupt is triggered on a positive edge
          </description>
        </field>
        <field name="GP6_INT_SRC" bitoffset="0" bitlength="6">
          <description>Select the source for general-purpose GPIO interrupt 6          </description>
        </field>
      </register>
    </registergroup>
    <registergroup name="SPI0" description="SPI0 Interface Configuration and Control">
      <register name="SPI0_CTRL0" address="0x40000600" access="RW" resetvalue="0x00000000">
        <description>SPI0 Control and Configuration Register</description>
        <field name="SQI_ENABLE" bitoffset="11" bitlength="1">
          <description>Enable SQI operation (nibble width transfers)
Values:
0x00 (SPI0_SELECT_SPI) - The SPI0 interface operates in SPI mode
0x01 (SPI0_SELECT_SQI) - The SPI0 interface operates in SQI mode
          </description>
        </field>
        <field name="OVERRUN_INT_ENABLE" bitoffset="10" bitlength="1">
          <description>Enable SPI0 overrun interrupts
Values:
0x00 (SPI0_OVERRUN_INT_DISABLE) - No interrupts are raised when an overrun occurs on the SPI0 interface
0x01 (SPI0_OVERRUN_INT_ENABLE) - An interrupt is raised when an overrun occurs on the SPI0 interface
          </description>
        </field>
        <field name="UNDERRUN_INT_ENABLE" bitoffset="9" bitlength="1">
          <description>Enable SPI0 underrun interrupts
Values:
0x00 (SPI0_UNDERRUN_INT_DISABLE) - No interrupts are raised when an underrun occurs on the SPI0 interface
0x01 (SPI0_UNDERRUN_INT_ENABLE) - An interrupt is raised when an underrun occurs on the SPI0 interface
          </description>
        </field>
        <field name="CONTROLLER" bitoffset="8" bitlength="1">
          <description>Select whether data transfer will be controlled by the ARM Cortex-M3 processor or the DMA for SPI0
Values:
0x00 (SPI0_CONTROLLER_CM3) - The ARM Cortex-M3 controls data transfers using SPI0
0x01 (SPI0_CONTROLLER_DMA) - The DMA controls data transfers using SPI0
          </description>
        </field>
        <field name="SLAVE" bitoffset="7" bitlength="1">
          <description>Use the SPI0 interface as master or slave
Values:
0x00 (SPI0_SELECT_MASTER) - Use the SPI0 interface in master mode
0x01 (SPI0_SELECT_SLAVE) - Use the SPI0 interface in slave mode
          </description>
        </field>
        <field name="SERI_PULLUP_ENABLE" bitoffset="6" bitlength="1">
          <description>Configure the optional pull-up resistor for the SERI pad of SPI0
Values:
0x00 (SPI0_SERI_PULLUP_DISABLE) - Disconnect the pull-up resistor from the SPI0 SERI pad
0x01 (SPI0_SERI_PULLUP_ENABLE) - Connect a pull-up resistor to the SPI0 SERI pad
          </description>
        </field>
        <field name="CLK_POLARITY" bitoffset="5" bitlength="1">
          <description>Select the polarity of the SPI0 clock
Values:
0x00 (SPI0_CLK_POLARITY_NORMAL) - SERO changes on the rising edge of SPI0 clock, SERI changes on the falling edge of SPI0 clock
0x01 (SPI0_CLK_POLARITY_INVERSE) - SERO changes on the falling edge of SPI0 clock, SERI changes on the rising edge of SPI0 clock
          </description>
        </field>
        <field name="MODE_SELECT" bitoffset="4" bitlength="1">
          <description>Select between manual and auto transaction handling modes for SPI0 master transactions
Values:
0x00 (SPI0_MODE_SELECT_MANUAL) - Master transfers using the SPI0 interface do not automatically continue
0x01 (SPI0_MODE_SELECT_AUTO) - Automatically continue master transfers using the SPI0 interface
          </description>
        </field>
        <field name="ENABLE" bitoffset="3" bitlength="1">
          <description>Enable/disable the SPI0 interface
Values:
0x00 (SPI0_DISABLE) - Disable the SPI0 interface
0x01 (SPI0_ENABLE) - Enable the SPI0 interface
          </description>
        </field>
        <field name="PRESCALE" bitoffset="0" bitlength="3">
          <description>Prescale the SPI0 interface clock for master transfers
Values:
0x00 (SPI0_PRESCALE_2) - Prescale the SPI0 interface clock by 2
0x01 (SPI0_PRESCALE_4) - Prescale the SPI0 interface clock by 4
0x02 (SPI0_PRESCALE_8) - Prescale the SPI0 interface clock by 8
0x03 (SPI0_PRESCALE_16) - Prescale the SPI0 interface clock by 16
0x04 (SPI0_PRESCALE_32) - Prescale the SPI0 interface clock by 32
0x05 (SPI0_PRESCALE_64) - Prescale the SPI0 interface clock by 64
0x06 (SPI0_PRESCALE_128) - Prescale the SPI0 interface clock by 128
0x07 (SPI0_PRESCALE_256) - Prescale the SPI0 interface clock by 256
          </description>
        </field>
      </register>
      <register name="SPI0_CTRL1" address="0x40000604" access="RW" resetvalue="0x00000020">
        <description>SPI0 Transaction Control Register</description>
        <field name="START_BUSY" bitoffset="7" bitlength="1">
          <description>Start an SPI0 data transfer and indicate if a transfer is in progress
Values:
0x00 (SPI0_IDLE) - Stop a transfer or indicate that the SPI0 interface is idle
0x01 (SPI0_START) - Start a transfer on the SPI0 interface
0x01 (SPI0_BUSY) - Indicate that the SPI0 interface is currently transferring data
          </description>
        </field>
        <field name="RW_CMD" bitoffset="6" bitlength="1">
          <description>Issue a read command or write command to the SPI0 interface
Values:
0x00 (SPI0_WRITE_DATA) - Write data using the SPI0 interface
0x01 (SPI0_READ_DATA) - Read data using the SPI0 interface
          </description>
        </field>
        <field name="CS" bitoffset="5" bitlength="1">
          <description>Set the chip-select line for SPI0 (master mode); read the chip-select line for SPI0 (slave mode)
Values:
0x00 (SPI0_CS_0) - Set the chip-select line to 0
0x01 (SPI0_CS_1) - Set the chip-select line to 1
          </description>
        </field>
        <field name="WORD_SIZE" bitoffset="0" bitlength="5">
          <description>Select the word size used by the SPI interface (word size = SPI0_CTRL1_WORD_SIZE + 1)
Values:
0x00 (SPI0_WORD_SIZE_1) - SPI transfers use 1-bit words
0x07 (SPI0_WORD_SIZE_8) - SPI transfers use 8-bit words
0x0F (SPI0_WORD_SIZE_16) - SPI transfers use 16-bit words
0x17 (SPI0_WORD_SIZE_24) - SPI transfers use 24-bit words
0x1F (SPI0_WORD_SIZE_32) - SPI transfers use 32-bit words
          </description>
        </field>
      </register>
      <register name="SPI0_DATA" address="0x40000608" access="RW" resetvalue="0x00000000">
        <description>SPI0 Data</description>
        <field name="SPI0_DATA" bitoffset="0" bitlength="32">
          <description>Single word buffer for data to be transmitted over the SPI0 interface and data that has been received over the SPI0 interface          </description>
        </field>
      </register>
      <register name="SPI0_DATA_S" address="0x4000060C" access="RW" resetvalue="0x00000000">
        <description>Shadow of SPI0 Data</description>
        <field name="SPI0_DATA_S" bitoffset="0" bitlength="32">
          <description>"Shadow register for SPI0_DATA providing no side effect access to the interface's data"          </description>
        </field>
      </register>
      <register name="SPI0_SLAVE_DATA" address="0x40000610" access="RW" resetvalue="0x00000000">
        <description>SPI0 Data for Slave Operations</description>
        <field name="SPI0_DATA" bitoffset="0" bitlength="32">
          <description>Single word buffer for data that has been received over the SPI0 interface when operating in slave mode          </description>
        </field>
      </register>
      <register name="SPI0_STATUS" address="0x40000614" access="RW" resetvalue="0x00000000">
        <description>SPI0 Status</description>
        <field name="OVERRUN_STATUS" bitoffset="1" bitlength="1">
          <description>Indicate that an overrun has occurred when receiving data on the SPI0 interface
Values:
0x00 (SPI0_OVERRUN_FALSE) - SPI0 no input overrun detected
0x01 (SPI0_OVERRUN_TRUE) - SPI0 input overrun detected
0x01 (SPI0_OVERRUN_CLEAR) - Clear the SPI0 overrun bit
          </description>
        </field>
        <field name="UNDERRUN_STATUS" bitoffset="0" bitlength="1">
          <description>Indicate that an underrun has occurred when transmitting data on the SPI0 interface
Values:
0x00 (SPI0_UNDERRUN_FALSE) - SPI0 no input underrun detected
0x01 (SPI0_UNDERRUN_TRUE) - SPI0 input underrun detected
0x01 (SPI0_UNDERRUN_CLEAR) - Clear the SPI0 underrun bit
          </description>
        </field>
      </register>
    </registergroup>
    <registergroup name="SPI1" description="SPI1 Interface Configuration and Control">
      <register name="SPI1_CTRL0" address="0x40000700" access="RW" resetvalue="0x00000000">
        <description>SPI1 Control and Configuration Register</description>
        <field name="OVERRUN_INT_ENABLE" bitoffset="10" bitlength="1">
          <description>Enable SPI1 overrun interrupts
Values:
0x00 (SPI1_OVERRUN_INT_DISABLE) - No interrupts are raised when an overrun occurs on the SPI1 interface
0x01 (SPI1_OVERRUN_INT_ENABLE) - An interrupt is raised when an overrun occurs on the SPI1 interface
          </description>
        </field>
        <field name="UNDERRUN_INT_ENABLE" bitoffset="9" bitlength="1">
          <description>Enable SPI1 underrun interrupts
Values:
0x00 (SPI1_UNDERRUN_INT_DISABLE) - No interrupts are raised when an underrun occurs on the SPI1 interface
0x01 (SPI1_UNDERRUN_INT_ENABLE) - An interrupt is raised when an underrun occurs on the SPI1 interface
          </description>
        </field>
        <field name="CONTROLLER" bitoffset="8" bitlength="1">
          <description>Select whether data transfer will be controlled by the ARM Cortex-M3 processor or the DMA for SPI1
Values:
0x00 (SPI1_CONTROLLER_CM3) - The ARM Cortex-M3 controls data transfers using SPI1
0x01 (SPI1_CONTROLLER_DMA) - The DMA controls data transfers using SPI1
          </description>
        </field>
        <field name="SLAVE" bitoffset="7" bitlength="1">
          <description>Use the SPI1 interface as master or slave
Values:
0x00 (SPI1_SELECT_MASTER) - Use the SPI1 interface in master mode
0x01 (SPI1_SELECT_SLAVE) - Use the SPI1 interface in slave mode
          </description>
        </field>
        <field name="SERI_PULLUP_ENABLE" bitoffset="6" bitlength="1">
          <description>Configure the optional pull-up resistor for the SERI pad of SPI1
Values:
0x00 (SPI1_SERI_PULLUP_DISABLE) - Disconnect the pull-up resistor from the SPI1 SERI pad
0x01 (SPI1_SERI_PULLUP_ENABLE) - Connect a pull-up resistor to the SPI1 SERI pad
          </description>
        </field>
        <field name="CLK_POLARITY" bitoffset="5" bitlength="1">
          <description>Select the polarity of the SPI1 clock
Values:
0x00 (SPI1_CLK_POLARITY_NORMAL) - SERO changes on the rising edge of SPI1 clock, SERI changes on the falling edge of SPI1 clock
0x01 (SPI1_CLK_POLARITY_INVERSE) - SERO changes on the falling edge of SPI1 clock, SERI changes on the rising edge of SPI1 clock
          </description>
        </field>
        <field name="MODE_SELECT" bitoffset="4" bitlength="1">
          <description>Select between manual and auto transaction handling modes for SPI1 master transactions
Values:
0x00 (SPI1_MODE_SELECT_MANUAL) - Master transfers using the SPI1 interface do not automatically continue
0x01 (SPI1_MODE_SELECT_AUTO) - Automatically continue master transfers using the SPI1 interface
          </description>
        </field>
        <field name="ENABLE" bitoffset="3" bitlength="1">
          <description>Enable/disable the SPI1 interface
Values:
0x00 (SPI1_DISABLE) - Disable the SPI1 interface
0x01 (SPI1_ENABLE) - Enable the SPI1 interface
          </description>
        </field>
        <field name="PRESCALE" bitoffset="0" bitlength="3">
          <description>Prescale the SPI1 interface clock for master transfers
Values:
0x00 (SPI1_PRESCALE_2) - Prescale the SPI1 interface clock by 2
0x01 (SPI1_PRESCALE_4) - Prescale the SPI1 interface clock by 4
0x02 (SPI1_PRESCALE_8) - Prescale the SPI1 interface clock by 8
0x03 (SPI1_PRESCALE_16) - Prescale the SPI1 interface clock by 16
0x04 (SPI1_PRESCALE_32) - Prescale the SPI1 interface clock by 32
0x05 (SPI1_PRESCALE_64) - Prescale the SPI1 interface clock by 64
0x06 (SPI1_PRESCALE_128) - Prescale the SPI1 interface clock by 128
0x07 (SPI1_PRESCALE_256) - Prescale the SPI1 interface clock by 256
          </description>
        </field>
      </register>
      <register name="SPI1_CTRL1" address="0x40000704" access="RW" resetvalue="0x00000020">
        <description>SPI1 Transaction Control Register</description>
        <field name="START_BUSY" bitoffset="7" bitlength="1">
          <description>Start an SPI1 data transfer and indicate if a transfer is in progress
Values:
0x00 (SPI1_IDLE) - Stop a transfer or indicate that the SPI1 interface is idle
0x01 (SPI1_START) - Start a transfer on the SPI1 interface
0x01 (SPI1_BUSY) - Indicate that the SPI1 interface is currently transferring data
          </description>
        </field>
        <field name="RW_CMD" bitoffset="6" bitlength="1">
          <description>Issue a read command or write command to the SPI1 interface
Values:
0x00 (SPI1_WRITE_DATA) - Write data using the SPI1 interface
0x01 (SPI1_READ_DATA) - Read data using the SPI1 interface
          </description>
        </field>
        <field name="CS" bitoffset="5" bitlength="1">
          <description>Set the chip-select line for SPI1 (master mode); read the chip-select line for SPI1 (slave mode)
Values:
0x00 (SPI1_CS_0) - Set the chip-select line to 0
0x01 (SPI1_CS_1) - Set the chip-select line to 1
          </description>
        </field>
        <field name="WORD_SIZE" bitoffset="0" bitlength="5">
          <description>Select the word size used by the SPI interface (word size = SPI1_CTRL1_WORD_SIZE + 1)
Values:
0x00 (SPI1_WORD_SIZE_1) - SPI transfers use 1-bit words
0x07 (SPI1_WORD_SIZE_8) - SPI transfers use 8-bit words
0x0F (SPI1_WORD_SIZE_16) - SPI transfers use 16-bit words
0x17 (SPI1_WORD_SIZE_24) - SPI transfers use 24-bit words
0x1F (SPI1_WORD_SIZE_32) - SPI transfers use 32-bit words
          </description>
        </field>
      </register>
      <register name="SPI1_DATA" address="0x40000708" access="RW" resetvalue="0x00000000">
        <description>SPI1 Data</description>
        <field name="SPI1_DATA" bitoffset="0" bitlength="32">
          <description>Single word buffer for data to be transmitted over the SPI1 interface and data that has been received over the SPI1 interface          </description>
        </field>
      </register>
      <register name="SPI1_DATA_S" address="0x4000070C" access="RW" resetvalue="0x00000000">
        <description>Shadow of SPI1 Data</description>
        <field name="SPI1_DATA_S" bitoffset="0" bitlength="32">
          <description>"Shadow register for SPI1_DATA providing no side effect access to the interface's data"          </description>
        </field>
      </register>
      <register name="SPI1_SLAVE_DATA" address="0x40000710" access="RW" resetvalue="0x00000000">
        <description>SPI1 Data for Slave Operations</description>
        <field name="SPI1_DATA" bitoffset="0" bitlength="32">
          <description>Single word buffer for data that has been received over the SPI1 interface when operating in slave mode          </description>
        </field>
      </register>
      <register name="SPI1_STATUS" address="0x40000714" access="RW" resetvalue="0x00000000">
        <description>SPI1 Status</description>
        <field name="OVERRUN_STATUS" bitoffset="1" bitlength="1">
          <description>Indicate that an overrun has occurred when receiving data on the SPI1 interface
Values:
0x00 (SPI1_OVERRUN_FALSE) - SPI1 no input overrun detected
0x01 (SPI1_OVERRUN_TRUE) - SPI1 input overrun detected
0x01 (SPI1_OVERRUN_CLEAR) - Clear the SPI1 overrun bit
          </description>
        </field>
        <field name="UNDERRUN_STATUS" bitoffset="0" bitlength="1">
          <description>Indicate that an underrun has occurred when transmitting data on the SPI1 interface
Values:
0x00 (SPI1_UNDERRUN_FALSE) - SPI1 no input underrun detected
0x01 (SPI1_UNDERRUN_TRUE) - SPI1 input underrun detected
0x01 (SPI1_UNDERRUN_CLEAR) - Clear the SPI1 underrun bit
          </description>
        </field>
      </register>
    </registergroup>
    <registergroup name="PCM" description="PCM Interface Configuration and Control">
      <register name="PCM_CTRL" address="0x40000800" access="RW" resetvalue="0x00000601">
        <description>PCM Control</description>
        <field name="PULLUP_ENABLE" bitoffset="13" bitlength="1">
          <description>Configure the optional pull-up resistors for the PCM interface input pads
Values:
0x00 (PCM_PULLUP_DISABLE) - Disconnect the pull-up resistors from the PCM input pads
0x01 (PCM_PULLUP_ENABLE) - Connect the pull-up resistors to the PCM input pads
          </description>
        </field>
        <field name="BIT_ORDER" bitoffset="12" bitlength="1">
          <description>Select whether the data will be transmitted starting with the MSB or LSB
Values:
0x00 (PCM_BIT_ORDER_MSB_FIRST) - PCM data is ordered from MSB to LSB
0x01 (PCM_BIT_ORDER_LSB_FIRST) - PCM data is ordered from LSB to MSB
          </description>
        </field>
        <field name="TX_ALIGN" bitoffset="11" bitlength="1">
          <description>Select what bits to use for transmit data
Values:
0x00 (PCM_TX_ALIGN_MSB) - Use MSBs of transmit buffer when word size is less that 32 bits
0x01 (PCM_TX_ALIGN_LSB) - Use LSBs of transmit buffer when word size is less that 32 bits
          </description>
        </field>
        <field name="WORD_SIZE" bitoffset="9" bitlength="2">
          <description>Select the number of bits per PCM word
Values:
0x00 (PCM_WORD_SIZE_8) - Use 8-bits words
0x01 (PCM_WORD_SIZE_16) - Use 16-bits words
0x02 (PCM_WORD_SIZE_24) - Use 24-bits words
0x03 (PCM_WORD_SIZE_32) - Use 32-bits words
          </description>
        </field>
        <field name="FRAME_ALIGN" bitoffset="8" bitlength="1">
          <description>Align the PCM frame signal to the first/last bit
Values:
0x00 (PCM_FRAME_ALIGN_LAST) - Align the PCM frame signal to the last bit of the frame
0x01 (PCM_FRAME_ALIGN_FIRST) - Align the PCM frame signal to the first bit of the frame
          </description>
        </field>
        <field name="FRAME_WIDTH" bitoffset="7" bitlength="1">
          <description>Use a long/short PCM frame signal
Values:
0x00 (PCM_FRAME_WIDTH_SHORT) - The PCM frame is high for one PCM clock period
0x01 (PCM_FRAME_WIDTH_LONG) - The PCM frame is high for half of the frame length
          </description>
        </field>
        <field name="FRAME_LENGTH" bitoffset="4" bitlength="3">
          <description>Select the number of words per PCM frame
Values:
0x00 (PCM_FRAME_LENGTH_2) - PCM frames contain 2 words
0x01 (PCM_FRAME_LENGTH_4) - PCM frames contain 4 words
0x02 (PCM_FRAME_LENGTH_6) - PCM frames contain 6 words
0x03 (PCM_FRAME_LENGTH_8) - PCM frames contain 8 words
0x04 (PCM_FRAME_LENGTH_10) - PCM frames contain 10 words
0x05 (PCM_FRAME_LENGTH_12) - PCM frames contain 12 words
0x06 (PCM_FRAME_LENGTH_14) - PCM frames contain 14 words
0x07 (PCM_FRAME_LENGTH_16) - PCM frames contain 16 words
          </description>
        </field>
        <field name="FRAME_SUBFRAMES" bitoffset="3" bitlength="1">
          <description>Enable/disable use of PCM subframes
Values:
0x00 (PCM_SUBFRAMES_DISABLE) - Disable the use of PCM subframes
0x01 (PCM_SUBFRAMES_ENABLE) - Enable the use of PCM subframes
          </description>
        </field>
        <field name="CONTROLLER" bitoffset="2" bitlength="1">
          <description>Select whether data transfer will be controlled by the ARM Cortex-M3 processor or the DMA for PCM
Values:
0x00 (PCM_CONTROLLER_CM3) - The ARM Cortex-M3 controls data transfers using PCM
0x01 (PCM_CONTROLLER_DMA) - The DMA controls data transfers using PCM
          </description>
        </field>
        <field name="ENABLE" bitoffset="1" bitlength="1">
          <description>Enable/disable the PCM interface
Values:
0x00 (PCM_DISABLE) - Disable the PCM interface
0x01 (PCM_ENABLE) - Enable the PCM interface
          </description>
        </field>
        <field name="SLAVE" bitoffset="0" bitlength="1">
          <description>Use the PCM interface as a master/slave
Values:
0x00 (PCM_SELECT_MASTER) - Use the PCM interface in master mode
0x01 (PCM_SELECT_SLAVE) - Use the PCM interface in slave mode
          </description>
        </field>
      </register>
      <register name="PCM_TX_DATA" address="0x40000804" access="RW" resetvalue="0x00000000">
        <description>PCM Transmit Data</description>
        <field name="PCM_TX_DATA" bitoffset="0" bitlength="32">
          <description>Data to transmit over the PCM interface          </description>
        </field>
      </register>
      <register name="PCM_RX_DATA" address="0x40000808" access="RO" resetvalue="0x00000000">
        <description>PCM Receive Data</description>
        <field name="PCM_RX_DATA" bitoffset="0" bitlength="32">
          <description>Data received from the PCM interface          </description>
        </field>
      </register>
    </registergroup>
    <registergroup name="I2C" description="I2C Interface Configuration and Control">
      <register name="I2C_CTRL0" address="0x40000900" access="RW" resetvalue="0x00001000">
        <description>I2C Interface Configuration and Control</description>
        <field name="MASTER_SPEED_PRESCALAR" bitoffset="16" bitlength="8">
          <description>Prescalar used to convert the interface I2C clock to SCL when operating in I2C interface master mode. I2C clock is prescaled by (MASTER_SPEED_PRESCALAR + 1) * 3
Values:
0x00 (I2C_MASTER_SPEED_3) - Prescale SCL from I2C clock by 3
0x01 (I2C_MASTER_SPEED_6) - Prescale SCL from I2C clock by 6
0x02 (I2C_MASTER_SPEED_9) - Prescale SCL from I2C clock by 9
0x03 (I2C_MASTER_SPEED_12) - Prescale SCL from I2C clock by 12
0x04 (I2C_MASTER_SPEED_15) - Prescale SCL from I2C clock by 15
0x05 (I2C_MASTER_SPEED_18) - Prescale SCL from I2C clock by 18
0x06 (I2C_MASTER_SPEED_21) - Prescale SCL from I2C clock by 21
0x07 (I2C_MASTER_SPEED_24) - Prescale SCL from I2C clock by 24
0x08 (I2C_MASTER_SPEED_27) - Prescale SCL from I2C clock by 27
0x09 (I2C_MASTER_SPEED_30) - Prescale SCL from I2C clock by 30
0x0A (I2C_MASTER_SPEED_33) - Prescale SCL from I2C clock by 33
0x0B (I2C_MASTER_SPEED_36) - Prescale SCL from I2C clock by 36
0x0C (I2C_MASTER_SPEED_39) - Prescale SCL from I2C clock by 39
0x0D (I2C_MASTER_SPEED_42) - Prescale SCL from I2C clock by 42
0x0E (I2C_MASTER_SPEED_45) - Prescale SCL from I2C clock by 45
0x0F (I2C_MASTER_SPEED_48) - Prescale SCL from I2C clock by 48
0x10 (I2C_MASTER_SPEED_51) - Prescale SCL from I2C clock by 51
          </description>
        </field>
        <field name="SLAVE_ADDRESS" bitoffset="8" bitlength="7">
          <description>Set the I2C slave address for this device          </description>
        </field>
        <field name="CONTROLLER" bitoffset="4" bitlength="1">
          <description>Select whether data transfer will be controlled by the ARM Cortex-M3 processor or the DMA for I2C
Values:
0x00 (I2C_CONTROLLER_CM3) - The ARM Cortex-M3 controls data transfers using I2C
0x01 (I2C_CONTROLLER_DMA) - The DMA controls data transfers using I2C
          </description>
        </field>
        <field name="STOP_INT_ENABLE" bitoffset="3" bitlength="1">
          <description>Configure whether stop interrupts will be generated by the I2C interface
Values:
0x00 (I2C_STOP_INT_DISABLE) - Stop interrupts will not be generated
0x01 (I2C_STOP_INT_ENABLE) - A stop interrupt will be generated when a stop condition occurs for an active transaction
          </description>
        </field>
        <field name="AUTO_ACK_ENABLE" bitoffset="2" bitlength="1">
          <description>Select whether acknowledgement is automatically generated or not
Values:
0x00 (I2C_AUTO_ACK_DISABLE) - Require manual acknowledgement of all I2C interface transfers
0x01 (I2C_AUTO_ACK_ENABLE) - Use automatic acknowledgement for I2C interface transfers
          </description>
        </field>
        <field name="SLAVE_ENABLE" bitoffset="0" bitlength="1">
          <description>Select whether the I2C interface will be enabled for slave mode or not
Values:
0x00 (I2C_SLAVE_DISABLE) - Disable I2C interface slave mode operation
0x01 (I2C_SLAVE_ENABLE) - Enable I2C interface slave mode operation
          </description>
        </field>
      </register>
      <register name="I2C_CTRL1" address="0x40000904" access="RW" resetvalue="0x00000000">
        <description>I2C Interface Status and Control</description>
        <field name="RESET" bitoffset="5" bitlength="1">
          <description>Reset the I2C interface
Values:
0x01 (I2C_RESET) - Reset the I2C interface
          </description>
        </field>
        <field name="LAST_DATA" bitoffset="4" bitlength="1">
          <description>Indicate that the current data is the last byte of a data transfer
Values:
0x01 (I2C_LAST_DATA) - Indicate that the current data is the last byte of a data transfer
          </description>
        </field>
        <field name="STOP" bitoffset="3" bitlength="1">
          <description>Issue a stop condition on the I2C interface bus
Values:
0x01 (I2C_STOP) - Issue a stop condition the I2C interface bus
          </description>
        </field>
        <field name="NACK" bitoffset="1" bitlength="1">
          <description>Issue a not acknowledge on the I2C interface bus
Values:
0x01 (I2C_NACK) - Issue a not acknowledge on the I2C interface bus
          </description>
        </field>
        <field name="ACK" bitoffset="0" bitlength="1">
          <description>Issue an acknowledge on the I2C interface bus
Values:
0x01 (I2C_ACK) - Issue an acknowledge on the I2C interface bus
          </description>
        </field>
      </register>
      <register name="I2C_PHY_CTRL" address="0x40000908" access="RW" resetvalue="0x00000001">
        <description>I2C Physical Interface Control</description>
        <field name="PULLUP_SELECT" bitoffset="1" bitlength="1">
          <description>Configure the optional pull-up resistors for the I2C interface lines
Values:
0x00 (I2C_PULLUP_1K) - Use 1 kohm pull-up resistors on the I2C SCL and SDA lines
0x01 (I2C_PULLUP_DISABLE) - Disconnect the pull-up resistors from the I2C interface
          </description>
        </field>
        <field name="FILTER_ENABLE" bitoffset="0" bitlength="1">
          <description>Configure whether the I2C bus lines will be low-pass filtered
Values:
0x00 (I2C_FILTER_DISABLE) - Disable filtering of the I2C bus lines
0x01 (I2C_FILTER_ENABLE) - Enable low-pass filtering of the I2C bus lines
          </description>
        </field>
      </register>
      <register name="I2C_DATA" address="0x40000910" access="RW" resetvalue="0x00000000">
        <description>I2C Interface Data</description>
        <field name="I2C_DATA" bitoffset="0" bitlength="8">
          <description>Single byte buffer for data to be transmitted over the I2C interface and data that has been received over the I2C interface          </description>
        </field>
      </register>
      <register name="I2C_DATA_S" address="0x40000914" access="RW" resetvalue="0x00000000">
        <description>I2C Interface Data (Shadow)</description>
        <field name="I2C_DATA_S" bitoffset="0" bitlength="8">
          <description>Shadow of the single byte buffer for data to be transmitted over the I2C interface and data that has been received over the I2C interface          </description>
        </field>
      </register>
      <register name="I2C_ADDR_START" address="0x40000918" access="WO" resetvalue="0x00000000">
        <description>I2C Master Address and Start</description>
        <field name="ADDRESS" bitoffset="1" bitlength="7">
          <description>I2C address to use for the transaction          </description>
        </field>
        <field name="READ_WRITE" bitoffset="0" bitlength="1">
          <description>Select whether a read or a write transaction is started
Values:
0x00 (I2C_WRITE) - Start a I2C write transaction
0x01 (I2C_READ) - Start a I2C read transaction
          </description>
        </field>
      </register>
      <register name="I2C_STATUS" address="0x4000091C" access="RO" resetvalue="0x00000010">
        <description>I2C Status</description>
        <field name="DMA_REQ" bitoffset="11" bitlength="1">
          <description>Indicate if the I2C interface is currently requesting DMA data
Values:
0x00 (I2C_NO_DMA_REQUEST) - The I2C interface is not requesting a DMA action
0x01 (I2C_DMA_REQUEST) - The I2C interface is requesting a DMA action
          </description>
        </field>
        <field name="STOP_DETECT" bitoffset="10" bitlength="1">
          <description>Indicate if an I2C stop bit has been detected
Values:
0x00 (I2C_NO_STOP_DETECTED) - No stop condition has been detected on the I2C bus
0x01 (I2C_STOP_DETECTED) - A stop condition has been detected on the I2C bus
          </description>
        </field>
        <field name="DATA_EVENT" bitoffset="9" bitlength="1">
          <description>Indicate that the I2C interface either needs data to transmit or has received data
Values:
0x00 (I2C_NON_DATA_EVENT) - No I2C data is needed or available
0x01 (I2C_DATA_EVENT) - I2C data is needed or is available
          </description>
        </field>
        <field name="ERROR" bitoffset="8" bitlength="1">
          <description>Indicate if an error has occurred on the I2C interface since this bit was last cleared
Values:
0x00 (I2C_NO_ERROR) - An error has not been detected on the I2C bus
0x01 (I2C_ERROR) - An error has been detected on the I2C bus
          </description>
        </field>
        <field name="BUS_ERROR" bitoffset="7" bitlength="1">
          <description>Indicate if the I2C interface state machine indicates a bus error has occurred
Values:
0x00 (I2C_NO_BUS_ERROR) - A bus-error has not been detected in the I2C interface state machine
0x01 (I2C_BUS_ERROR) - A bus-error has been detected in the I2C interface state machine
          </description>
        </field>
        <field name="BUFFER_FULL" bitoffset="6" bitlength="1">
          <description>Indicate if the I2C data buffer is full
Values:
0x00 (I2C_BUFFER_EMPTY) - The I2C interface buffer is empty
0x01 (I2C_BUFFER_FULL) - The I2C interface buffer is full
          </description>
        </field>
        <field name="CLK_STRETCH" bitoffset="5" bitlength="1">
          <description>Indicate if the I2C interface is holding the clock signal
Values:
0x00 (I2C_CLK_NOT_STRETCHED) - The I2C clock line is not being stretched
0x01 (I2C_CLK_STRETCHED) - The I2C SCL line is being held low
          </description>
        </field>
        <field name="BUS_FREE" bitoffset="4" bitlength="1">
          <description>Indicate if the I2C interface bus is free
Values:
0x00 (I2C_BUS_BUSY) - One or both of the I2C bus lines is currently 0
0x01 (I2C_BUS_FREE) - Both I2C bus lines are currnently free
          </description>
        </field>
        <field name="ADDR_DATA" bitoffset="3" bitlength="1">
          <description>Indicate if the I2C data register holds an address or data byte
Values:
0x00 (I2C_DATA_IS_DATA) - The I2C data register holds data
0x01 (I2C_DATA_IS_ADDR) - The I2C data register holds an address
          </description>
        </field>
        <field name="READ_WRITE" bitoffset="2" bitlength="1">
          <description>Indicate whether the I2C bus transfer is a read or a write
Values:
0x00 (I2C_IS_WRITE) - The current I2C transfer is a write
0x01 (I2C_IS_READ) - The current I2C transfer is a read
          </description>
        </field>
        <field name="GEN_CALL" bitoffset="1" bitlength="1">
          <description>Indicate whether the I2C bus transfer is using the general call address or another address
Values:
0x00 (I2C_ADDR_OTHER) - The address used for the current I2C transfer is not the general call address
0x01 (I2C_ADDR_GEN_CALL) - The address used for the current I2C transfer is the general call address
          </description>
        </field>
        <field name="ACK_STATUS" bitoffset="0" bitlength="1">
          <description>Indicate whether an acknowledge or a not acknowledge has been received
Values:
0x00 (I2C_HAS_ACK) - Indicate that the last I2C byte was acknowledged
0x01 (I2C_HAS_NACK) - Indicate that the last I2C byte was not acknowledged
          </description>
        </field>
      </register>
    </registergroup>
    <registergroup name="CRC" description="CRC Generator Control">
      <register name="CRC_CTRL" address="0x40000A00" access="RW" resetvalue="0x00000000">
        <description>CRC Generator Control</description>
        <field name="BYTE_ORDER" bitoffset="0" bitlength="1">
          <description>Select the endianess for bytes added to the CRC
Values:
0x00 (CRC_BIG_ENDIAN) - Bytes are added to the CRC in big-endian order
0x01 (CRC_LITTLE_ENDIAN) - Bytes are added to the CRC in little-endian order
          </description>
        </field>
      </register>
      <register name="CRC_DATA" address="0x40000A04" access="RW" resetvalue="0x0000FFFF">
        <description>CRC Generator Data</description>
        <field name="CURRENT_CRC" bitoffset="0" bitlength="16">
          <description>Current value of the CRC generator calculation. Set to 0xFFFF to initialize the CRC calculation.
Values:
0xFFFF (CRC_INIT_VALUE) - Initial value for the CRC CCITT calculation
          </description>
        </field>
      </register>
      <register name="CRC_ADD_1" address="0x40000A08" access="WO" resetvalue="0x00000000">
        <description>CRC Generator - Add 1 Bit</description>
        <field name="CRC_ADD_1_BIT" bitoffset="0" bitlength="1">
          <description>Add one bit to the CRC calculation          </description>
        </field>
      </register>
      <register name="CRC_ADD_8" address="0x40000A0C" access="WO" resetvalue="0x00000000">
        <description>CRC Generator - Add 1 Byte</description>
        <field name="CRC_ADD_8" bitoffset="0" bitlength="8">
          <description>Add one byte (eight bits) to the CRC calculation          </description>
        </field>
      </register>
      <register name="CRC_ADD_16" address="0x40000A10" access="WO" resetvalue="0x00000000">
        <description>CRC Generator - Add 1 Half-word</description>
        <field name="CRC_ADD_16" bitoffset="0" bitlength="16">
          <description>Add one half-word (16 bits) to the CRC calculation          </description>
        </field>
      </register>
      <register name="CRC_ADD_24" address="0x40000A14" access="WO" resetvalue="0x00000000">
        <description>CRC Generator - Add 3 Bytes</description>
        <field name="CRC_ADD_24_BITS" bitoffset="0" bitlength="24">
          <description>Add three bytes (24 bits) to the CRC calculation          </description>
        </field>
      </register>
      <register name="CRC_ADD_32" address="0x40000A18" access="WO" resetvalue="0x00000000">
        <description>CRC Generator - Add 1 Word</description>
        <field name="CRC_ADD_32" bitoffset="0" bitlength="32">
          <description>Add one word (32 bits) to the CRC calculation          </description>
        </field>
      </register>
    </registergroup>
    <registergroup name="USB_CTRL" description="USB Interface">
      <register name="USB_CTRL" address="0x40000B00" access="RW" resetvalue="0x00000000">
        <description>USB Control</description>
        <field name="CONTROLLER" bitoffset="4" bitlength="1">
          <description>Select whether data transfer will be controlled by the ARM Cortex-M3 processor or the DMA
Values:
0x00 (USB_CONTROLLER_CM3) - The ARM Cortex-M3 controls data transfers using USB
0x01 (USB_CONTROLLER_DMA) - The DMA controls data transfers using USB
          </description>
        </field>
        <field name="PHY_STANDBY" bitoffset="3" bitlength="1">
          <description>Put the USB PHY into standby mode
Values:
0x00 (USB_PHY_ENABLED) - The USB PHY is enabled
0x01 (USB_PHY_STANDBY) - The USB PHY is in standby mode
          </description>
        </field>
        <field name="REMOTE_WAKEUP" bitoffset="2" bitlength="1">
          <description>Initiate a remote wakeup sequence
Values:
0x01 (USB_REMOTE_WAKEUP) - Trigger a USB remote wakeup sequence
          </description>
        </field>
        <field name="RESET" bitoffset="1" bitlength="1">
          <description>Reset the USB interface controller
Values:
0x01 (USB_RESET_ENABLE) - Trigger a USB controller reset (requires the controller to be enabled)
0x00 (USB_RESET_DISABLE) - Disables a USB controller reset
          </description>
        </field>
        <field name="ENABLE" bitoffset="0" bitlength="1">
          <description>Enable/disable the USB interface controller
Values:
0x00 (USB_DISABLE) - Disable the USB controller
0x01 (USB_ENABLE) - Enable the USB controller
          </description>
        </field>
      </register>
    </registergroup>
    <registergroup name="TIMER" description="Timer 0 to 3 Configuration and Control">
      <register name="TIMER0_CTRL" address="0x40000C00" access="RW" resetvalue="0x00000000">
        <description>Timer 0 Control and Configuration</description>
        <field name="MULTI_COUNT" bitoffset="16" bitlength="3">
          <description>Specify the number of timeouts for a terminating timer sequence on timer 0
Values:
0x00 (TIMER0_COUNT_1) - Stop timer 0 after 1 timeout
0x01 (TIMER0_COUNT_2) - Stop timer 0 after 2 timeouts
0x02 (TIMER0_COUNT_3) - Stop timer 0 after 3 timeouts
0x03 (TIMER0_COUNT_4) - Stop timer 0 after 4 timeouts
0x04 (TIMER0_COUNT_5) - Stop timer 0 after 5 timeouts
0x05 (TIMER0_COUNT_6) - Stop timer 0 after 6 timeouts
0x06 (TIMER0_COUNT_7) - Stop timer 0 after 7 timeouts
0x07 (TIMER0_COUNT_8) - Stop timer 0 after 8 timeouts
          </description>
        </field>
        <field name="MODE" bitoffset="15" bitlength="1">
          <description>Select timer operation mode
Values:
0x00 (TIMER0_FIXED_COUNT_RUN) - Run timer 0 until a fixed number of timeouts has occurred
0x01 (TIMER0_FREE_RUN) - Run timer 0 continuously
          </description>
        </field>
        <field name="PRESCALE" bitoffset="12" bitlength="3">
          <description>Prescaler for timer 0
Values:
0x00 (TIMER0_PRESCALE_1) - Prescale timer 0 by 1
0x01 (TIMER0_PRESCALE_2) - Prescale timer 0 by 2
0x02 (TIMER0_PRESCALE_4) - Prescale timer 0 by 4
0x03 (TIMER0_PRESCALE_8) - Prescale timer 0 by 8
0x04 (TIMER0_PRESCALE_16) - Prescale timer 0 by 16
0x05 (TIMER0_PRESCALE_32) - Prescale timer 0 by 32
0x06 (TIMER0_PRESCALE_64) - Prescale timer 0 by 64
0x07 (TIMER0_PRESCALE_128) - Prescale timer 0 by 128
          </description>
        </field>
        <field name="TIMEOUT_VALUE" bitoffset="0" bitlength="12">
          <description>Number of prescaled timer pulses before the timer 0 timeout occurs          </description>
        </field>
      </register>
      <register name="TIMER1_CTRL" address="0x40000C04" access="RW" resetvalue="0x00000000">
        <description>Timer 1 Control and Configuration</description>
        <field name="MULTI_COUNT" bitoffset="16" bitlength="3">
          <description>Specify the number of timeouts for a terminating timer sequence on timer 1
Values:
0x00 (TIMER1_COUNT_1) - Stop timer 1 after 1 timeout
0x01 (TIMER1_COUNT_2) - Stop timer 1 after 2 timeouts
0x02 (TIMER1_COUNT_3) - Stop timer 1 after 3 timeouts
0x03 (TIMER1_COUNT_4) - Stop timer 1 after 4 timeouts
0x04 (TIMER1_COUNT_5) - Stop timer 1 after 5 timeouts
0x05 (TIMER1_COUNT_6) - Stop timer 1 after 6 timeouts
0x06 (TIMER1_COUNT_7) - Stop timer 1 after 7 timeouts
0x07 (TIMER1_COUNT_8) - Stop timer 1 after 8 timeouts
          </description>
        </field>
        <field name="MODE" bitoffset="15" bitlength="1">
          <description>Select timer operation mode
Values:
0x00 (TIMER1_FIXED_COUNT_RUN) - Run timer 1 until a fixed number of timeouts has occurred
0x01 (TIMER1_FREE_RUN) - Run timer 1 continuously
          </description>
        </field>
        <field name="PRESCALE" bitoffset="12" bitlength="3">
          <description>Prescaler for timer 1
Values:
0x00 (TIMER1_PRESCALE_1) - Prescale timer 1 by 1
0x01 (TIMER1_PRESCALE_2) - Prescale timer 1 by 2
0x02 (TIMER1_PRESCALE_4) - Prescale timer 1 by 4
0x03 (TIMER1_PRESCALE_8) - Prescale timer 1 by 8
0x04 (TIMER1_PRESCALE_16) - Prescale timer 1 by 16
0x05 (TIMER1_PRESCALE_32) - Prescale timer 1 by 32
0x06 (TIMER1_PRESCALE_64) - Prescale timer 1 by 64
0x07 (TIMER1_PRESCALE_128) - Prescale timer 1 by 128
          </description>
        </field>
        <field name="TIMEOUT_VALUE" bitoffset="0" bitlength="12">
          <description>Number of prescaled timer pulses before the timer 1 timeout occurs          </description>
        </field>
      </register>
      <register name="TIMER2_CTRL" address="0x40000C08" access="RW" resetvalue="0x00000000">
        <description>Timer 2 Control and Configuration</description>
        <field name="MULTI_COUNT" bitoffset="16" bitlength="3">
          <description>Specify the number of timeouts for a terminating timer sequence on timer 2
Values:
0x00 (TIMER2_COUNT_1) - Stop timer 2 after 1 timeout
0x01 (TIMER2_COUNT_2) - Stop timer 2 after 2 timeouts
0x02 (TIMER2_COUNT_3) - Stop timer 2 after 3 timeouts
0x03 (TIMER2_COUNT_4) - Stop timer 2 after 4 timeouts
0x04 (TIMER2_COUNT_5) - Stop timer 2 after 5 timeouts
0x05 (TIMER2_COUNT_6) - Stop timer 2 after 6 timeouts
0x06 (TIMER2_COUNT_7) - Stop timer 2 after 7 timeouts
0x07 (TIMER2_COUNT_8) - Stop timer 2 after 8 timeouts
          </description>
        </field>
        <field name="MODE" bitoffset="15" bitlength="1">
          <description>Select timer operation mode
Values:
0x00 (TIMER2_FIXED_COUNT_RUN) - Run timer 2 until a fixed number of timeouts has occurred
0x01 (TIMER2_FREE_RUN) - Run timer 2 continuously
          </description>
        </field>
        <field name="PRESCALE" bitoffset="12" bitlength="3">
          <description>Prescaler for timer 2
Values:
0x00 (TIMER2_PRESCALE_1) - Prescale timer 2 by 1
0x01 (TIMER2_PRESCALE_2) - Prescale timer 2 by 2
0x02 (TIMER2_PRESCALE_4) - Prescale timer 2 by 4
0x03 (TIMER2_PRESCALE_8) - Prescale timer 2 by 8
0x04 (TIMER2_PRESCALE_16) - Prescale timer 2 by 16
0x05 (TIMER2_PRESCALE_32) - Prescale timer 2 by 32
0x06 (TIMER2_PRESCALE_64) - Prescale timer 2 by 64
0x07 (TIMER2_PRESCALE_128) - Prescale timer 2 by 128
          </description>
        </field>
        <field name="TIMEOUT_VALUE" bitoffset="0" bitlength="12">
          <description>Number of prescaled timer pulses before the timer 2 timeout occurs          </description>
        </field>
      </register>
      <register name="TIMER3_CTRL" address="0x40000C0C" access="RW" resetvalue="0x00000000">
        <description>Timer 3 Control and Configuration</description>
        <field name="MULTI_COUNT" bitoffset="16" bitlength="3">
          <description>Specify the number of timeouts for a terminating timer sequence on timer 3
Values:
0x00 (TIMER3_COUNT_1) - Stop timer 3 after 1 timeout
0x01 (TIMER3_COUNT_2) - Stop timer 3 after 2 timeouts
0x02 (TIMER3_COUNT_3) - Stop timer 3 after 3 timeouts
0x03 (TIMER3_COUNT_4) - Stop timer 3 after 4 timeouts
0x04 (TIMER3_COUNT_5) - Stop timer 3 after 5 timeouts
0x05 (TIMER3_COUNT_6) - Stop timer 3 after 6 timeouts
0x06 (TIMER3_COUNT_7) - Stop timer 3 after 7 timeouts
0x07 (TIMER3_COUNT_8) - Stop timer 3 after 8 timeouts
          </description>
        </field>
        <field name="MODE" bitoffset="15" bitlength="1">
          <description>Select timer operation mode
Values:
0x00 (TIMER3_FIXED_COUNT_RUN) - Run timer 3 until a fixed number of timeouts has occurred
0x01 (TIMER3_FREE_RUN) - Run timer 3 continuously
          </description>
        </field>
        <field name="PRESCALE" bitoffset="12" bitlength="3">
          <description>Prescaler for timer 3
Values:
0x00 (TIMER3_PRESCALE_1) - Prescale timer 3 by 1
0x01 (TIMER3_PRESCALE_2) - Prescale timer 3 by 2
0x02 (TIMER3_PRESCALE_4) - Prescale timer 3 by 4
0x03 (TIMER3_PRESCALE_8) - Prescale timer 3 by 8
0x04 (TIMER3_PRESCALE_16) - Prescale timer 3 by 16
0x05 (TIMER3_PRESCALE_32) - Prescale timer 3 by 32
0x06 (TIMER3_PRESCALE_64) - Prescale timer 3 by 64
0x07 (TIMER3_PRESCALE_128) - Prescale timer 3 by 128
          </description>
        </field>
        <field name="TIMEOUT_VALUE" bitoffset="0" bitlength="12">
          <description>Number of prescaled timer pulses before the timer 3 timeout occurs          </description>
        </field>
      </register>
      <register name="TIMER_CTRL_STATUS" address="0x40000C10" access="RW" resetvalue="0x00000000">
        <description>Timer Control Status for Timer 0 and Timer 1</description>
        <field name="TIMER3_STATUS" bitoffset="3" bitlength="1">
          <description>Used to start timer 3 and indicate the timer status
Values:
0x00 (TIMER3_STOP) - Stop timer 3 (also indicate that timer is not running)
0x01 (TIMER3_START) - Start timer 3 (also indicate that timer is running)
          </description>
        </field>
        <field name="TIMER2_STATUS" bitoffset="2" bitlength="1">
          <description>Used to start timer 2 and indicate the timer status
Values:
0x00 (TIMER2_STOP) - Stop timer 2 (also indicate that timer is not running)
0x01 (TIMER2_START) - Start timer 2 (also indicate that timer is running)
          </description>
        </field>
        <field name="TIMER1_STATUS" bitoffset="1" bitlength="1">
          <description>Used to start timer 1 and indicate the timer status
Values:
0x00 (TIMER1_STOP) - Stop timer 1 (also indicate that timer is not running)
0x01 (TIMER1_START) - Start timer 1 (also indicate that timer is running)
          </description>
        </field>
        <field name="TIMER0_STATUS" bitoffset="0" bitlength="1">
          <description>Used to start timer 0 and indicate the timer status
Values:
0x00 (TIMER0_STOP) - Stop timer 0 (also indicate that timer is not running)
0x01 (TIMER0_START) - Start timer 0 (also indicate that timer is running)
          </description>
        </field>
      </register>
    </registergroup>
    <registergroup name="WATCHDOG" description="Watchdog Timer Configuration and Control">
      <register name="WATCHDOG_REFRESH_CTRL" address="0x40000D00" access="WO" resetvalue="0x00000000">
        <description>Watchdog Refresh Control</description>
        <field name="REFRESH" bitoffset="0" bitlength="1">
          <description>Used to restart the Watchdog timer to prevent a watchdog reset. An application should periodically write to this bit.
Values:
0x01 (WATCHDOG_REFRESH) - Restart the watchdog timer.
          </description>
        </field>
      </register>
      <register name="WATCHDOG_CTRL" address="0x40000D04" access="RW" resetvalue="0x0000000F">
        <description>Watchdog Timer Control</description>
        <field name="TIMEOUT" bitoffset="0" bitlength="4">
          <description>Select a timeout frequency between 2048 and 4194304 cycles, which is 2.048 ms and 4.194 s (based on a 1 MHz system clock)
Values:
0x00 (WATCHDOG_TIMEOUT_2E11) - A watchdog timeout will occur after 2048 (2^11) cycles
0x01 (WATCHDOG_TIMEOUT_2E12) - A watchdog timeout will occur after 4096 (2^12) cycles
0x02 (WATCHDOG_TIMEOUT_2E13) - A watchdog timeout will occur after 8192 (2^13) cycles
0x03 (WATCHDOG_TIMEOUT_2E14) - A watchdog timeout will occur after 16384 (2^14) cycles
0x04 (WATCHDOG_TIMEOUT_2E15) - A watchdog timeout will occur after 32768 (2^15) cycles
0x05 (WATCHDOG_TIMEOUT_2E16) - A watchdog timeout will occur after 65536 (2^16) cycles
0x06 (WATCHDOG_TIMEOUT_2E17) - A watchdog timeout will occur after 131072 (2^17) cycles
0x07 (WATCHDOG_TIMEOUT_2E18) - A watchdog timeout will occur after 262144 (2^18) cycles
0x08 (WATCHDOG_TIMEOUT_2E19) - A watchdog timeout will occur after 524288 (2^19) cycles
0x09 (WATCHDOG_TIMEOUT_2E20) - A watchdog timeout will occur after 1048576 (2^20) cycles
0x0A (WATCHDOG_TIMEOUT_2E21) - A watchdog timeout will occur after 2097152 (2^21) cycles
0x0B (WATCHDOG_TIMEOUT_2E22) - A watchdog timeout will occur after 4194304 (2^22) cycles
          </description>
        </field>
      </register>
    </registergroup>
    <registergroup name="CLK" description="Clock Configuration">
      <register name="CLK_CTRL0" address="0x40000E00" access="RW" resetvalue="0x00000000">
        <description>Clock control register 0</description>
        <field name="RTC_CLK_DIV" bitoffset="2" bitlength="2">
          <description>Select the frequency for the real-time clock
Values:
0x00 (RTC_CLK_SELECT_2HZ) - The real-time clock operates at 2 Hz
0x01 (RTC_CLK_SELECT_4HZ) - The real-time clock operates at 4 Hz
0x02 (RTC_CLK_SELECT_8HZ) - The real-time clock operates at 8 Hz
0x03 (RTC_CLK_SELECT_16HZ) - The real-time clock operates at 16 Hz
          </description>
        </field>
        <field name="RCLK_SELECT" bitoffset="0" bitlength="2">
          <description>Select the source for the system root clock
Values:
0x00 (RCLK_SELECT_RC_OSC) - The internal RC oscillator is used as the source for root clock
0x02 (RCLK_SELECT_RTC_XTAL) - The RTC crystal is used as the source for root clock
0x03 (RCLK_SELECT_EXT) - An external clock source is used as the source for root clock
          </description>
        </field>
      </register>
      <register name="CLK_CTRL1" address="0x40000E04" access="RW" resetvalue="0xFF000000">
        <description>Clock control register 1</description>
        <field name="SYSTICK_DIV" bitoffset="24" bitlength="8">
          <description>Select a divisor between 1 and 255 for the SYSTICK timer. The timer is disabled if 0xFF is written to this field.
Values:
0xFF (SYSTICK_DISABLE) - Disable the SYSTICK timer
0x00 (SYSTICK_DIV_2) - Divide the root clock by 2
0x01 (SYSTICK_DIV_4) - Divide the root clock by 4
0x02 (SYSTICK_DIV_6) - Divide the root clock by 6
0x03 (SYSTICK_DIV_8) - Divide the root clock by 8
0x04 (SYSTICK_DIV_10) - Divide the root clock by 10
0x05 (SYSTICK_DIV_12) - Divide the root clock by 12
0x06 (SYSTICK_DIV_14) - Divide the root clock by 14
0x07 (SYSTICK_DIV_16) - Divide the root clock by 16
0x0F (SYSTICK_DIV_32) - Divide the root clock by 32
0x1F (SYSTICK_DIV_64) - Divide the root clock by 64
          </description>
        </field>
        <field name="TIMER13_DIV" bitoffset="16" bitlength="5">
          <description>Select a divisor between 1 and 32 for timers 1 and 3
Values:
0x00 (TIMER13_DIV_1) - Divide the root clock by 1
0x01 (TIMER13_DIV_2) - Divide the root clock by 2
0x02 (TIMER13_DIV_3) - Divide the root clock by 3
0x03 (TIMER13_DIV_4) - Divide the root clock by 4
0x04 (TIMER13_DIV_5) - Divide the root clock by 5
0x05 (TIMER13_DIV_6) - Divide the root clock by 6
0x06 (TIMER13_DIV_7) - Divide the root clock by 7
0x07 (TIMER13_DIV_8) - Divide the root clock by 8
0x0F (TIMER13_DIV_16) - Divide the root clock by 16
0x1F (TIMER13_DIV_32) - Divide the root clock by 32
          </description>
        </field>
        <field name="TIMER02_DIV" bitoffset="8" bitlength="5">
          <description>Select a divisor between 1 and 32 for timers 0 and 2
Values:
0x00 (TIMER02_DIV_1) - Divide the root clock by 1
0x01 (TIMER02_DIV_2) - Divide the root clock by 2
0x02 (TIMER02_DIV_3) - Divide the root clock by 3
0x03 (TIMER02_DIV_4) - Divide the root clock by 4
0x04 (TIMER02_DIV_5) - Divide the root clock by 5
0x05 (TIMER02_DIV_6) - Divide the root clock by 6
0x06 (TIMER02_DIV_7) - Divide the root clock by 7
0x07 (TIMER02_DIV_8) - Divide the root clock by 8
0x0F (TIMER02_DIV_16) - Divide the root clock by 16
0x1F (TIMER02_DIV_32) - Divide the root clock by 32
          </description>
        </field>
        <field name="WATCHDOG_CLK_DIV" bitoffset="0" bitlength="5">
          <description>Select a divisor between 1 and 32 for the watchdog clock
Values:
0x00 (WATCHDOG_CLK_DIV_1) - Divide the root clock by 1
0x01 (WATCHDOG_CLK_DIV_2) - Divide the root clock by 2
0x02 (WATCHDOG_CLK_DIV_3) - Divide the root clock by 3
0x03 (WATCHDOG_CLK_DIV_4) - Divide the root clock by 4
0x04 (WATCHDOG_CLK_DIV_5) - Divide the root clock by 5
0x05 (WATCHDOG_CLK_DIV_6) - Divide the root clock by 6
0x06 (WATCHDOG_CLK_DIV_7) - Divide the root clock by 7
0x07 (WATCHDOG_CLK_DIV_8) - Divide the root clock by 8
0x0F (WATCHDOG_CLK_DIV_16) - Divide the root clock by 16
0x1F (WATCHDOG_CLK_DIV_32) - Divide the root clock by 32
          </description>
        </field>
      </register>
      <register name="CLK_CTRL2" address="0x40000E08" access="RW" resetvalue="0x00000000">
        <description>Clock control register 2</description>
        <field name="UART1_CLK_DIV" bitoffset="8" bitlength="5">
          <description>Select a divisor between 1 and 32 for the clock for UART1
Values:
0x00 (UART1_CLK_DIV_1) - Divide the root clock by 1
0x01 (UART1_CLK_DIV_2) - Divide the root clock by 2
0x02 (UART1_CLK_DIV_3) - Divide the root clock by 3
0x03 (UART1_CLK_DIV_4) - Divide the root clock by 4
0x04 (UART1_CLK_DIV_5) - Divide the root clock by 5
0x05 (UART1_CLK_DIV_6) - Divide the root clock by 6
0x06 (UART1_CLK_DIV_7) - Divide the root clock by 7
0x07 (UART1_CLK_DIV_8) - Divide the root clock by 8
0x0F (UART1_CLK_DIV_16) - Divide the root clock by 16
0x1F (UART1_CLK_DIV_32) - Divide the root clock by 32
          </description>
        </field>
        <field name="UART0_CLK_DIV" bitoffset="0" bitlength="5">
          <description>Select a divisor between 1 and 32 for the clock for UART0
Values:
0x00 (UART0_CLK_DIV_1) - Divide the root clock by 1
0x01 (UART0_CLK_DIV_2) - Divide the root clock by 2
0x02 (UART0_CLK_DIV_3) - Divide the root clock by 3
0x03 (UART0_CLK_DIV_4) - Divide the root clock by 4
0x04 (UART0_CLK_DIV_5) - Divide the root clock by 5
0x05 (UART0_CLK_DIV_6) - Divide the root clock by 6
0x06 (UART0_CLK_DIV_7) - Divide the root clock by 7
0x07 (UART0_CLK_DIV_8) - Divide the root clock by 8
0x0F (UART0_CLK_DIV_16) - Divide the root clock by 16
0x1F (UART0_CLK_DIV_32) - Divide the root clock by 32
          </description>
        </field>
      </register>
      <register name="CLK_CTRL3" address="0x40000E0C" access="RW" resetvalue="0x00000000">
        <description>Clock control register 3</description>
        <field name="MCLK_CLK_ENABLE" bitoffset="29" bitlength="1">
          <description>Enable the MCLK clock to the analog components
Values:
0x00 (MCLK_CLK_DISABLE) - Disable MCLK clock output
0x01 (MCLK_CLK_ENABLE) - Enable MCLK clock output
          </description>
        </field>
        <field name="MCLK_CLK_DIV" bitoffset="24" bitlength="5">
          <description>Select a divisor between 1 and 32 for MCLK
Values:
0x00 (MCLK_CLK_DIV_2) - Divide the root clock by 2
0x01 (MCLK_CLK_DIV_4) - Divide the root clock by 4
0x02 (MCLK_CLK_DIV_6) - Divide the root clock by 6
0x03 (MCLK_CLK_DIV_8) - Divide the root clock by 8
0x04 (MCLK_CLK_DIV_10) - Divide the root clock by 10
0x05 (MCLK_CLK_DIV_12) - Divide the root clock by 12
0x06 (MCLK_CLK_DIV_14) - Divide the root clock by 14
0x07 (MCLK_CLK_DIV_16) - Divide the root clock by 16
0x0F (MCLK_CLK_DIV_32) - Divide the root clock by 32
0x1F (MCLK_CLK_DIV_64) - Divide the root clock by 64
          </description>
        </field>
        <field name="I2C_CLK_ENABLE" bitoffset="21" bitlength="1">
          <description>Enable the I2C clock input to the I2C interface
Values:
0x00 (I2C_CLK_DISABLE) - Disable I2C clock output
0x01 (I2C_CLK_ENABLE) - Enable I2C clock output
          </description>
        </field>
        <field name="PCM_CLK_DIV" bitoffset="8" bitlength="5">
          <description>Select a divisor between 1 and 32 for the clock for PCM
Values:
0x00 (PCM_CLK_DIV_1) - Divide the root clock by 1
0x01 (PCM_CLK_DIV_2) - Divide the root clock by 2
0x02 (PCM_CLK_DIV_3) - Divide the root clock by 3
0x03 (PCM_CLK_DIV_4) - Divide the root clock by 4
0x04 (PCM_CLK_DIV_5) - Divide the root clock by 5
0x05 (PCM_CLK_DIV_6) - Divide the root clock by 6
0x06 (PCM_CLK_DIV_7) - Divide the root clock by 7
0x07 (PCM_CLK_DIV_8) - Divide the root clock by 8
0x0F (PCM_CLK_DIV_16) - Divide the root clock by 16
0x1F (PCM_CLK_DIV_32) - Divide the root clock by 32
          </description>
        </field>
        <field name="GPIO_CLK_DIV" bitoffset="0" bitlength="5">
          <description>Select a divisor between 1 and 32 for the clock for GPIO input sampling
Values:
0x00 (GPIO_CLK_DIV_1) - Divide the root clock by 1
0x01 (GPIO_CLK_DIV_2) - Divide the root clock by 2
0x02 (GPIO_CLK_DIV_3) - Divide the root clock by 3
0x03 (GPIO_CLK_DIV_4) - Divide the root clock by 4
0x04 (GPIO_CLK_DIV_5) - Divide the root clock by 5
0x05 (GPIO_CLK_DIV_6) - Divide the root clock by 6
0x06 (GPIO_CLK_DIV_7) - Divide the root clock by 7
0x07 (GPIO_CLK_DIV_8) - Divide the root clock by 8
0x0F (GPIO_CLK_DIV_16) - Divide the root clock by 16
0x1F (GPIO_CLK_DIV_32) - Divide the root clock by 32
          </description>
        </field>
      </register>
      <register name="CLK_CTRL4" address="0x40000E10" access="RW" resetvalue="0x00000000">
        <description>Clock control register 4</description>
        <field name="CM3_CLK_DIV" bitoffset="24" bitlength="5">
          <description>Select a divisor between 1 and 32 for the clock for the ARM Cortex-M3 core
Values:
0x00 (CM3_CLK_DIV_1) - Divide the root clock by 1
0x01 (CM3_CLK_DIV_2) - Divide the root clock by 2
0x02 (CM3_CLK_DIV_3) - Divide the root clock by 3
0x03 (CM3_CLK_DIV_4) - Divide the root clock by 4
0x04 (CM3_CLK_DIV_5) - Divide the root clock by 5
0x05 (CM3_CLK_DIV_6) - Divide the root clock by 6
0x06 (CM3_CLK_DIV_7) - Divide the root clock by 7
0x07 (CM3_CLK_DIV_8) - Divide the root clock by 8
0x0F (CM3_CLK_DIV_16) - Divide the root clock by 16
0x1F (CM3_CLK_DIV_32) - Divide the root clock by 32
          </description>
        </field>
        <field name="EXT_CLK_DIV2" bitoffset="6" bitlength="1">
          <description>Divide EXT_CLK by 2 (ensures 50% duty cycle)
Values:
0x00 (EXT_CLK_DIV2_DISABLE) - Do not further divide the EXT_CLK output by 2
0x01 (EXT_CLK_DIV2_ENABLE) - Divide the EXT_CLK output by 2
          </description>
        </field>
        <field name="EXT_CLK_ENABLE" bitoffset="5" bitlength="1">
          <description>Enable the external clock for output
Values:
0x00 (EXT_CLK_DISABLE) - Disable external clock output
0x01 (EXT_CLK_ENABLE) - Enable external clock output
          </description>
        </field>
        <field name="EXT_CLK_DIV" bitoffset="0" bitlength="5">
          <description>Select a divisor between 1 and 32 for the external clock output
Values:
0x00 (EXT_CLK_DIV_1) - Divide the root clock by 1
0x01 (EXT_CLK_DIV_2) - Divide the root clock by 2
0x02 (EXT_CLK_DIV_3) - Divide the root clock by 3
0x03 (EXT_CLK_DIV_4) - Divide the root clock by 4
0x04 (EXT_CLK_DIV_5) - Divide the root clock by 5
0x05 (EXT_CLK_DIV_6) - Divide the root clock by 6
0x06 (EXT_CLK_DIV_7) - Divide the root clock by 7
0x07 (EXT_CLK_DIV_8) - Divide the root clock by 8
0x0F (EXT_CLK_DIV_16) - Divide the root clock by 16
0x1F (EXT_CLK_DIV_32) - Divide the root clock by 32
          </description>
        </field>
      </register>
      <register name="CLK_CTRL5" address="0x40000E14" access="RW" resetvalue="0x00000000">
        <description>Clock control register 5</description>
        <field name="LCD_CLK_ENABLE" bitoffset="31" bitlength="1">
          <description>Enable LCD_CLK
Values:
0x00 (LCD_CLK_DISABLE) - Disable LCD clock output
0x01 (LCD_CLK_ENABLE) - Enable LCD clock output
          </description>
        </field>
        <field name="LCD_CLK_DIV" bitoffset="24" bitlength="7">
          <description>Select a divisor between 1 and 128 for LCD_CLK. LCD_CLK = MCLK / (1024 * (LCD_CLK_DIV + 1))
Values:
0x00 (LCD_CLK_DIV_1) - Divide MCLK by 1024 + 1
0x01 (LCD_CLK_DIV_2) - Divide MCLK by 1024 + 2
0x02 (LCD_CLK_DIV_3) - Divide MCLK by 1024 + 3
0x03 (LCD_CLK_DIV_4) - Divide MCLK by 1024 + 4
0x04 (LCD_CLK_DIV_5) - Divide MCLK by 1024 + 5
0x05 (LCD_CLK_DIV_6) - Divide MCLK by 1024 + 6
0x06 (LCD_CLK_DIV_7) - Divide MCLK by 1024 + 7
0x07 (LCD_CLK_DIV_8) - Divide MCLK by 1024 + 8
0x0F (LCD_CLK_DIV_16) - Divide MCLK by 1024 + 16
0x1F (LCD_CLK_DIV_32) - Divide MCLK by 1024 + 32
0x3F (LCD_CLK_DIV_64) - Divide MCLK by 1024 + 64
0x7F (LCD_CLK_DIV_128) - Divide MCLK by 1024 + 128
          </description>
        </field>
        <field name="USR_CLK2_DIV2" bitoffset="22" bitlength="1">
          <description>Divide user clock 2 by 2 (ensures 50% duty cycle)
Values:
0x00 (USR_CLK2_DIV2_DISABLE) - Do not further divide user clock 2 output by 2
0x01 (USR_CLK2_DIV2_ENABLE) - Divide user clock 2 output by 2
          </description>
        </field>
        <field name="USR_CLK2_ENABLE" bitoffset="21" bitlength="1">
          <description>Enable user clock 2 for output
Values:
0x00 (USR_CLK2_DISABLE) - Disable user clock 2 output
0x01 (USR_CLK2_ENABLE) - Enable user clock 2 output
          </description>
        </field>
        <field name="USR_CLK2_DIV" bitoffset="16" bitlength="5">
          <description>Select a divisor between 1 and 32 for user clock 2
Values:
0x00 (USR_CLK2_DIV_1) - Divide the root clock by 1
0x01 (USR_CLK2_DIV_2) - Divide the root clock by 2
0x02 (USR_CLK2_DIV_3) - Divide the root clock by 3
0x03 (USR_CLK2_DIV_4) - Divide the root clock by 4
0x04 (USR_CLK2_DIV_5) - Divide the root clock by 5
0x05 (USR_CLK2_DIV_6) - Divide the root clock by 6
0x06 (USR_CLK2_DIV_7) - Divide the root clock by 7
0x07 (USR_CLK2_DIV_8) - Divide the root clock by 8
0x0F (USR_CLK2_DIV_16) - Divide the root clock by 16
0x1F (USR_CLK2_DIV_32) - Divide the root clock by 32
          </description>
        </field>
        <field name="USR_CLK1_DIV2" bitoffset="14" bitlength="1">
          <description>Divide user clock 1 by 2 (ensures 50% duty cycle)
Values:
0x00 (USR_CLK1_DIV2_DISABLE) - Do not further divide user clock 1 output by 2
0x01 (USR_CLK1_DIV2_ENABLE) - Divide user clock 1 output by 2
          </description>
        </field>
        <field name="USR_CLK1_ENABLE" bitoffset="13" bitlength="1">
          <description>Enable user clock 1 output
Values:
0x00 (USR_CLK1_DISABLE) - Disable user clock 1 output
0x01 (USR_CLK1_ENABLE) - Enable user clock 1 output
          </description>
        </field>
        <field name="USR_CLK1_DIV" bitoffset="8" bitlength="5">
          <description>Select a divisor between 1 and 32 for user clock 1
Values:
0x00 (USR_CLK1_DIV_1) - Divide the root clock by 1
0x01 (USR_CLK1_DIV_2) - Divide the root clock by 2
0x02 (USR_CLK1_DIV_3) - Divide the root clock by 3
0x03 (USR_CLK1_DIV_4) - Divide the root clock by 4
0x04 (USR_CLK1_DIV_5) - Divide the root clock by 5
0x05 (USR_CLK1_DIV_6) - Divide the root clock by 6
0x06 (USR_CLK1_DIV_7) - Divide the root clock by 7
0x07 (USR_CLK1_DIV_8) - Divide the root clock by 8
0x0F (USR_CLK1_DIV_16) - Divide the root clock by 16
0x1F (USR_CLK1_DIV_32) - Divide the root clock by 32
          </description>
        </field>
        <field name="USR_CLK0_DIV2" bitoffset="6" bitlength="1">
          <description>Divide user clock 0 by 2 (ensures 50% duty cycle)
Values:
0x00 (USR_CLK0_DIV2_DISABLE) - Do not further divide user clock 0 output by 2
0x01 (USR_CLK0_DIV2_ENABLE) - Divide user clock 0 output by 2
          </description>
        </field>
        <field name="USR_CLK0_ENABLE" bitoffset="5" bitlength="1">
          <description>Enable user clock 0 output
Values:
0x00 (USR_CLK0_DISABLE) - Disable user clock 0 output
0x01 (USR_CLK0_ENABLE) - Enable user clock 0 output
          </description>
        </field>
        <field name="USR_CLK0_DIV" bitoffset="0" bitlength="5">
          <description>Select a divisor between 1 and 32 for user clock 0
Values:
0x00 (USR_CLK0_DIV_1) - Divide the root clock by 1
0x01 (USR_CLK0_DIV_2) - Divide the root clock by 2
0x02 (USR_CLK0_DIV_3) - Divide the root clock by 3
0x03 (USR_CLK0_DIV_4) - Divide the root clock by 4
0x04 (USR_CLK0_DIV_5) - Divide the root clock by 5
0x05 (USR_CLK0_DIV_6) - Divide the root clock by 6
0x06 (USR_CLK0_DIV_7) - Divide the root clock by 7
0x07 (USR_CLK0_DIV_8) - Divide the root clock by 8
0x0F (USR_CLK0_DIV_16) - Divide the root clock by 16
0x1F (USR_CLK0_DIV_32) - Divide the root clock by 32
          </description>
        </field>
      </register>
      <register name="CLK_CTRL6" address="0x40000E18" access="RW" resetvalue="0x00000000">
        <description>Clock control register 6</description>
        <field name="PWM3_CLK_ENABLE" bitoffset="29" bitlength="1">
          <description>Enable the PWM3 clock
Values:
0x00 (PWM3_CLK_DISABLE) - Disable PWM3 clock output
0x01 (PWM3_CLK_ENABLE) - Enable PWM3 clock output
          </description>
        </field>
        <field name="PWM3_CLK_DIV" bitoffset="24" bitlength="5">
          <description>Select a divisor between 1 and 32 for PWM3_CLK. PWM3_CLK = MCLK / (PWM3_CLK_DIV + 1)
Values:
0x00 (PWM3_CLK_DIV_1) - Divide MCLK by 1024 + 1
0x01 (PWM3_CLK_DIV_2) - Divide MCLK by 1024 + 2
0x02 (PWM3_CLK_DIV_3) - Divide MCLK by 1024 + 3
0x03 (PWM3_CLK_DIV_4) - Divide MCLK by 1024 + 4
0x04 (PWM3_CLK_DIV_5) - Divide MCLK by 1024 + 5
0x05 (PWM3_CLK_DIV_6) - Divide MCLK by 1024 + 6
0x06 (PWM3_CLK_DIV_7) - Divide MCLK by 1024 + 7
0x07 (PWM3_CLK_DIV_8) - Divide MCLK by 1024 + 8
0x0F (PWM3_CLK_DIV_16) - Divide MCLK by 1024 + 16
0x1F (PWM3_CLK_DIV_32) - Divide MCLK by 1024 + 32
          </description>
        </field>
        <field name="PWM2_CLK_ENABLE" bitoffset="21" bitlength="1">
          <description>Enable the PWM2 clock
Values:
0x00 (PWM2_CLK_DISABLE) - Disable PWM2 clock output
0x01 (PWM2_CLK_ENABLE) - Enable PWM2 clock output
          </description>
        </field>
        <field name="PWM2_CLK_DIV" bitoffset="16" bitlength="5">
          <description>Select a divisor between 1 and 32 for PWM2_CLK. PWM2_CLK = MCLK / (PWM2_CLK_DIV + 1)
Values:
0x00 (PWM2_CLK_DIV_1) - Divide MCLK by 1024 + 1
0x01 (PWM2_CLK_DIV_2) - Divide MCLK by 1024 + 2
0x02 (PWM2_CLK_DIV_3) - Divide MCLK by 1024 + 3
0x03 (PWM2_CLK_DIV_4) - Divide MCLK by 1024 + 4
0x04 (PWM2_CLK_DIV_5) - Divide MCLK by 1024 + 5
0x05 (PWM2_CLK_DIV_6) - Divide MCLK by 1024 + 6
0x06 (PWM2_CLK_DIV_7) - Divide MCLK by 1024 + 7
0x07 (PWM2_CLK_DIV_8) - Divide MCLK by 1024 + 8
0x0F (PWM2_CLK_DIV_16) - Divide MCLK by 1024 + 16
0x1F (PWM2_CLK_DIV_32) - Divide MCLK by 1024 + 32
          </description>
        </field>
        <field name="PWM1_CLK_ENABLE" bitoffset="13" bitlength="1">
          <description>Enable the PWM1 clock
Values:
0x00 (PWM1_CLK_DISABLE) - Disable PWM1 clock output
0x01 (PWM1_CLK_ENABLE) - Enable PWM1 clock output
          </description>
        </field>
        <field name="PWM1_CLK_DIV" bitoffset="8" bitlength="5">
          <description>Select a divisor between 1 and 32 for PWM1_CLK. PWM1_CLK = MCLK / (PWM1_CLK_DIV + 1)
Values:
0x00 (PWM1_CLK_DIV_1) - Divide MCLK by 1024 + 1
0x01 (PWM1_CLK_DIV_2) - Divide MCLK by 1024 + 2
0x02 (PWM1_CLK_DIV_3) - Divide MCLK by 1024 + 3
0x03 (PWM1_CLK_DIV_4) - Divide MCLK by 1024 + 4
0x04 (PWM1_CLK_DIV_5) - Divide MCLK by 1024 + 5
0x05 (PWM1_CLK_DIV_6) - Divide MCLK by 1024 + 6
0x06 (PWM1_CLK_DIV_7) - Divide MCLK by 1024 + 7
0x07 (PWM1_CLK_DIV_8) - Divide MCLK by 1024 + 8
0x0F (PWM1_CLK_DIV_16) - Divide MCLK by 1024 + 16
0x1F (PWM1_CLK_DIV_32) - Divide MCLK by 1024 + 32
          </description>
        </field>
        <field name="PWM0_CLK_ENABLE" bitoffset="5" bitlength="1">
          <description>Enable the PWM0 clock
Values:
0x00 (PWM0_CLK_DISABLE) - Disable PWM0 clock output
0x01 (PWM0_CLK_ENABLE) - Enable PWM0 clock output
          </description>
        </field>
        <field name="PWM0_CLK_DIV" bitoffset="0" bitlength="5">
          <description>Select a divisor between 1 and 32 for PWM0_CLK. PWM0_CLK = MCLK / (PWM0_CLK_DIV + 1)
Values:
0x00 (PWM0_CLK_DIV_1) - Divide MCLK by 1024 + 1
0x01 (PWM0_CLK_DIV_2) - Divide MCLK by 1024 + 2
0x02 (PWM0_CLK_DIV_3) - Divide MCLK by 1024 + 3
0x03 (PWM0_CLK_DIV_4) - Divide MCLK by 1024 + 4
0x04 (PWM0_CLK_DIV_5) - Divide MCLK by 1024 + 5
0x05 (PWM0_CLK_DIV_6) - Divide MCLK by 1024 + 6
0x06 (PWM0_CLK_DIV_7) - Divide MCLK by 1024 + 7
0x07 (PWM0_CLK_DIV_8) - Divide MCLK by 1024 + 8
0x0F (PWM0_CLK_DIV_16) - Divide MCLK by 1024 + 16
0x1F (PWM0_CLK_DIV_32) - Divide MCLK by 1024 + 32
          </description>
        </field>
      </register>
      <register name="CLK_CTRL7" address="0x40000E1C" access="RW" resetvalue="0x00000000">
        <description>Clock control register 7</description>
        <field name="CP_CLK_DIV" bitoffset="0" bitlength="5">
          <description>Select a divisor between 1 and 32 for the charge pump clock. CP_CLK = MCLK / (2 * CP_CLK_DIV)
Values:
0x00 (CP_CLK_DIV_2) - Divide MCLK by 2
0x01 (CP_CLK_DIV_4) - Divide MCLK by 4
0x02 (CP_CLK_DIV_6) - Divide MCLK by 6
0x03 (CP_CLK_DIV_8) - Divide MCLK by 8
0x04 (CP_CLK_DIV_10) - Divide MCLK by 10
0x05 (CP_CLK_DIV_12) - Divide MCLK by 12
0x06 (CP_CLK_DIV_14) - Divide MCLK by 14
0x07 (CP_CLK_DIV_16) - Divide MCLK by 16
0x09 (CP_CLK_DIV_20) - Divide MCLK by 20
0x0B (CP_CLK_DIV_24) - Divide MCLK by 24
0x0D (CP_CLK_DIV_28) - Divide MCLK by 28
0x0F (CP_CLK_DIV_32) - Divide MCLK by 32
0x1F (CP_CLK_DIV_64) - Divide MCLK by 64
          </description>
        </field>
      </register>
      <register name="CLK_DETECT_CTRL" address="0x40000E20" access="RW" resetvalue="0x00000000">
        <description>External Clock Detection Control and Configuration</description>
        <field name="CLK_FORCE_ENABLE" bitoffset="1" bitlength="1">
          <description>Select whether the external clock is forced to RC_CLK when no clock is detected
Values:
0x00 (CLK_DETECT_FORCE_DISABLE) - The root clock is not forced to RC clock if no external clock is detected
0x01 (CLK_DETECT_FORCE_ENABLE) - The root clock is forced to RC clock if no external clock is detected
          </description>
        </field>
        <field name="CLK_DETECT_ENABLE" bitoffset="0" bitlength="1">
          <description>Select whether the system attempts to detect an external clock
Values:
0x00 (CLK_DETECT_DISABLE) - Do not attempt to detect an external clock input
0x01 (CLK_DETECT_ENABLE) - Attempt to detect an external clock input
          </description>
        </field>
      </register>
      <register name="CLK_DETECT_STATUS" address="0x40000E24" access="RW" resetvalue="0x00000000">
        <description>External Clock Detection Status</description>
        <field name="EXT_CLK_STATUS" bitoffset="0" bitlength="1">
          <description>Indicates whether an external clock has been present since this bit was last cleared
Values:
0x00 (EXT_CLK_DETECTED) - An external clock input has been detected as present
0x01 (EXT_CLK_NOT_DETECTED) - No external clock input has been detected
0x01 (EXT_CLK_DETECT_CLEAR) - Clear the external clock detection status
          </description>
        </field>
      </register>
    </registergroup>
    <registergroup name="FLASH" description="Flash Update Control">
      <register name="FLASH_ECC_STATUS" address="0x40000F04" access="RW" resetvalue="0x00000000">
        <description>Flash Error-Correction Coding Status</description>
        <field name="ERROR_DETECT" bitoffset="1" bitlength="1">
          <description>An ECC error was detected, but not corrected
Values:
0x00 (ECC_ERROR_NOT_DETECTED) - No ECC errors have been detected
0x01 (ECC_ERROR_DETECT_CLEAR) - Clear the ECC error detect status bit
0x01 (ECC_ERROR_DETECTED) - One or more ECC errors have been detected
          </description>
        </field>
        <field name="ERROR_CORRECT" bitoffset="0" bitlength="1">
          <description>An ECC error was detected and corrected
Values:
0x00 (ECC_ERROR_NOT_CORRECTED) - No ECC errors have been corrected
0x01 (ECC_ERROR_CORRECT_CLEAR) - Clear the ECC error correct status bit
0x01 (ECC_ERROR_CORRECTED) - One or more ECC errors have been corrected
          </description>
        </field>
      </register>
      <register name="FLASH_WRITE_LOCK" address="0x40000F14" access="RW" resetvalue="0x00000000">
        <description>Flash Write Lock</description>
        <field name="FLASH_WRITE_KEY" bitoffset="0" bitlength="32">
          <description>Write key to protect accidental flash writing to the main flash memory
Values:
0xABCD4321 (FLASH_WRITE_KEY) - Key used to unlock writes to the flash
          </description>
        </field>
      </register>
    </registergroup>
    <registergroup name="USB" description="USB Interface Configuration and Control">
      <register name="USB_BULK_OUT45_ADDR" address="0x40001784" access="WO" resetvalue="0x00000000">
        <description>USB Bulk 4 and 5 OUT start address register</description>
        <field name="OUT5_ADDR" bitoffset="8" bitlength="8">
          <description>Start address bits for EP5 OUT endpoint buffer. Must be initialized to 0x30. This field is write-only; all reads return 0.
Values:
0x30 (USB_BULK_OUT5_ADDR_VALUE) - Start address for the bulk output buffer of endpoint 5
          </description>
        </field>
        <field name="OUT4_ADDR" bitoffset="0" bitlength="8">
          <description>Start address bits for EP4 OUT endpoint buffer. Must be initialized to 0x10. This field is write-only; all reads return 0.
Values:
0x10 (USB_BULK_OUT4_ADDR_VALUE) - Start address for the bulk output buffer of endpoint 4
          </description>
        </field>
      </register>
      <register name="USB_BULK_IN23_ADDR" address="0x40001788" access="WO" resetvalue="0x00000000">
        <description>USB Bulk 2 and 3 IN start address register</description>
        <field name="IN3_ADDR" bitoffset="24" bitlength="8">
          <description>Start address bits for EP3 IN endpoint buffer. Must be initialized to 0x30. This field is write-only; all reads return 0.
Values:
0x30 (USB_BULK_IN3_ADDR_VALUE) - Start address for the bulk input buffer of endpoint 3
          </description>
        </field>
        <field name="IN2_ADDR" bitoffset="16" bitlength="8">
          <description>Start address bits for EP2 IN endpoint buffer. Must be initialized to 0x10. This field is write-only; all reads return 0.
Values:
0x10 (USB_BULK_IN2_ADDR_VALUE) - Start address for the bulk input buffer of endpoint 2
          </description>
        </field>
        <field name="IN_OFFSET_ADDR" bitoffset="0" bitlength="8">
          <description>Start address offset for EP0 IN endpoint buffer. Must be initialized to 0x28. This field is write-only; all reads return 0.
Values:
0x28 (USB_BULK_OFFSET_ADDR_VALUE) - Start address offset for bulk input endpoints
          </description>
        </field>
      </register>
      <register name="USB_CLOCK_GATE" address="0x40001790" access="WO" resetvalue="0x00000000">
        <description>USB clock gate register</description>
        <field name="CLOCK_GATE" bitoffset="0" bitlength="8">
          <description>Write any value to this register to enable USB clock gating          </description>
        </field>
      </register>
      <register name="USB_INT_STATUS" address="0x400017A8" access="RW" resetvalue="0x00000000">
        <description>USB Interrupt Status register</description>
        <field name="RST_IRQ" bitoffset="28" bitlength="1">
          <description>USB reset interrupt request. The USB controller sets this bit to 1 when it detects a USB bus reset.
Values:
0x01 (USB_RST_IRQ_CLEAR) - Clears the USB reset interrupt request
          </description>
        </field>
        <field name="SUS_IRQ" bitoffset="27" bitlength="1">
          <description>USB suspend interrupt request. The USB controller sets this bit to 1 when it detects USB suspend signalling.
Values:
0x01 (USB_SUS_IRQ_CLEAR) - Clears the USB suspend interrupt request
          </description>
        </field>
        <field name="SETUPTKN_IRQ" bitoffset="26" bitlength="1">
          <description>SETUP token interrupt request. The USB controller sets this bit to 1 when it receives a SETUP token.
Values:
0x01 (USB_SETUPTKN_IRQ_CLEAR) - Clears the SETUP token interrupt request
          </description>
        </field>
        <field name="SOF_IRQ" bitoffset="25" bitlength="1">
          <description>Start-of-Frame interrupt request. The USB controller sets this bit to 1 when it receives a SOF packet.
Values:
0x01 (USB_SOF_IRQ_CLEAR) - Clears the Start-Of-Frame interrupt request
          </description>
        </field>
        <field name="DAT_VALID_IRQ" bitoffset="24" bitlength="1">
          <description>SETUP data valid interrupt request. The USB controller sets this bit to 1 when it receives an error-free SETUP data packet.
Values:
0x01 (USB_DAT_VALID_IRQ_CLEAR) - Clears SETUP data valid interrupt request
          </description>
        </field>
        <field name="BULK_OUT_5_IRQ" bitoffset="21" bitlength="1">
          <description>Indicate that an EP5 OUT interrupt request occurred
Values:
0x01 (USB_BULK_OUT_5_IRQ_CLEAR) - Clears the Bulk 5 OUT IRQ
          </description>
        </field>
        <field name="BULK_OUT_4_IRQ" bitoffset="20" bitlength="1">
          <description>Indicate that an EP4 OUT interrupt request occurred
Values:
0x01 (USB_BULK_OUT_4_IRQ_CLEAR) - Clears the Bulk 4 OUT IRQ
          </description>
        </field>
        <field name="BULK_OUT_0_IRQ" bitoffset="16" bitlength="1">
          <description>Indicate that an EP0 OUT interrupt request occurred
Values:
0x01 (USB_BULK_OUT_0_IRQ_CLEAR) - Clears the Bulk 0 OUT IRQ
          </description>
        </field>
        <field name="BULK_IN_3_IRQ" bitoffset="11" bitlength="1">
          <description>Indicate that an EP3 IN interrupt request occurred
Values:
0x01 (USB_BULK_IN_3_IRQ_CLEAR) - Clears the Bulk 3 IN IRQ
          </description>
        </field>
        <field name="BULK_IN_2_IRQ" bitoffset="10" bitlength="1">
          <description>Indicate that an EP2 IN interrupt request occurred
Values:
0x01 (USB_BULK_IN_2_IRQ_CLEAR) - Clears the Bulk 2 IN IRQ
          </description>
        </field>
        <field name="BULK_IN_0_IRQ" bitoffset="8" bitlength="1">
          <description>Indicate that an EP0 IN interrupt request occurred
Values:
0x01 (USB_BULK_IN_0_IRQ_CLEAR) - Clears the Bulk 0 IN IRQ
          </description>
        </field>
      </register>
      <register name="USB_INT_CTRL" address="0x400017AC" access="RW" resetvalue="0x01000000">
        <description>USB Interrupt Control register</description>
        <field name="BAV" bitoffset="24" bitlength="1">
          <description>Breakpoint and autovector register. This field must be set to 1.
Values:
0x01 (USB_BAV_ENABLE) - Enable autovector feature for USB interrupts (MCU must support autovectoring)
0x00 (USB_BAV_DISABLE) - Disable autovector features for USB interrupts
          </description>
        </field>
        <field name="RST_IEN" bitoffset="20" bitlength="1">
          <description>USB reset interrupt enable
Values:
0x01 (USB_RST_IEN_ENABLE) - Enables the USB reset interrupt
0x00 (USB_RST_IEN_DISABLE) - Disables the USB reset interrupt
          </description>
        </field>
        <field name="SUS_IEN" bitoffset="19" bitlength="1">
          <description>USB suspend interrupt enable
Values:
0x01 (USB_SUS_IEN_ENABLE) - Enables the USB suspend interrupt
0x00 (USB_SUS_IEN_DISABLE) - Disables the USB suspend interrupt
          </description>
        </field>
        <field name="SETUPTKN_IEN" bitoffset="18" bitlength="1">
          <description>SETUP token interrupt enable
Values:
0x01 (USB_SETUPTKN_IEN_ENABLE) - Enables the SETUP token interrupt
0x00 (USB_SETUPTKN_IEN_DISABLE) - Disables the SETUP token interrupt
          </description>
        </field>
        <field name="SOF_IEN" bitoffset="17" bitlength="1">
          <description>Start-Of-Frame interrupt enable
Values:
0x01 (USB_SOF_IEN_ENABLE) - Enables the Start-Of-Frame interrupt
0x00 (USB_SOF_IEN_DISABLE) - Disables the Start-Of-Frame interrupt
          </description>
        </field>
        <field name="DAT_VALID_IEN" bitoffset="16" bitlength="1">
          <description>SETUP data valid interrupt enable
Values:
0x01 (USB_DAT_VALID_IEN_ENABLE) - Enables the SETUP data valid interrupt
0x00 (USB_DAT_VALID_IEN_DISABLE) - Disables the SETUP data valid interrupt
          </description>
        </field>
        <field name="BULK_OUT_5_IEN" bitoffset="13" bitlength="1">
          <description>EP5 OUT interrupt enable
Values:
0x01 (USB_BULK_OUT_5_IEN_ENABLE) - Enables the Bulk 5 OUT interrupt
0x00 (USB_BULK_OUT_5_IEN_DISABLE) - Disables the Bulk 5 OUT interrupt
          </description>
        </field>
        <field name="BULK_OUT_4_IEN" bitoffset="12" bitlength="1">
          <description>EP4 OUT interrupt enable
Values:
0x01 (USB_BULK_OUT_4_IEN_ENABLE) - Enables the Bulk 4 OUT interrupt
0x00 (USB_BULK_OUT_4_IEN_DISABLE) - Disables the Bulk 4 OUT interrupt
          </description>
        </field>
        <field name="BULK_OUT_0_IEN" bitoffset="8" bitlength="1">
          <description>EP0 OUT interrupt enable
Values:
0x01 (USB_BULK_OUT_0_IEN_ENABLE) - Enables the Bulk 0 OUT interrupt
0x00 (USB_BULK_OUT_0_IEN_DISABLE) - Disables the Bulk 0 OUT interrupt
          </description>
        </field>
        <field name="BULK_IN_3_IEN" bitoffset="3" bitlength="1">
          <description>EP3 IN interrupt enable
Values:
0x01 (USB_BULK_IN_3_IEN_ENABLE) - Enables the Bulk 3 IN interrupt
0x00 (USB_BULK_IN_3_IEN_DISABLE) - Disables the Bulk 3 IN interrupt
          </description>
        </field>
        <field name="BULK_IN_2_IEN" bitoffset="2" bitlength="1">
          <description>EP2 IN interrupt enable
Values:
0x01 (USB_BULK_IN_2_IEN_ENABLE) - Enables the Bulk 2 IN interrupt
0x00 (USB_BULK_IN_2_IEN_DISABLE) - Disables the Bulk 2 IN interrupt
          </description>
        </field>
        <field name="BULK_IN_0_IEN" bitoffset="0" bitlength="1">
          <description>EP0 IN interrupt enable
Values:
0x01 (USB_BULK_IN_0_IEN_ENABLE) - Enables the Bulk 0 IN interrupt
0x00 (USB_BULK_IN_0_IEN_DISABLE) - Disables the Bulk 0 IN interrupt
          </description>
        </field>
      </register>
      <register name="USB_EP0_IN_CTRL" address="0x400017B4" access="RW" resetvalue="0x00000000">
        <description>USB IN Endpoint 0 Control and Status register</description>
        <field name="EP0_IN_BYTE_COUNT" bitoffset="8" bitlength="7">
          <description>Indicates how many bytes will be transmitted from the EP0 IN endpoint. Writing any value (including 0) to this field clears the EP0_IN_BUSY bit and sends the data on the endpoint.          </description>
        </field>
        <field name="EP0_SETUP_BUF_STATUS" bitoffset="5" bitlength="1">
          <description>Indicates that the SETUP buffer contents were changed. If this bit is 1, the SETUP buffer was changed. This bit is automatically cleared when USB controller receives a SETUP data packet.          </description>
        </field>
        <field name="EP0_DATA_STALL" bitoffset="4" bitlength="1">
          <description>EP0 stall during the data stage. If this bit is 1, the USB controller sends a STALL handshake for any IN or OUT token. Automatically cleared when a SETUP token arrives. The ARM Cortex-M3 processor should set this bit after the last successful transaction in the data stage.          </description>
        </field>
        <field name="EP0_OUT_BUSY" bitoffset="3" bitlength="1">
          <description>EP0 OUT endpoint busy bit. If this bit is 1, the USB controller takes control of the EP0 OUT endpoint buffer. If this bit is 0, the ARM Cortex-M3 processor takes control of the EP0 OUT endpoint buffer. Automatically cleared when a SETUP token arrives. The ARM Cortex-M3 processor sets this bit by writing a dummy value to USB_EP0_OUT_BYTE_COUNT.          </description>
        </field>
        <field name="EP0_IN_BUSY" bitoffset="2" bitlength="1">
          <description>EP0 IN endpoint busy bit. If this bit is 1, the USB controller takes control of the EP0 IN endpoint buffer. If this bit is 0, the ARM Cortex-M3 processor takes control of the EP0 IN endpoint buffer. Automatically cleared when a SETUP token arrives. The ARM Cortex-M3 processor sets this bit by reloading USB_EP0_IN_BYTE_COUNT.          </description>
        </field>
        <field name="EP0_HSNAK" bitoffset="1" bitlength="1">
          <description>EP0 handshake NAK. If this bit is set to 1, the USB controller responds with a NAK handshake for every packet in the status stage. Automatically set when a SETUP token arrives.          </description>
        </field>
        <field name="EP0_CTRL_STALL" bitoffset="0" bitlength="1">
          <description>EP0 stall during the data or handshake phases of the CONTROL transfer. If this bit is set to 1, the USB controller sends a STALL handshake for any IN or OUT token. Automatically cleared when a SETUP token arrives.          </description>
        </field>
      </register>
      <register name="USB_EP23_IN_CTRL" address="0x400017B8" access="RW" resetvalue="0x00000000">
        <description>USB IN Endpoint 2 and 3 Control and Status register</description>
        <field name="EP3_IN_BYTE_COUNT" bitoffset="24" bitlength="7">
          <description>Indicates how many bytes will be transmitted from the EP3 IN endpoint. Writing any value (including 0) to this field clears the EP3_IN_BUSY bit and sends the data on the endpoint.          </description>
        </field>
        <field name="EP3_IN_BUSY" bitoffset="17" bitlength="1">
          <description>EP3 IN endpoint busy bit. If this bit is 1, the USB controller takes control of the EP3 IN endpoint buffer. If this bit is 0, the ARM Cortex-M3 processor takes control of the EP3 IN endpoint buffer. Automatically cleared when a SETUP token arrives.          </description>
        </field>
        <field name="EP3_IN_STALL" bitoffset="16" bitlength="1">
          <description>EP3 IN endpoint stall bit. If this bit is 1, the USB controller returns a STALL handshake for all requests to EP3.          </description>
        </field>
        <field name="EP2_IN_BYTE_COUNT" bitoffset="8" bitlength="7">
          <description>Indicates how many bytes will be transmitted from the EP2 IN endpoint. Writing any value (including 0) to this field clears the EP2_IN_BUSY bit and sends the data on the endpoint.          </description>
        </field>
        <field name="EP2_IN_BUSY" bitoffset="1" bitlength="1">
          <description>EP2 IN endpoint busy bit. If this bit is 1, the USB controller takes control of the EP2 IN endpoint buffer. If this bit is 0, the ARM Cortex-M3 processor takes control of the EP2 IN endpoint buffer. Automatically cleared when a SETUP token arrives.          </description>
        </field>
        <field name="EP2_IN_STALL" bitoffset="0" bitlength="1">
          <description>EP2 IN endpoint stall bit. If this bit is 1, the USB controller returns a STALL handshake for all requests to EP2.          </description>
        </field>
      </register>
      <register name="USB_EP0_OUT_CTRL" address="0x400017C4" access="RW" resetvalue="0x00000000">
        <description>USB OUT Endpoint 0 Control and Status register</description>
        <field name="EP0_OUT_BYTE_COUNT" bitoffset="8" bitlength="7">
          <description>Indicates how many bytes were received by the EP0 OUT endpoint. Write a new value to this field to clear the EP0_OUT_BUSY bit and make the endpoint ready to receive more data.          </description>
        </field>
      </register>
      <register name="USB_EP45_OUT_CTRL" address="0x400017CC" access="RW" resetvalue="0x00000000">
        <description>USB OUT Endpoint 4 and 5 Control and Status register</description>
        <field name="EP5_OUT_BYTE_COUNT" bitoffset="24" bitlength="7">
          <description>Indicates how many bytes were received by the EP5 OUT endpoint. Write a new value to this field to set the EP5_OUT_BUSY bit and make the endpoint ready to receive more data.          </description>
        </field>
        <field name="EP5_OUT_BUSY" bitoffset="17" bitlength="1">
          <description>EP5 OUT endpoint busy bit. If this bit is 1, the USB controller takes control of the EP5 OUT endpoint buffer. If this bit is 0, the ARM Cortex-M3 processor takes control of the EP5 OUT endpoint buffer. Automatically cleared when a SETUP token arrives.          </description>
        </field>
        <field name="EP5_OUT_STALL" bitoffset="16" bitlength="1">
          <description>EP5 OUT endpoint stall bit. If this bit is 1, the USB controller returns a STALL handshake for all requests to EP5.          </description>
        </field>
        <field name="EP4_OUT_BYTE_COUNT" bitoffset="8" bitlength="7">
          <description>Indicates how many bytes were received by the EP4 OUT endpoint. Write a new value to this field to set the EP4_OUT_BUSY bit and make the endpoint ready to receive more data.          </description>
        </field>
        <field name="EP4_OUT_BUSY" bitoffset="1" bitlength="1">
          <description>EP4 OUT endpoint busy bit. If this bit is 1, the USB controller takes control of the EP4 OUT endpoint buffer. If this bit is 0, the ARM Cortex-M3 processor takes control of the EP4 OUT endpoint buffer. Automatically cleared when a SETUP token arrives.          </description>
        </field>
        <field name="EP4_OUT_STALL" bitoffset="0" bitlength="1">
          <description>EP4 OUT endpoint stall bit. If this bit is 1, the USB controller returns a STALL handshake for all requests to EP4.          </description>
        </field>
      </register>
      <register name="USB_SYS_CTRL1" address="0x400017D4" access="RW" resetvalue="0x00000000">
        <description>USB Control and Status register 1</description>
        <field name="DATA_TOGGLE_STATUS" bitoffset="31" bitlength="1">
          <description>If this bit is 1, it means that the data toggle for selected endpoints is set to DATA1. Otherwise, it means that the data toggle is set to DATA0.          </description>
        </field>
        <field name="DATA_TOGGLE_DATA1_SET" bitoffset="30" bitlength="1">
          <description>Sets the data toggle to DATA1.          </description>
        </field>
        <field name="DATA_TOGGLE_RESET" bitoffset="29" bitlength="1">
          <description>Resets the data toggle to DATA0.          </description>
        </field>
        <field name="DATA_TOGGLE_INOUT_SELECT" bitoffset="28" bitlength="1">
          <description>Selects IN or OUT endpoint          </description>
        </field>
        <field name="DATA_TOGGLE_EP_SELECT" bitoffset="24" bitlength="3">
          <description>Select the number of endpoints to support data toggle          </description>
        </field>
        <field name="WAKEUP_SOURCE" bitoffset="23" bitlength="1">
          <description>Wakeup source. If this bit is 1, the wakeup was initiated by the microcontroller by setting the REMOTE_WAKEUP bit in the USB_CTRL register. If this bit is 0, the wakeup was initiated by the USB host.          </description>
        </field>
        <field name="SOF_GEN" bitoffset="21" bitlength="1">
          <description>If this bit is 1, an internal Start-of-Frame timer is used to generate the Start-of-Frame interrupt.          </description>
        </field>
        <field name="DISCONNECT" bitoffset="19" bitlength="1">
          <description>Signals a disconnect. If this bit is 1, the external USB transceiver disconnects a microcontroller by disconnecting the D+ or D- pull-up resistor.
Values:
0x01 (USB_DISCONNECT_ENABLE) - Signals a disconnect
0x00 (USB_DISCONNECT_DISABLE) - Removes disconnect signal
          </description>
        </field>
        <field name="FORCE_J" bitoffset="17" bitlength="1">
          <description>Only use this in the suspend state. The ARM Cortex-M3 processor uses it to drive the J state on the USB lines.
Values:
0x01 (USB_FORCE_J_ENABLE) - Causes the CUSB to set the J state on the USB
0x00 (USB_FORCE_J_DISABLE) - Removes J state setting
          </description>
        </field>
        <field name="SIGNAL_REMOTE_RESUME" bitoffset="16" bitlength="1">
          <description>Signal remote device resume. If the ARM Cortex-M3 processor sets this bit to 1, the USB controller sets the K state on the USB lines.
Values:
0x01 (USB_SIGNAL_REMOTE_RESUME_ENABLE) - Causes the CUSB to set K state on the USB
0x00 (USB_SIGNAL_REMOTE_RESUME_DISABLE) - Removes K state setting
          </description>
        </field>
      </register>
      <register name="USB_SYS_CTRL2" address="0x400017D8" access="RO" resetvalue="0x00000000">
        <description>USB Control and Status register 2</description>
        <field name="FUNCTION_ADDR" bitoffset="24" bitlength="7">
          <description>The register contains the function address that was sent by the host during USB enumeration          </description>
        </field>
        <field name="FRAME_COUNT" bitoffset="0" bitlength="11">
          <description>The register contains the frame count from the most recent Start-of-Frame token          </description>
        </field>
      </register>
      <register name="USB_SYS_CTRL3" address="0x400017DC" access="RW" resetvalue="0x00000000">
        <description>USB Control and Status register 3</description>
        <field name="OUT5_VALID" bitoffset="29" bitlength="1">
          <description>Indicate if EP5 OUT endpoint is valid for USB transfers
Values:
0x01 (USB_OUT5_VALID_ENABLE) - Activates the Bulk 5 OUT endpoint
0x00 (USB_OUT5_VALID_DISABLE) - De-activates the Bulk 5 OUT endpoint
          </description>
        </field>
        <field name="OUT4_VALID" bitoffset="28" bitlength="1">
          <description>Indicate if EP4 OUT endpoint is valid for USB transfers
Values:
0x01 (USB_OUT4_VALID_ENABLE) - Activates the Bulk 4 OUT endpoint
0x00 (USB_OUT4_VALID_DISABLE) - De-activates the Bulk 4 OUT endpoint
          </description>
        </field>
        <field name="OUT0_VALID" bitoffset="24" bitlength="1">
          <description>Indicate if EP0 OUT endpoint is valid for USB transfers
Values:
0x01 (USB_OUT0_VALID_ENABLE) - Activates the 0 OUT endpoint
0x00 (USB_OUT0_VALID_DISABLE) - De-activates the 0 OUT endpoint
          </description>
        </field>
        <field name="IN3_VALID" bitoffset="19" bitlength="1">
          <description>Indicate if EP3 IN endpoint is valid for USB transfers
Values:
0x01 (USB_IN3_VALID_ENABLE) - Activates the Bulk 3 IN endpoint
0x00 (USB_IN3_VALID_DISABLE) - De-activates the Bulk 3 IN endpoint
          </description>
        </field>
        <field name="IN2_VALID" bitoffset="18" bitlength="1">
          <description>Indicate if EP2 IN endpoint is valid for USB transfers
Values:
0x01 (USB_IN2_VALID_ENABLE) - Activates the Bulk 2 IN endpoint
0x00 (USB_IN2_VALID_DISABLE) - De-activates the Bulk 2 IN endpoint
          </description>
        </field>
        <field name="IN0_VALID" bitoffset="16" bitlength="1">
          <description>Indicate if EP0 IN endpoint is valid for USB transfers
Values:
0x01 (USB_IN0_VALID_ENABLE) - Activates the 0 IN endpoint
0x00 (USB_IN0_VALID_DISABLE) - De-activates the 0 IN endpoint
          </description>
        </field>
        <field name="USB_PAIR_OUT_EP45" bitoffset="12" bitlength="1">
          <description>Enable and disable the pairing of EP4 and EP5 OUT endpoints
Values:
0x01 (USB_PAIR_OUT_EP45_ENABLE) - Enables OUT endpoint 4 and 5 pairing
0x00 (USB_PAIR_OUT_EP45_DISABLE) - Disables OUT endpoint 4 and 5 pairing
          </description>
        </field>
        <field name="USB_PAIR_IN_EP23" bitoffset="8" bitlength="1">
          <description>Enable and disable the pairing of EP2 and EP3 IN endpoints
Values:
0x01 (USB_PAIR_IN_EP23_ENABLE) - Enables IN endpoint 2 and 3 pairing
0x00 (USB_PAIR_IN_EP23_DISABLE) - Disables IN endpoint 2 and 3 pairing
          </description>
        </field>
      </register>
      <register name="USB_SETUP_DATA_BUF_BASE_0" address="0x400017E8" access="RO" resetvalue="0x00000000">
        <description>USB Setup Data Buffer base Lower</description>
        <field name="SETUP_DATA_BUF_BYTE3" bitoffset="24" bitlength="8">
          <description>Byte 3 of the SETUP data packet          </description>
        </field>
        <field name="SETUP_DATA_BUF_BYTE2" bitoffset="16" bitlength="8">
          <description>Byte 2 of the SETUP data packet          </description>
        </field>
        <field name="SETUP_DATA_BUF_BYTE1" bitoffset="8" bitlength="8">
          <description>Byte 1 of the SETUP data packet          </description>
        </field>
        <field name="SETUP_DATA_BUF_BYTE0" bitoffset="0" bitlength="8">
          <description>Byte 0 of the SETUP data packet          </description>
        </field>
      </register>
      <register name="USB_SETUP_DATA_BUF_BASE_1" address="0x400017EC" access="RO" resetvalue="0x00000000">
        <description>USB Setup Data Buffer base Higher</description>
        <field name="SETUP_DATA_BUF_BYTE7" bitoffset="24" bitlength="8">
          <description>Byte 7 of the SETUP data packet          </description>
        </field>
        <field name="SETUP_DATA_BUF_BYTE6" bitoffset="16" bitlength="8">
          <description>Byte 6 of the SETUP data packet          </description>
        </field>
        <field name="SETUP_DATA_BUF_BYTE5" bitoffset="8" bitlength="8">
          <description>Byte 5 of the SETUP data packet          </description>
        </field>
        <field name="SETUP_DATA_BUF_BYTE4" bitoffset="0" bitlength="8">
          <description>Byte 4 of the SETUP data packet          </description>
        </field>
      </register>
    </registergroup>
    <registergroup name="SYSTICK" description="SYSTICK Timer">
      <register name="NVIC_SYSTICK_CTRL" address="0xE000E010" access="RW" resetvalue="0x00000000">
        <description>NVIC SYSTICK Control and Status Register</description>
        <field name="COUNTFLAG" bitoffset="16" bitlength="1">
          <description>Reads as 1 if SYSTICK counter has reached 0 since the last time the timer has reached 0. Clears to 0 on read.
Values:
0x00 (NVIC_COUNTFLAG_NOT_ZERO) - SYSTICK counter has not reached zero since last read
0x01 (NVIC_COUNTFLAG_ZERO) - SYSTICK counter has reached zero since last read
          </description>
        </field>
        <field name="CLKSOURCE" bitoffset="2" bitlength="1">
          <description>SYSTICK timer clock source
Values:
0x00 (NVIC_CLKSOURCE_EXTREF_CLK) - Use external reference clock (STCLK)
0x01 (NVIC_CLKSOURCE_CORE_CLK) - Use the core clock
          </description>
        </field>
        <field name="TICKINT" bitoffset="1" bitlength="1">
          <description>SYSTICK timer interrupt enable
Values:
0x00 (NVIC_TICKINT_DISABLE) - Disable interrupt generation when SYSTICK timer reaches 0
0x01 (NVIC_TICKINT_ENABLE) - Enable interrupt generation when SYSTICK timer reaches 0
          </description>
        </field>
        <field name="ENABLE" bitoffset="0" bitlength="1">
          <description>SYSTICK timer enable
Values:
0x00 (NVIC_SYSTICK_DISABLE) - Disable SYSTICK timer
0x01 (NVIC_SYSTICK_ENABLE) - Enable SYSTICK Timer
          </description>
        </field>
      </register>
      <register name="NVIC_SYSTICK_RELOAD" address="0xE000E014" access="RW" resetvalue="0x00000000">
        <description>NVIC SYSTICK Reload Value Register</description>
        <field name="COUNT" bitoffset="0" bitlength="24">
          <description>Counter reload value for the SYSTICK timer when it reaches 0          </description>
        </field>
      </register>
      <register name="NVIC_SYSTICK_CURRENT" address="0xE000E018" access="RW" resetvalue="0x00000000">
        <description>NVIC SYSTICK Current Value Register</description>
        <field name="COUNT" bitoffset="0" bitlength="24">
          <description>Current value of the SYSTICK counter value. Write to clear counter.          </description>
        </field>
      </register>
      <register name="NVIC_SYSTICK_CAL" address="0xE000E01C" access="RO" resetvalue="0x00002710">
        <description>NVIC SYSTICK Calibration Register</description>
        <field name="NOREF" bitoffset="31" bitlength="1">
          <description>Indicates if a reference clock is available
Values:
0x01 (NVIC_SYSTICK_NOREF) - No external reference clock available
0x00 (NVIC_SYSTICK_REF) - External reference clock available
          </description>
        </field>
        <field name="SKEW" bitoffset="30" bitlength="1">
          <description>Indicates if calibration value is exactly 10 ms or not
Values:
0x01 (NVIC_SYSTICK_SKEW) - Calibration value is not exactly 10 ms
0x00 (NVIC_SYSTICK_NOSKEW) - Calibration value is exactly 10 ms
          </description>
        </field>
        <field name="TENMS" bitoffset="0" bitlength="24">
          <description>SYSTICK counter calibration value for 10 ms. A value of 0 means the calibration value is not available          </description>
        </field>
      </register>
    </registergroup>
    <registergroup name="NVIC" description="Nested Vector Interrupt Controller">
      <register name="NVIC_INT_TYPE" address="0xE000E004" access="RO" resetvalue="0x00000001">
        <description>NVIC Interrupt Controller Type Register</description>
        <field name="INTLINESNUM" bitoffset="0" bitlength="5">
          <description>Number of interrupt inputs in steps of 32
Values:
0x01 (NVIC_INTLINESNUM_33_64) - 33 to 64 interrupt inputs
          </description>
        </field>
      </register>
      <register name="NVIC_SETEN0" address="0xE000E100" access="RW" resetvalue="0x00000000">
        <description>NVIC External Interrupt Set Enable Register 0</description>
        <field name="DMA3" bitoffset="31" bitlength="1">
          <description>DMA channel 3 interrupt set enable
Values:
0x01 (NVIC_DMA3_INT_ENABLE) - Enable DMA channel 3 interrupt
          </description>
        </field>
        <field name="DMA2" bitoffset="30" bitlength="1">
          <description>DMA channel 2 interrupt set enable
Values:
0x01 (NVIC_DMA2_INT_ENABLE) - Enable DMA channel 2 interrupt
          </description>
        </field>
        <field name="DMA1" bitoffset="29" bitlength="1">
          <description>DMA channel 1 interrupt set enable
Values:
0x01 (NVIC_DMA1_INT_ENABLE) - Enable DMA channel 1 interrupt
          </description>
        </field>
        <field name="DMA0" bitoffset="28" bitlength="1">
          <description>DMA channel 0 interrupt set enable
Values:
0x01 (NVIC_DMA0_INT_ENABLE) - Enable DMA channel 0 interrupt
          </description>
        </field>
        <field name="ADC" bitoffset="27" bitlength="1">
          <description>ADC interrupt set enable
Values:
0x01 (NVIC_ADC_INT_ENABLE) - Enable ADC0interrupt
          </description>
        </field>
        <field name="PCM_ERROR" bitoffset="26" bitlength="1">
          <description>PCM buffer overflow/underrun interrupt set enable
Values:
0x01 (NVIC_PCM_ERROR_INT_ENABLE) - Enable PCM error interrupt
          </description>
        </field>
        <field name="PCM_TX" bitoffset="25" bitlength="1">
          <description>PCM transmit interrupt set enable
Values:
0x01 (NVIC_PCM_TX_INT_ENABLE) - Enable PCM TX interrupt
          </description>
        </field>
        <field name="PCM_RX" bitoffset="24" bitlength="1">
          <description>PCM receive interrupt set enable
Values:
0x01 (NVIC_PCM_RX_INT_ENABLE) - Enable PCM RX interrupt
          </description>
        </field>
        <field name="SPI1_ERROR" bitoffset="23" bitlength="1">
          <description>SPI1 buffer overflow/underrun error interrupt set enable
Values:
0x01 (NVIC_SPI1_ERROR_INT_ENABLE) - Enable SPI1 error interrupt
          </description>
        </field>
        <field name="SPI1" bitoffset="22" bitlength="1">
          <description>SPI1 interrupt set enable
Values:
0x01 (NVIC_SPI1_INT_ENABLE) - Enable SPI1 interrupt
          </description>
        </field>
        <field name="SPI0_ERROR" bitoffset="21" bitlength="1">
          <description>SPI0 buffer overflow/underrun error interrupt set enable
Values:
0x01 (NVIC_SPI0_ERROR_INT_ENABLE) - Enable SPI0 error interrupt
          </description>
        </field>
        <field name="SPI0" bitoffset="20" bitlength="1">
          <description>SPI0 interrupt set enable
Values:
0x01 (NVIC_SPI0_INT_ENABLE) - Enable SPI0 interrupt
          </description>
        </field>
        <field name="I2C" bitoffset="19" bitlength="1">
          <description>I2C interrupt set enable
Values:
0x01 (NVIC_I2C_INT_ENABLE) - Enable I2C interrupt
          </description>
        </field>
        <field name="UART1_ERROR" bitoffset="18" bitlength="1">
          <description>UART1 buffer overflow/underrun error interrupt set enable
Values:
0x01 (NVIC_UART1_ERROR_INT_ENABLE) - Enable UART1 error interrupt
          </description>
        </field>
        <field name="UART1_TX" bitoffset="17" bitlength="1">
          <description>UART1 transmit interrupt set enable
Values:
0x01 (NVIC_UART1_TX_INT_ENABLE) - Enable UART1 transmit interrupt
          </description>
        </field>
        <field name="UART1_RX" bitoffset="16" bitlength="1">
          <description>UART1 receive interrupt set enable
Values:
0x01 (NVIC_UART1_RX_INT_ENABLE) - Enable UART1 receive interrupt
          </description>
        </field>
        <field name="UART0_ERROR" bitoffset="15" bitlength="1">
          <description>UART0 buffer overflow/underrun error interrupt set enable
Values:
0x01 (NVIC_UART0_ERROR_INT_ENABLE) - Enable UART0 error interrupt
          </description>
        </field>
        <field name="UART0_TX" bitoffset="14" bitlength="1">
          <description>UART0 transmit interrupt set enable
Values:
0x01 (NVIC_UART0_TX_INT_ENABLE) - Enable UART0 transmit interrupt
          </description>
        </field>
        <field name="UART0_RX" bitoffset="13" bitlength="1">
          <description>UART0 receive interrupt set enable
Values:
0x01 (NVIC_UART0_RX_INT_ENABLE) - Enable UART0 receive interrupt
          </description>
        </field>
        <field name="TIMER3" bitoffset="12" bitlength="1">
          <description>TIMER1 interrupt set enable
Values:
0x01 (NVIC_TIMER3_INT_ENABLE) - Enable TIMER1 interrupt
          </description>
        </field>
        <field name="TIMER2" bitoffset="11" bitlength="1">
          <description>TIMER0 interrupt set enable
Values:
0x01 (NVIC_TIMER2_INT_ENABLE) - Enable TIMER0 interrupt
          </description>
        </field>
        <field name="TIMER1" bitoffset="10" bitlength="1">
          <description>TIMER1 interrupt set enable
Values:
0x01 (NVIC_TIMER1_INT_ENABLE) - Enable TIMER1 interrupt
          </description>
        </field>
        <field name="TIMER0" bitoffset="9" bitlength="1">
          <description>TIMER0 interrupt set enable
Values:
0x01 (NVIC_TIMER0_INT_ENABLE) - Enable TIMER0 interrupt
          </description>
        </field>
        <field name="WATCHDOG" bitoffset="8" bitlength="1">
          <description>Watchdog interrupt set enable
Values:
0x01 (NVIC_WATCHDOG_INT_ENABLE) - Enable watchdog interrupt
          </description>
        </field>
        <field name="GPIO_GP1" bitoffset="7" bitlength="1">
          <description>GPIO_GP1 interrupt set enable
Values:
0x01 (NVIC_GPIO_GP1_INT_ENABLE) - Enable GPIO_GP1 interrupt
          </description>
        </field>
        <field name="GPIO_GP0" bitoffset="6" bitlength="1">
          <description>GPIO_GP0 interrupt set enable
Values:
0x01 (NVIC_GPIO_GP0_INT_ENABLE) - Enable GPIO_GP0 interrupt
          </description>
        </field>
        <field name="NO_EXT_CLK_DETECT" bitoffset="5" bitlength="1">
          <description>No external clock interrupt set enable
Values:
0x01 (NVIC_NO_EXT_CLK_DETECT_INT_ENABLE) - Enable no external clock interrupt
          </description>
        </field>
        <field name="THRESHOLD_COMPARE" bitoffset="4" bitlength="1">
          <description>Threshold compare interrupt set enable
Values:
0x01 (NVIC_THRESHOLD_COMPARE_INT_ENABLE) - Enable threshold compare interrupt
          </description>
        </field>
        <field name="RTC_CLOCK" bitoffset="3" bitlength="1">
          <description>RTC clock interrupt set enable
Values:
0x01 (NVIC_RTC_CLOCK_INT_ENABLE) - Enable RTC clock interrupt
          </description>
        </field>
        <field name="RTC_ALARM" bitoffset="2" bitlength="1">
          <description>RTC alarm interrupt set enable
Values:
0x01 (NVIC_RTC_ALARM_INT_ENABLE) - Enable RTC alarm interrupt
          </description>
        </field>
        <field name="WAKEUP_IF5_PIN0" bitoffset="1" bitlength="1">
          <description>Analog wakeup interrupt set enable
Values:
0x01 (NVIC_WAKEUP_IF5_PIN0_INT_ENABLE) - Enable analog wakeup interrupt
          </description>
        </field>
        <field name="WAKEUP" bitoffset="0" bitlength="1">
          <description>Wakeup interrupt set enable
Values:
0x01 (NVIC_WAKEUP_INT_ENABLE) - Enable wakeup interrupt
          </description>
        </field>
      </register>
      <register name="NVIC_SETEN1" address="0xE000E104" access="RW" resetvalue="0x00000000">
        <description>NVIC External Interrupt Set Enable Register 1</description>
        <field name="GPIO_GP7" bitoffset="22" bitlength="1">
          <description>GPIO_GP7 interrupt set enable
Values:
0x01 (NVIC_GPIO_GP7_INT_ENABLE) - Enable GPIO_GP7 interrupt
          </description>
        </field>
        <field name="GPIO_GP6" bitoffset="21" bitlength="1">
          <description>GPIO_GP6 interrupt set enable
Values:
0x01 (NVIC_GPIO_GP6_INT_ENABLE) - Enable GPIO_GP6 interrupt
          </description>
        </field>
        <field name="GPIO_GP5" bitoffset="20" bitlength="1">
          <description>GPIO_GP5 interrupt set enable
Values:
0x01 (NVIC_GPIO_GP5_INT_ENABLE) - Enable GPIO_GP5 interrupt
          </description>
        </field>
        <field name="GPIO_GP4" bitoffset="19" bitlength="1">
          <description>GPIO_GP4 interrupt set enable
Values:
0x01 (NVIC_GPIO_GP4_INT_ENABLE) - Enable GPIO_GP4 interrupt
          </description>
        </field>
        <field name="GPIO_GP3" bitoffset="18" bitlength="1">
          <description>GPIO_GP3 interrupt set enable
Values:
0x01 (NVIC_GPIO_GP3_INT_ENABLE) - Enable GPIO_GP3 interrupt
          </description>
        </field>
        <field name="GPIO_GP2" bitoffset="17" bitlength="1">
          <description>GPIO_GP2 interrupt set enable
Values:
0x01 (NVIC_GPIO_GP2_INT_ENABLE) - Enable GPIO_GP2 interrupt
          </description>
        </field>
        <field name="ECC_CORRECTED" bitoffset="16" bitlength="1">
          <description>ECC error corrected interrupt set enable
Values:
0x01 (NVIC_ECC_CORRECTED_INT_ENABLE) - Enable the ECC error corrected interrupt
          </description>
        </field>
        <field name="USB_EP5OUT" bitoffset="15" bitlength="1">
          <description>USB EP5OUT interrupt set enable
Values:
0x01 (NVIC_USB_EP5OUT_INT_ENABLE) - Enable USB EP5OUT interrupt
          </description>
        </field>
        <field name="USB_EP5IN" bitoffset="14" bitlength="1">
          <description>USB EP5IN interrupt set enable
Values:
0x01 (NVIC_USB_EP5IN_INT_ENABLE) - Enable USB EP5IN interrupt
          </description>
        </field>
        <field name="USB_EP4OUT" bitoffset="13" bitlength="1">
          <description>USB EP4OUT interrupt set enable
Values:
0x01 (NVIC_USB_EP4OUT_INT_ENABLE) - Enable USB EP4OUT interrupt
          </description>
        </field>
        <field name="USB_EP4IN" bitoffset="12" bitlength="1">
          <description>USB EP4IN interrupt set enable
Values:
0x01 (NVIC_USB_EP4IN_INT_ENABLE) - Enable USB EP4IN interrupt
          </description>
        </field>
        <field name="USB_EP3OUT" bitoffset="11" bitlength="1">
          <description>USB EP3OUT interrupt set enable
Values:
0x01 (NVIC_USB_EP3OUT_INT_ENABLE) - Enable USB EP3OUT interrupt
          </description>
        </field>
        <field name="USB_EP3IN" bitoffset="10" bitlength="1">
          <description>USB EP3IN interrupt set enable
Values:
0x01 (NVIC_USB_EP3IN_INT_ENABLE) - Enable USB EP3IN interrupt
          </description>
        </field>
        <field name="USB_EP2OUT" bitoffset="9" bitlength="1">
          <description>USB EP2OUT interrupt set enable
Values:
0x01 (NVIC_USB_EP2OUT_INT_ENABLE) - Enable USB EP2OUT interrupt
          </description>
        </field>
        <field name="USB_EP2IN" bitoffset="8" bitlength="1">
          <description>USB EP2IN interrupt set enable
Values:
0x01 (NVIC_USB_EP2IN_INT_ENABLE) - Enable USB EP2IN interrupt
          </description>
        </field>
        <field name="USB_EP0OUT" bitoffset="7" bitlength="1">
          <description>USB EP0OUT interrupt set enable
Values:
0x01 (NVIC_USB_EP0OUT_INT_ENABLE) - Enable USB EP0OUT interrupt
          </description>
        </field>
        <field name="USB_EP0IN" bitoffset="6" bitlength="1">
          <description>USB EP0IN interrupt set enable
Values:
0x01 (NVIC_USB_EP0IN_INT_ENABLE) - Enable USB EP0IN interrupt
          </description>
        </field>
        <field name="USB_RESET" bitoffset="5" bitlength="1">
          <description>USB reset interrupt set enable
Values:
0x01 (NVIC_USB_RESET_INT_ENABLE) - Enable USB reset interrupt
          </description>
        </field>
        <field name="USB_SUSPEND" bitoffset="4" bitlength="1">
          <description>USB suspend interrupt set enable
Values:
0x01 (NVIC_USB_SUSPEND_INT_ENABLE) - Enable USB suspend interrupt
          </description>
        </field>
        <field name="USB_SUTOK" bitoffset="3" bitlength="1">
          <description>USB setup data loading interrupt set enable
Values:
0x01 (NVIC_USB_SUTOK_INT_ENABLE) - Enable USB setup data loading interrupt
          </description>
        </field>
        <field name="USB_SOF" bitoffset="2" bitlength="1">
          <description>USB start of frame interrupt set enable
Values:
0x01 (NVIC_USB_SOF_INT_ENABLE) - Enable USB start of frame interrupt
          </description>
        </field>
        <field name="USB_SDAV" bitoffset="1" bitlength="1">
          <description>USB setup data available interrupt set enable
Values:
0x01 (NVIC_USB_SDAV_INT_ENABLE) - Enable USB setup data available interrupt
          </description>
        </field>
        <field name="USB_WAKEUP" bitoffset="0" bitlength="1">
          <description>USB wakeup interrupt set enable
Values:
0x01 (NVIC_USB_WAKEUP_INT_ENABLE) - Enable USB wakeup interrupt
          </description>
        </field>
      </register>
      <register name="NVIC_CLREN0" address="0xE000E180" access="RW" resetvalue="0x00000000">
        <description>NVIC External Interrupt Clear Enable Register 0</description>
        <field name="DMA3" bitoffset="31" bitlength="1">
          <description>DMA channel 3 interrupt clear enable
Values:
0x01 (NVIC_DMA3_INT_DISABLE) - Disable DMA channel 3 interrupt
          </description>
        </field>
        <field name="DMA2" bitoffset="30" bitlength="1">
          <description>DMA channel 2 interrupt clear enable
Values:
0x01 (NVIC_DMA2_INT_DISABLE) - Disable DMA channel 2 interrupt
          </description>
        </field>
        <field name="DMA1" bitoffset="29" bitlength="1">
          <description>DMA channel 1 interrupt clear enable
Values:
0x01 (NVIC_DMA1_INT_DISABLE) - Disable DMA channel 1 interrupt
          </description>
        </field>
        <field name="DMA0" bitoffset="28" bitlength="1">
          <description>DMA channel 0 interrupt clear enable
Values:
0x01 (NVIC_DMA0_INT_DISABLE) - Disable DMA channel 0 interrupt
          </description>
        </field>
        <field name="ADC" bitoffset="27" bitlength="1">
          <description>ADC interrupt clear enable
Values:
0x01 (NVIC_ADC_INT_DISABLE) - Disable ADC interrupt
          </description>
        </field>
        <field name="PCM_ERROR" bitoffset="26" bitlength="1">
          <description>PCM buffer overflow/underrun interrupt clear enable
Values:
0x01 (NVIC_PCM_ERROR_INT_DISABLE) - Disable PCM error interrupt
          </description>
        </field>
        <field name="PCM_TX" bitoffset="25" bitlength="1">
          <description>PCM transmit interrupt clear enable
Values:
0x01 (NVIC_PCM_TX_INT_DISABLE) - Disable PCM TX interrupt
          </description>
        </field>
        <field name="PCM_RX" bitoffset="24" bitlength="1">
          <description>PCM receive interrupt clear enable
Values:
0x01 (NVIC_PCM_RX_INT_DISABLE) - Disable PCM RX interrupt
          </description>
        </field>
        <field name="SPI1_ERROR" bitoffset="23" bitlength="1">
          <description>SPI1 buffer overflow/underrun error interrupt clear enable
Values:
0x01 (NVIC_SPI1_ERROR_INT_DISABLE) - Disable SPI1 error interrupt
          </description>
        </field>
        <field name="SPI1" bitoffset="22" bitlength="1">
          <description>SPI1 interrupt clear enable
Values:
0x01 (NVIC_SPI1_INT_DISABLE) - Disable SPI1 interrupt
          </description>
        </field>
        <field name="SPI0_ERROR" bitoffset="21" bitlength="1">
          <description>SPI0 buffer overflow/underrun error interrupt clear enable
Values:
0x01 (NVIC_SPI0_ERROR_INT_DISABLE) - Disable SPI0 error interrupt
          </description>
        </field>
        <field name="SPI0" bitoffset="20" bitlength="1">
          <description>SPI0 interrupt clear enable
Values:
0x01 (NVIC_SPI0_INT_DISABLE) - Disable SPI0 interrupt
          </description>
        </field>
        <field name="I2C" bitoffset="19" bitlength="1">
          <description>I2C interrupt clear enable
Values:
0x01 (NVIC_I2C_INT_DISABLE) - Disable I2C interrupt
          </description>
        </field>
        <field name="UART1_ERROR" bitoffset="18" bitlength="1">
          <description>UART1 buffer overflow/underrun error interrupt clear enable
Values:
0x01 (NVIC_UART1_ERROR_INT_DISABLE) - Disable UART1 error interrupt
          </description>
        </field>
        <field name="UART1_TX" bitoffset="17" bitlength="1">
          <description>UART1 transmit interrupt clear enable
Values:
0x01 (NVIC_UART1_TX_INT_DISABLE) - Disable UART1 transmit interrupt
          </description>
        </field>
        <field name="UART1_RX" bitoffset="16" bitlength="1">
          <description>UART1 receive interrupt clear enable
Values:
0x01 (NVIC_UART1_RX_INT_DISABLE) - Disable UART1 receive interrupt
          </description>
        </field>
        <field name="UART0_ERROR" bitoffset="15" bitlength="1">
          <description>UART0 buffer overflow/underrun error interrupt clear enable
Values:
0x01 (NVIC_UART0_ERROR_INT_DISABLE) - Disable UART0 error interrupt
          </description>
        </field>
        <field name="UART0_TX" bitoffset="14" bitlength="1">
          <description>UART0 transmit interrupt clear enable
Values:
0x01 (NVIC_UART0_TX_INT_DISABLE) - Disable UART0 transmit interrupt
          </description>
        </field>
        <field name="UART0_RX" bitoffset="13" bitlength="1">
          <description>UART0 receive interrupt clear enable
Values:
0x01 (NVIC_UART0_RX_INT_DISABLE) - Disable UART0 receive interrupt
          </description>
        </field>
        <field name="TIMER3" bitoffset="12" bitlength="1">
          <description>TIMER3 interrupt clear enable
Values:
0x01 (NVIC_TIMER3_INT_DISABLE) - Disable TIMER3 interrupt
          </description>
        </field>
        <field name="TIMER2" bitoffset="11" bitlength="1">
          <description>TIMER2 interrupt clear enable
Values:
0x01 (NVIC_TIMER2_INT_DISABLE) - Disable TIMER2 interrupt
          </description>
        </field>
        <field name="TIMER1" bitoffset="10" bitlength="1">
          <description>TIMER1 interrupt clear enable
Values:
0x01 (NVIC_TIMER1_INT_DISABLE) - Disable TIMER1 interrupt
          </description>
        </field>
        <field name="TIMER0" bitoffset="9" bitlength="1">
          <description>TIMER0 interrupt clear enable
Values:
0x01 (NVIC_TIMER0_INT_DISABLE) - Disable TIMER0 interrupt
          </description>
        </field>
        <field name="WATCHDOG" bitoffset="8" bitlength="1">
          <description>Watchdog interrupt clear enable
Values:
0x01 (NVIC_WATCHDOG_INT_DISABLE) - Disable watchdog interrupt
          </description>
        </field>
        <field name="GPIO_GP1" bitoffset="7" bitlength="1">
          <description>GPIO_GP1 interrupt clear enable
Values:
0x01 (NVIC_GPIO_GP1_INT_DISABLE) - Disable GPIO_GP1 interrupt
          </description>
        </field>
        <field name="GPIO_GP0" bitoffset="6" bitlength="1">
          <description>GPIO_GP0 interrupt clear enable
Values:
0x01 (NVIC_GPIO_GP0_INT_DISABLE) - Disable GPIO_GP0 interrupt
          </description>
        </field>
        <field name="NO_EXT_CLK_DETECT" bitoffset="5" bitlength="1">
          <description>No external clock interrupt clear enable
Values:
0x01 (NVIC_NO_EXT_CLK_DETECT_INT_DISABLE) - Disable no external clock interrupt
          </description>
        </field>
        <field name="THRESHOLD_COMPARE" bitoffset="4" bitlength="1">
          <description>Threshold compare interrupt clear enable
Values:
0x01 (NVIC_THRESHOLD_COMPARE_INT_DISABLE) - Disable threshold compare interrupt
          </description>
        </field>
        <field name="RTC_CLOCK" bitoffset="3" bitlength="1">
          <description>RTC clock interrupt clear enable
Values:
0x01 (NVIC_RTC_CLOCK_INT_DISABLE) - Disable RTC clock interrupt
          </description>
        </field>
        <field name="RTC_ALARM" bitoffset="2" bitlength="1">
          <description>RTC alarm interrupt clear enable
Values:
0x01 (NVIC_RTC_ALARM_INT_DISABLE) - Disable RTC alarm interrupt
          </description>
        </field>
        <field name="WAKEUP_IF5_PIN0" bitoffset="1" bitlength="1">
          <description>Analog wakeup interrupt clear enable
Values:
0x01 (NVIC_WAKEUP_IF5_PIN0_INT_DISABLE) - Disable analog wakeup interrupt
          </description>
        </field>
        <field name="WAKEUP" bitoffset="0" bitlength="1">
          <description>Wakeup interrupt clear enable
Values:
0x01 (NVIC_WAKEUP_INT_DISABLE) - Disable wakeup interrupt
          </description>
        </field>
      </register>
      <register name="NVIC_CLREN1" address="0xE000E184" access="RW" resetvalue="0x00000000">
        <description>NVIC External Interrupt Clear Enable Register 1</description>
        <field name="GPIO_GP7" bitoffset="22" bitlength="1">
          <description>GPIO_GP7 interrupt clear enable
Values:
0x01 (NVIC_GPIO_GP7_INT_DISABLE) - Disable GPIO_GP7 interrupt
          </description>
        </field>
        <field name="GPIO_GP6" bitoffset="21" bitlength="1">
          <description>GPIO_GP6 interrupt clear enable
Values:
0x01 (NVIC_GPIO_GP6_INT_DISABLE) - Disable GPIO_GP6 interrupt
          </description>
        </field>
        <field name="GPIO_GP5" bitoffset="20" bitlength="1">
          <description>GPIO_GP5 interrupt clear enable
Values:
0x01 (NVIC_GPIO_GP5_INT_DISABLE) - Disable GPIO_GP5 interrupt
          </description>
        </field>
        <field name="GPIO_GP4" bitoffset="19" bitlength="1">
          <description>GPIO_GP4 interrupt clear enable
Values:
0x01 (NVIC_GPIO_GP4_INT_DISABLE) - Disable GPIO_GP4 interrupt
          </description>
        </field>
        <field name="GPIO_GP3" bitoffset="18" bitlength="1">
          <description>GPIO_GP3 interrupt clear enable
Values:
0x01 (NVIC_GPIO_GP3_INT_DISABLE) - Disable GPIO_GP3 interrupt
          </description>
        </field>
        <field name="GPIO_GP2" bitoffset="17" bitlength="1">
          <description>GPIO_GP2 interrupt clear enable
Values:
0x01 (NVIC_GPIO_GP2_INT_DISABLE) - Disable GPIO_GP2 interrupt
          </description>
        </field>
        <field name="ECC_CORRECTED" bitoffset="16" bitlength="1">
          <description>ECC error corrected interrupt clear enable
Values:
0x01 (NVIC_ECC_CORRECTED_INT_DISABLE) - Disable the ECC error corrected interrupt
          </description>
        </field>
        <field name="USB_EP5OUT" bitoffset="15" bitlength="1">
          <description>USB EP5OUT interrupt clear enable
Values:
0x01 (NVIC_USB_EP5OUT_INT_DISABLE) - Disable USB EP5OUT interrupt
          </description>
        </field>
        <field name="USB_EP5IN" bitoffset="14" bitlength="1">
          <description>USB EP5IN interrupt clear enable
Values:
0x01 (NVIC_USB_EP5IN_INT_DISABLE) - Disable USB EP5IN interrupt
          </description>
        </field>
        <field name="USB_EP4OUT" bitoffset="13" bitlength="1">
          <description>USB EP4OUT interrupt clear enable
Values:
0x01 (NVIC_USB_EP4OUT_INT_DISABLE) - Disable USB EP4OUT interrupt
          </description>
        </field>
        <field name="USB_EP4IN" bitoffset="12" bitlength="1">
          <description>USB EP4IN interrupt clear enable
Values:
0x01 (NVIC_USB_EP4IN_INT_DISABLE) - Disable USB EP4IN interrupt
          </description>
        </field>
        <field name="USB_EP3OUT" bitoffset="11" bitlength="1">
          <description>USB EP3OUT interrupt clear enable
Values:
0x01 (NVIC_USB_EP3OUT_INT_DISABLE) - Disable USB EP3OUT interrupt
          </description>
        </field>
        <field name="USB_EP3IN" bitoffset="10" bitlength="1">
          <description>USB EP3IN interrupt clear enable
Values:
0x01 (NVIC_USB_EP3IN_INT_DISABLE) - Disable USB EP3IN interrupt
          </description>
        </field>
        <field name="USB_EP2OUT" bitoffset="9" bitlength="1">
          <description>USB EP2OUT interrupt clear enable
Values:
0x01 (NVIC_USB_EP2OUT_INT_DISABLE) - Disable USB EP2OUT interrupt
          </description>
        </field>
        <field name="USB_EP2IN" bitoffset="8" bitlength="1">
          <description>USB EP2IN interrupt clear enable
Values:
0x01 (NVIC_USB_EP2IN_INT_DISABLE) - Disable USB EP2IN interrupt
          </description>
        </field>
        <field name="USB_EP0OUT" bitoffset="7" bitlength="1">
          <description>USB EP0OUT interrupt clear enable
Values:
0x01 (NVIC_USB_EP0OUT_INT_DISABLE) - Disable USB EP0OUT interrupt
          </description>
        </field>
        <field name="USB_EP0IN" bitoffset="6" bitlength="1">
          <description>USB EP0IN interrupt clear enable
Values:
0x01 (NVIC_USB_EP0IN_INT_DISABLE) - Disable USB EP0IN interrupt
          </description>
        </field>
        <field name="USB_RESET" bitoffset="5" bitlength="1">
          <description>USB reset interrupt clear enable
Values:
0x01 (NVIC_USB_RESET_INT_DISABLE) - Disable USB reset interrupt
          </description>
        </field>
        <field name="USB_SUSPEND" bitoffset="4" bitlength="1">
          <description>USB suspend interrupt clear enable
Values:
0x01 (NVIC_USB_SUSPEND_INT_DISABLE) - Disable USB suspend interrupt
          </description>
        </field>
        <field name="USB_SUTOK" bitoffset="3" bitlength="1">
          <description>USB setup data loading interrupt clear enable
Values:
0x01 (NVIC_USB_SUTOK_INT_DISABLE) - Disable USB setup data loading interrupt
          </description>
        </field>
        <field name="USB_SOF" bitoffset="2" bitlength="1">
          <description>USB start of frame interrupt clear enable
Values:
0x01 (NVIC_USB_SOF_INT_DISABLE) - Disable USB start of frame interrupt
          </description>
        </field>
        <field name="USB_SDAV" bitoffset="1" bitlength="1">
          <description>USB setup data available interrupt clear enable
Values:
0x01 (NVIC_USB_SDAV_INT_DISABLE) - Disable USB setup data available interrupt
          </description>
        </field>
        <field name="USB_WAKEUP" bitoffset="0" bitlength="1">
          <description>USB wakeup interrupt clear enable
Values:
0x01 (NVIC_USB_WAKEUP_INT_DISABLE) - Disable USB wakeup interrupt
          </description>
        </field>
      </register>
      <register name="NVIC_SETPEND0" address="0xE000E200" access="RW" resetvalue="0x00000000">
        <description>NVIC External Interrupt Set Pending Register 0</description>
        <field name="DMA3" bitoffset="31" bitlength="1">
          <description>DMA channel 3 interrupt set pending
Values:
0x01 (NVIC_DMA3_INT_SETPEND) - Set DMA channel 3 interrupt as pending
          </description>
        </field>
        <field name="DMA2" bitoffset="30" bitlength="1">
          <description>DMA channel 2 interrupt set pending
Values:
0x01 (NVIC_DMA2_INT_SETPEND) - Set DMA channel 2 interrupt as pending
          </description>
        </field>
        <field name="DMA1" bitoffset="29" bitlength="1">
          <description>DMA channel 1 interrupt set pending
Values:
0x01 (NVIC_DMA1_INT_SETPEND) - Set DMA channel 1 interrupt as pending
          </description>
        </field>
        <field name="DMA0" bitoffset="28" bitlength="1">
          <description>DMA channel 0 interrupt set pending
Values:
0x01 (NVIC_DMA0_INT_SETPEND) - Set DMA channel 0 interrupt as pending
          </description>
        </field>
        <field name="ADC" bitoffset="27" bitlength="1">
          <description>ADC interrupt set pending
Values:
0x01 (NVIC_ADC_INT_SETPEND) - Set ADC interrupt as pending
          </description>
        </field>
        <field name="PCM_ERROR" bitoffset="26" bitlength="1">
          <description>PCM buffer overflow/underrun interrupt set pending
Values:
0x01 (NVIC_PCM_ERROR_INT_SETPEND) - Set PCM error interrupt as pending
          </description>
        </field>
        <field name="PCM_TX" bitoffset="25" bitlength="1">
          <description>PCM transmit interrupt set pending
Values:
0x01 (NVIC_PCM_TX_INT_SETPEND) - Set PCM TX interrupt as pending
          </description>
        </field>
        <field name="PCM_RX" bitoffset="24" bitlength="1">
          <description>PCM receive interrupt set pending
Values:
0x01 (NVIC_PCM_RX_INT_SETPEND) - Set PCM RX interrupt as pending
          </description>
        </field>
        <field name="SPI1_ERROR" bitoffset="23" bitlength="1">
          <description>SPI1 buffer overflow/underrun error interrupt set pending
Values:
0x01 (NVIC_SPI1_ERROR_INT_SETPEND) - Set SPI1 error interrupt as pending
          </description>
        </field>
        <field name="SPI1" bitoffset="22" bitlength="1">
          <description>SPI1 interrupt set pending
Values:
0x01 (NVIC_SPI1_INT_SETPEND) - Set SPI1 interrupt as pending
          </description>
        </field>
        <field name="SPI0_ERROR" bitoffset="21" bitlength="1">
          <description>SPI0 buffer overflow/underrun error interrupt set pending
Values:
0x01 (NVIC_SPI0_ERROR_INT_SETPEND) - Set SPI0 error interrupt as pending
          </description>
        </field>
        <field name="SPI0" bitoffset="20" bitlength="1">
          <description>SPI0 interrupt set pending
Values:
0x01 (NVIC_SPI0_INT_SETPEND) - Set SPI0 interrupt as pending
          </description>
        </field>
        <field name="I2C" bitoffset="19" bitlength="1">
          <description>I2C interrupt set pending
Values:
0x01 (NVIC_I2C_INT_SETPEND) - Set I2C interrupt as pending
          </description>
        </field>
        <field name="UART1_ERROR" bitoffset="18" bitlength="1">
          <description>UART1 buffer overflow/underrun error interrupt set pending
Values:
0x01 (NVIC_UART1_ERROR_INT_SETPEND) - Set UART1 error interrupt as pending
          </description>
        </field>
        <field name="UART1_TX" bitoffset="17" bitlength="1">
          <description>UART1 transmit interrupt set pending
Values:
0x01 (NVIC_UART1_TX_INT_SETPEND) - Set UART1 transmit interuppt  as pending
          </description>
        </field>
        <field name="UART1_RX" bitoffset="16" bitlength="1">
          <description>UART1 receive interrupt set pending
Values:
0x01 (NVIC_UART1_RX_INT_SETPEND) - Set UART1 receive interrupt  as pending
          </description>
        </field>
        <field name="UART0_ERROR" bitoffset="15" bitlength="1">
          <description>UART0 buffer overflow/underrun error interrupt set pending
Values:
0x01 (NVIC_UART0_ERROR_INT_SETPEND) - Set UART0 error interrupt as pending
          </description>
        </field>
        <field name="UART0_TX" bitoffset="14" bitlength="1">
          <description>UART0 transmit interrupt set pending
Values:
0x01 (NVIC_UART0_TX_INT_SETPEND) - Set UART0 transmit interrupt as pending
          </description>
        </field>
        <field name="UART0_RX" bitoffset="13" bitlength="1">
          <description>UART0 receive interrupt set pending
Values:
0x01 (NVIC_UART0_RX_INT_SETPEND) - Set UART0 receive interrupt as pending
          </description>
        </field>
        <field name="TIMER3" bitoffset="12" bitlength="1">
          <description>TIMER3 interrupt set pending
Values:
0x01 (NVIC_TIMER3_INT_SETPEND) - SetTIMER3 interrupt as pending
          </description>
        </field>
        <field name="TIMER2" bitoffset="11" bitlength="1">
          <description>TIMER2 interrupt set pending
Values:
0x01 (NVIC_TIMER2_INT_SETPEND) - Set TIMER2 interrupt as pending
          </description>
        </field>
        <field name="TIMER1" bitoffset="10" bitlength="1">
          <description>TIMER1 interrupt set pending
Values:
0x01 (NVIC_TIMER1_INT_SETPEND) - SetTIMER1 interrupt as pending
          </description>
        </field>
        <field name="TIMER0" bitoffset="9" bitlength="1">
          <description>TIMER0 interrupt set pending
Values:
0x01 (NVIC_TIMER0_INT_SETPEND) - Set TIMER0 interrupt as pending
          </description>
        </field>
        <field name="WATCHDOG" bitoffset="8" bitlength="1">
          <description>Watchdog interrupt set pending
Values:
0x01 (NVIC_WATCHDOG_INT_SETPEND) - Set watchdog interrupt as pending
          </description>
        </field>
        <field name="GPIO_GP1" bitoffset="7" bitlength="1">
          <description>GPIO_GP1 interrupt set pending
Values:
0x01 (NVIC_GPIO_GP1_INT_SETPEND) - Set GPIO_GP1 interrupt as pending
          </description>
        </field>
        <field name="GPIO_GP0" bitoffset="6" bitlength="1">
          <description>GPIO_GP0 interrupt set pending
Values:
0x01 (NVIC_GPIO_GP0_INT_SETPEND) - Set GPIO_GP0 interrupt as pending
          </description>
        </field>
        <field name="NO_EXT_CLK_DETECT" bitoffset="5" bitlength="1">
          <description>No external clock interrupt set pending
Values:
0x01 (NVIC_NO_EXT_CLK_DETECT_INT_SETPEND) - Set no external clock interrupt as pending
          </description>
        </field>
        <field name="THRESHOLD_COMPARE" bitoffset="4" bitlength="1">
          <description>Threshold compare interrupt set pending
Values:
0x01 (NVIC_THRESHOLD_COMPARE_INT_SETPEND) - Set threshold compare interrupt as pending
          </description>
        </field>
        <field name="RTC_CLOCK" bitoffset="3" bitlength="1">
          <description>RTC clock interrupt set pending
Values:
0x01 (NVIC_RTC_CLOCK_INT_SETPEND) - Set RTC clock interrupt as pending
          </description>
        </field>
        <field name="RTC_ALARM" bitoffset="2" bitlength="1">
          <description>RTC alarm interrupt set pending
Values:
0x01 (NVIC_RTC_ALARM_INT_SETPEND) - Set RTC alarm interrupt as pending
          </description>
        </field>
        <field name="WAKEUP_IF5_PIN0" bitoffset="1" bitlength="1">
          <description>Analog wakeup interrupt set pending
Values:
0x01 (NVIC_WAKEUP_IF5_PIN0_INT_SETPEND) - Set analog wakeup interrupt as pending
          </description>
        </field>
        <field name="WAKEUP" bitoffset="0" bitlength="1">
          <description>Wakeup interrupt set pending
Values:
0x01 (NVIC_WAKEUP_INT_SETPEND) - Set wakeup interrupt as pending
          </description>
        </field>
      </register>
      <register name="NVIC_SETPEND1" address="0xE000E204" access="RW" resetvalue="0x00000000">
        <description>NVIC External Interrupt Set Pending Register 1</description>
        <field name="GPIO_GP7" bitoffset="22" bitlength="1">
          <description>GPIO_GP7 interrupt set pending
Values:
0x01 (NVIC_GPIO_GP7_INT_SETPEND) - Set GPIO_GP7 interrupt as pending
          </description>
        </field>
        <field name="GPIO_GP6" bitoffset="21" bitlength="1">
          <description>GPIO_GP6 interrupt set pending
Values:
0x01 (NVIC_GPIO_GP6_INT_SETPEND) - Set GPIO_GP6 interrupt as pending
          </description>
        </field>
        <field name="GPIO_GP5" bitoffset="20" bitlength="1">
          <description>GPIO_GP5 interrupt set pending
Values:
0x01 (NVIC_GPIO_GP5_INT_SETPEND) - Set GPIO_GP5 interrupt as pending
          </description>
        </field>
        <field name="GPIO_GP4" bitoffset="19" bitlength="1">
          <description>GPIO_GP4 interrupt set pending
Values:
0x01 (NVIC_GPIO_GP4_INT_SETPEND) - Set GPIO_GP4 interrupt as pending
          </description>
        </field>
        <field name="GPIO_GP3" bitoffset="18" bitlength="1">
          <description>GPIO_GP3 interrupt set pending
Values:
0x01 (NVIC_GPIO_GP3_INT_SETPEND) - Set GPIO_GP3 interrupt as pending
          </description>
        </field>
        <field name="GPIO_GP2" bitoffset="17" bitlength="1">
          <description>GPIO_GP2 interrupt set pending
Values:
0x01 (NVIC_GPIO_GP2_INT_SETPEND) - Set GPIO_GP2 interrupt as pending
          </description>
        </field>
        <field name="ECC_CORRECTED" bitoffset="16" bitlength="1">
          <description>ECC error corrected interrupt set pending
Values:
0x01 (NVIC_ECC_CORRECTED_INT_SETPEND) - Set the ECC error corrected interrupt as pending
          </description>
        </field>
        <field name="USB_EP5OUT" bitoffset="15" bitlength="1">
          <description>USB EP5OUT interrupt set pending
Values:
0x01 (NVIC_USB_EP5OUT_INT_SETPEND) - Set USB EP5OUT interrupt as pending
          </description>
        </field>
        <field name="USB_EP5IN" bitoffset="14" bitlength="1">
          <description>USB EP5IN interrupt set pending
Values:
0x01 (NVIC_USB_EP5IN_INT_SETPEND) - Set USB EP5IN interrupt as pending
          </description>
        </field>
        <field name="USB_EP4OUT" bitoffset="13" bitlength="1">
          <description>USB EP4OUT interrupt set pending
Values:
0x01 (NVIC_USB_EP4OUT_INT_SETPEND) - Set USB EP4OUT interrupt as pending
          </description>
        </field>
        <field name="USB_EP4IN" bitoffset="12" bitlength="1">
          <description>USB EP4IN interrupt set pending
Values:
0x01 (NVIC_USB_EP4IN_INT_SETPEND) - Set USB EP4IN interrupt as pending
          </description>
        </field>
        <field name="USB_EP3OUT" bitoffset="11" bitlength="1">
          <description>USB EP3OUT interrupt set pending
Values:
0x01 (NVIC_USB_EP3OUT_INT_SETPEND) - Set USB EP3OUT interrupt as pending
          </description>
        </field>
        <field name="USB_EP3IN" bitoffset="10" bitlength="1">
          <description>USB EP3IN interrupt set pending
Values:
0x01 (NVIC_USB_EP3IN_INT_SETPEND) - Set USB EP3IN interrupt as pending
          </description>
        </field>
        <field name="USB_EP2OUT" bitoffset="9" bitlength="1">
          <description>USB EP2OUT interrupt set pending
Values:
0x01 (NVIC_USB_EP2OUT_INT_SETPEND) - Set USB EP2OUT interrupt as pending
          </description>
        </field>
        <field name="USB_EP2IN" bitoffset="8" bitlength="1">
          <description>USB EP2IN interrupt set pending
Values:
0x01 (NVIC_USB_EP2IN_INT_SETPEND) - Set USB EP2IN interrupt as pending
          </description>
        </field>
        <field name="USB_EP0OUT" bitoffset="7" bitlength="1">
          <description>USB EP0OUT interrupt set pending
Values:
0x01 (NVIC_USB_EP0OUT_INT_SETPEND) - Set USB EP0OUT interrupt as pending
          </description>
        </field>
        <field name="USB_EP0IN" bitoffset="6" bitlength="1">
          <description>USB EP0IN interrupt set pending
Values:
0x01 (NVIC_USB_EP0IN_INT_SETPEND) - Set USB EP0IN interrupt as pending
          </description>
        </field>
        <field name="USB_RESET" bitoffset="5" bitlength="1">
          <description>USB reset interrupt set pending
Values:
0x01 (NVIC_USB_RESET_INT_SETPEND) - Set USB reset interrupt as pending
          </description>
        </field>
        <field name="USB_SUSPEND" bitoffset="4" bitlength="1">
          <description>USB suspend interrupt set pending
Values:
0x01 (NVIC_USB_SUSPEND_INT_SETPEND) - Set USB suspend interrupt as pending
          </description>
        </field>
        <field name="USB_SUTOK" bitoffset="3" bitlength="1">
          <description>USB setup data loading interrupt set pending
Values:
0x01 (NVIC_USB_SUTOK_INT_SETPEND) - Set USB setup data loading interrupt as pending
          </description>
        </field>
        <field name="USB_SOF" bitoffset="2" bitlength="1">
          <description>USB start of frame interrupt set pending
Values:
0x01 (NVIC_USB_SOF_INT_SETPEND) - Set USB start of frame interrupt as pending
          </description>
        </field>
        <field name="USB_SDAV" bitoffset="1" bitlength="1">
          <description>USB setup data available interrupt set pending
Values:
0x01 (NVIC_USB_SDAV_INT_SETPEND) - Set USB setup data interrupt as pending
          </description>
        </field>
        <field name="USB_WAKEUP" bitoffset="0" bitlength="1">
          <description>USB wakeup interrupt set pending
Values:
0x01 (NVIC_USB_WAKEUP_INT_SETPEND) - Set USB wakeup interrupt as pending
          </description>
        </field>
      </register>
      <register name="NVIC_CLRPEND0" address="0xE000E280" access="RW" resetvalue="0x00000000">
        <description>NVIC External Interrupt Clear Pending Register 0</description>
        <field name="DMA3" bitoffset="31" bitlength="1">
          <description>DMA channel 3 interrupt clear pending
Values:
0x01 (NVIC_DMA3_INT_CLRPEND) - Clear pending DMA channel 3 interrupt
          </description>
        </field>
        <field name="DMA2" bitoffset="30" bitlength="1">
          <description>DMA channel 2 interrupt clear pending
Values:
0x01 (NVIC_DMA2_INT_CLRPEND) - Clear pending DMA channel 2 interrupt
          </description>
        </field>
        <field name="DMA1" bitoffset="29" bitlength="1">
          <description>DMA channel 1 interrupt clear pending
Values:
0x01 (NVIC_DMA1_INT_CLRPEND) - Clear pending DMA channel 1 interrupt
          </description>
        </field>
        <field name="DMA0" bitoffset="28" bitlength="1">
          <description>DMA channel 0 interrupt clear pending
Values:
0x01 (NVIC_DMA0_INT_CLRPEND) - Clear pending DMA channel 0 interrupt
          </description>
        </field>
        <field name="ADC" bitoffset="27" bitlength="1">
          <description>ADC interrupt clear pending
Values:
0x01 (NVIC_ADC_INT_CLRPEND) - Clear pending ADC interrupt
          </description>
        </field>
        <field name="PCM_ERROR" bitoffset="26" bitlength="1">
          <description>PCM buffer overflow/underrun interrupt clear pending
Values:
0x01 (NVIC_PCM_ERROR_INT_CLRPEND) - Clear pending PCM error interrupt
          </description>
        </field>
        <field name="PCM_TX" bitoffset="25" bitlength="1">
          <description>PCM transmit interrupt clear pending
Values:
0x01 (NVIC_PCM_TX_INT_CLRPEND) - Clear pending PCM TX interrupt
          </description>
        </field>
        <field name="PCM_RX" bitoffset="24" bitlength="1">
          <description>PCM receive interrupt clear pending
Values:
0x01 (NVIC_PCM_RX_INT_CLRPEND) - Clear pending PCM RX interrupt
          </description>
        </field>
        <field name="SPI1_ERROR" bitoffset="23" bitlength="1">
          <description>SPI1 buffer overflow/underrun error interrupt clear pending
Values:
0x01 (NVIC_SPI1_ERROR_INT_CLRPEND) - Clear pending SPI1 error interrupt
          </description>
        </field>
        <field name="SPI1" bitoffset="22" bitlength="1">
          <description>SPI1 interrupt clear pending
Values:
0x01 (NVIC_SPI1_INT_CLRPEND) - Clear pending SPI1 interrupt
          </description>
        </field>
        <field name="SPI0_ERROR" bitoffset="21" bitlength="1">
          <description>SPI0 buffer overflow/underrun error interrupt clear pending
Values:
0x01 (NVIC_SPI0_ERROR_INT_CLRPEND) - Clear pending SPI0 error interrupt
          </description>
        </field>
        <field name="SPI0" bitoffset="20" bitlength="1">
          <description>SPI0 interrupt clear pending
Values:
0x01 (NVIC_SPI0_INT_CLRPEND) - Clear pending SPI0 interrupt
          </description>
        </field>
        <field name="I2C" bitoffset="19" bitlength="1">
          <description>I2C interrupt clear pending
Values:
0x01 (NVIC_I2C_INT_CLRPEND) - Clear pending I2C interrupt
          </description>
        </field>
        <field name="UART1_ERROR" bitoffset="18" bitlength="1">
          <description>UART1 buffer overflow/underrun error interrupt clear pending
Values:
0x01 (NVIC_UART1_ERROR_INT_CLRPEND) - Clear pending UART1 error interrupt
          </description>
        </field>
        <field name="UART1_TX" bitoffset="17" bitlength="1">
          <description>UART1 transmit interrupt clear pending
Values:
0x01 (NVIC_UART1_TX_INT_CLRPEND) - Clear pending UART1 transmit interrupt
          </description>
        </field>
        <field name="UART1_RX" bitoffset="16" bitlength="1">
          <description>UART1 receive interrupt clear pending
Values:
0x01 (NVIC_UART1_RX_INT_CLRPEND) - Clear pending UART1 receive interrupt
          </description>
        </field>
        <field name="UART0_ERROR" bitoffset="15" bitlength="1">
          <description>UART0 buffer overflow/underrun error interrupt clear pending
Values:
0x01 (NVIC_UART0_ERROR_INT_CLRPEND) - Clear pending UART0 error interrupt
          </description>
        </field>
        <field name="UART0_TX" bitoffset="14" bitlength="1">
          <description>UART0 transmit interrupt clear pending
Values:
0x01 (NVIC_UART0_TX_INT_CLRPEND) - Clear pending UART0 transmit interrupt
          </description>
        </field>
        <field name="UART0_RX" bitoffset="13" bitlength="1">
          <description>UART0 receive interrupt clear pending
Values:
0x01 (NVIC_UART0_RX_INT_CLRPEND) - Clear pending UART0 receive interrupt
          </description>
        </field>
        <field name="TIMER3" bitoffset="12" bitlength="1">
          <description>TIMER3 interrupt clear pending
Values:
0x01 (NVIC_TIMER3_INT_CLRPEND) - Clear pending TIMER3 interrupt
          </description>
        </field>
        <field name="TIMER2" bitoffset="11" bitlength="1">
          <description>TIMER2 interrupt clear pending
Values:
0x01 (NVIC_TIMER2_INT_CLRPEND) - Clear pending TIMER2 interrupt
          </description>
        </field>
        <field name="TIMER1" bitoffset="10" bitlength="1">
          <description>TIMER1 interrupt clear pending
Values:
0x01 (NVIC_TIMER1_INT_CLRPEND) - Clear pending TIMER1 interrupt
          </description>
        </field>
        <field name="TIMER0" bitoffset="9" bitlength="1">
          <description>TIMER0 interrupt clear pending
Values:
0x01 (NVIC_TIMER0_INT_CLRPEND) - Clear pending TIMER0 interrupt
          </description>
        </field>
        <field name="WATCHDOG" bitoffset="8" bitlength="1">
          <description>Watchdog interrupt clear pending
Values:
0x01 (NVIC_WATCHDOG_INT_CLRPEND) - Clear pending watchdog interrupt
          </description>
        </field>
        <field name="GPIO_GP1" bitoffset="7" bitlength="1">
          <description>GPIO_GP1 interrupt clear pending
Values:
0x01 (NVIC_GPIO_GP1_INT_CLRPEND) - Clear pending GPIO_GP1 interrupt
          </description>
        </field>
        <field name="GPIO_GP0" bitoffset="6" bitlength="1">
          <description>GPIO_GP0 interrupt clear pending
Values:
0x01 (NVIC_GPIO_GP0_INT_CLRPEND) - Clear pending GPIO_GP0 interrupt
          </description>
        </field>
        <field name="NO_EXT_CLK_DETECT" bitoffset="5" bitlength="1">
          <description>No external clock interrupt clear pending
Values:
0x01 (NVIC_NO_EXT_CLK_DETECT_INT_CLRPEND) - Clear no external clock interrupt
          </description>
        </field>
        <field name="THRESHOLD_COMPARE" bitoffset="4" bitlength="1">
          <description>Threshold compare interrupt clear pending
Values:
0x01 (NVIC_THRESHOLD_COMPARE_INT_CLRPEND) - Clear threshold compare interrupt
          </description>
        </field>
        <field name="RTC_CLOCK" bitoffset="3" bitlength="1">
          <description>RTC clock interrupt clear pending
Values:
0x01 (NVIC_RTC_CLOCK_INT_CLRPEND) - Clear RTC clock interrupt
          </description>
        </field>
        <field name="RTC_ALARM" bitoffset="2" bitlength="1">
          <description>RTC alarm interrupt clear pending
Values:
0x01 (NVIC_RTC_ALARM_INT_CLRPEND) - Clear RTC alarm interrupt
          </description>
        </field>
        <field name="WAKEUP_IF5_PIN0" bitoffset="1" bitlength="1">
          <description>Analog wakeup interrupt clear pending
Values:
0x01 (NVIC_WAKEUP_IF5_PIN0_INT_CLRPEND) - Clear pending analog wakeup interrupt
          </description>
        </field>
        <field name="WAKEUP" bitoffset="0" bitlength="1">
          <description>Wakeup interrupt clear pending
Values:
0x01 (NVIC_WAKEUP_INT_CLRPEND) - Clear pending wakeup interrupt
          </description>
        </field>
      </register>
      <register name="NVIC_CLRPEND1" address="0xE000E284" access="RW" resetvalue="0x00000000">
        <description>NVIC External Interrupt Clear Pending Register 1</description>
        <field name="GPIO_GP7" bitoffset="22" bitlength="1">
          <description>GPIO_GP7 interrupt clear pending
Values:
0x01 (NVIC_GPIO_GP7_INT_CLRPEND) - Clear pending GPIO_GP7 interrupt
          </description>
        </field>
        <field name="GPIO_GP6" bitoffset="21" bitlength="1">
          <description>GPIO_GP6 interrupt clear pending
Values:
0x01 (NVIC_GPIO_GP6_INT_CLRPEND) - Clear pending GPIO_GP6 interrupt
          </description>
        </field>
        <field name="GPIO_GP5" bitoffset="20" bitlength="1">
          <description>GPIO_GP5 interrupt clear pending
Values:
0x01 (NVIC_GPIO_GP5_INT_CLRPEND) - Clear pending GPIO_GP5 interrupt
          </description>
        </field>
        <field name="GPIO_GP4" bitoffset="19" bitlength="1">
          <description>GPIO_GP4 interrupt clear pending
Values:
0x01 (NVIC_GPIO_GP4_INT_CLRPEND) - Clear pending GPIO_GP4 interrupt
          </description>
        </field>
        <field name="GPIO_GP3" bitoffset="18" bitlength="1">
          <description>GPIO_GP3 interrupt clear pending
Values:
0x01 (NVIC_GPIO_GP3_INT_CLRPEND) - Clear pending GPIO_GP3 interrupt
          </description>
        </field>
        <field name="GPIO_GP2" bitoffset="17" bitlength="1">
          <description>GPIO_GP2 interrupt clear pending
Values:
0x01 (NVIC_GPIO_GP2_INT_CLRPEND) - Clear pending GPIO_GP2 interrupt
          </description>
        </field>
        <field name="ECC_CORRECTED" bitoffset="16" bitlength="1">
          <description>ECC error corrected interrupt clear pending
Values:
0x01 (NVIC_ECC_CORRECTED_INT_CLRPEND) - Clear pending ECC error corrected interrupt
          </description>
        </field>
        <field name="USB_EP5OUT" bitoffset="15" bitlength="1">
          <description>USB EP5OUT interrupt clear pending
Values:
0x01 (NVIC_USB_EP5OUT_INT_CLRPEND) - Clear pending USB EP5OUT interrupt
          </description>
        </field>
        <field name="USB_EP5IN" bitoffset="14" bitlength="1">
          <description>USB EP5IN interrupt clear pending
Values:
0x01 (NVIC_USB_EP5IN_INT_CLRPEND) - Clear pending USB EP5IN interrupt
          </description>
        </field>
        <field name="USB_EP4OUT" bitoffset="13" bitlength="1">
          <description>USB EP4OUT interrupt clear pending
Values:
0x01 (NVIC_USB_EP4OUT_INT_CLRPEND) - Clear pending USB EP4OUT interrupt
          </description>
        </field>
        <field name="USB_EP4IN" bitoffset="12" bitlength="1">
          <description>USB EP4IN interrupt clear pending
Values:
0x01 (NVIC_USB_EP4IN_INT_CLRPEND) - Clear pending USB EP4IN interrupt
          </description>
        </field>
        <field name="USB_EP3OUT" bitoffset="11" bitlength="1">
          <description>USB EP3OUT interrupt clear pending
Values:
0x01 (NVIC_USB_EP3OUT_INT_CLRPEND) - Clear pending USB EP3OUT interrupt
          </description>
        </field>
        <field name="USB_EP3IN" bitoffset="10" bitlength="1">
          <description>USB EP3IN interrupt clear pending
Values:
0x01 (NVIC_USB_EP3IN_INT_CLRPEND) - Clear pending USB EP3IN interrupt
          </description>
        </field>
        <field name="USB_EP2OUT" bitoffset="9" bitlength="1">
          <description>USB EP2OUT interrupt clear pending
Values:
0x01 (NVIC_USB_EP2OUT_INT_CLRPEND) - Clear pending USB EP2OUT interrupt
          </description>
        </field>
        <field name="USB_EP2IN" bitoffset="8" bitlength="1">
          <description>USB EP2IN interrupt clear pending
Values:
0x01 (NVIC_USB_EP2IN_INT_CLRPEND) - Clear pending USB EP2IN interrupt
          </description>
        </field>
        <field name="USB_EP0OUT" bitoffset="7" bitlength="1">
          <description>USB EP0OUT interrupt clear pending
Values:
0x01 (NVIC_USB_EP0OUT_INT_CLRPEND) - Clear pending USB EP0OUT interrupt
          </description>
        </field>
        <field name="USB_EP0IN" bitoffset="6" bitlength="1">
          <description>USB EP0IN interrupt clear pending
Values:
0x01 (NVIC_USB_EP0IN_INT_CLRPEND) - Clear pending USB EP0IN interrupt
          </description>
        </field>
        <field name="USB_RESET" bitoffset="5" bitlength="1">
          <description>USB set interrupt clear pending
Values:
0x01 (NVIC_USB_RESET_INT_CLRPEND) - Clear pending USB reset interrupt
          </description>
        </field>
        <field name="USB_SUSPEND" bitoffset="4" bitlength="1">
          <description>USB suspend interrupt clear pending
Values:
0x01 (NVIC_USB_SUSPEND_INT_CLRPEND) - Clear pending  USB suspend interrupt
          </description>
        </field>
        <field name="USB_SUTOK" bitoffset="3" bitlength="1">
          <description>USB setup data loading interrupt clear pending
Values:
0x01 (NVIC_USB_SUTOK_INT_CLRPEND) - Clear pending USB setup data loading interrupt
          </description>
        </field>
        <field name="USB_SOF" bitoffset="2" bitlength="1">
          <description>USB start of frame interrupt clear pending
Values:
0x01 (NVIC_USB_SOF_INT_CLRPEND) - Clear pending USB start of frame interrupt
          </description>
        </field>
        <field name="USB_SDAV" bitoffset="1" bitlength="1">
          <description>USB setup data available interrupt clear pending
Values:
0x01 (NVIC_USB_SDAV_INT_CLRPEND) - Clear pending USB setup data available interrupt
          </description>
        </field>
        <field name="USB_WAKEUP" bitoffset="0" bitlength="1">
          <description>USB wakeup interrupt clear pending
Values:
0x01 (NVIC_USB_WAKEUP_INT_CLRPEND) - Clear pending USB wakeup interrupt
          </description>
        </field>
      </register>
      <register name="NVIC_ACTIVE0" address="0xE000E300" access="RW" resetvalue="0x00000000">
        <description>NVIC External Interrupt Active Register 0</description>
        <field name="DMA3" bitoffset="31" bitlength="1">
          <description>DMA channel 3 interrupt active status
Values:
0x01 (NVIC_DMA3_INT_ACTIVE) - DMA channel 3 interrupt is active
          </description>
        </field>
        <field name="DMA2" bitoffset="30" bitlength="1">
          <description>DMA channel 2 interrupt active status
Values:
0x01 (NVIC_DMA2_INT_ACTIVE) - DMA channel 2 interrupt is active
          </description>
        </field>
        <field name="DMA1" bitoffset="29" bitlength="1">
          <description>DMA channel 1 interrupt active status
Values:
0x01 (NVIC_DMA1_INT_ACTIVE) - DMA channel 1 interrupt is active
          </description>
        </field>
        <field name="DMA0" bitoffset="28" bitlength="1">
          <description>DMA channel 0 interrupt active status
Values:
0x01 (NVIC_DMA0_INT_ACTIVE) - DMA channel 0 interrupt is active
          </description>
        </field>
        <field name="ADC" bitoffset="27" bitlength="1">
          <description>ADC interrupt active status
Values:
0x01 (NVIC_ADC_INT_ACTIVE) - ADC interrupt is active
          </description>
        </field>
        <field name="PCM_ERROR" bitoffset="26" bitlength="1">
          <description>PCM buffer overflow/underrun interrupt active status
Values:
0x01 (NVIC_PCM_ERROR_INT_ACTIVE) - PCM error interrupt is active
          </description>
        </field>
        <field name="PCM_TX" bitoffset="25" bitlength="1">
          <description>PCM transmit interrupt active status
Values:
0x01 (NVIC_PCM_TX_INT_ACTIVE) - PCM TX interrupt is active
          </description>
        </field>
        <field name="PCM_RX" bitoffset="24" bitlength="1">
          <description>PCM receive interrupt active status
Values:
0x01 (NVIC_PCM_RX_INT_ACTIVE) - PCM RX interrupt is active
          </description>
        </field>
        <field name="SPI1_ERROR" bitoffset="23" bitlength="1">
          <description>SPI1 buffer overflow/underrun error interrupt active status
Values:
0x01 (NVIC_SPI1_ERROR_INT_ACTIVE) - SPI1 error interrupt is active
          </description>
        </field>
        <field name="SPI1" bitoffset="22" bitlength="1">
          <description>SPI1 interrupt active status
Values:
0x01 (NVIC_SPI1_INT_ACTIVE) - SPI1 interrupt is active
          </description>
        </field>
        <field name="SPI0_ERROR" bitoffset="21" bitlength="1">
          <description>SPI0 buffer overflow/underrun error interrupt active status
Values:
0x01 (NVIC_SPI0_ERROR_INT_ACTIVE) - SPI0 error interrupt is active
          </description>
        </field>
        <field name="SPI0" bitoffset="20" bitlength="1">
          <description>SPI0 interrupt active status
Values:
0x01 (NVIC_SPI0_INT_ACTIVE) - SPI0 interrupt is active
          </description>
        </field>
        <field name="I2C" bitoffset="19" bitlength="1">
          <description>I2C interrupt active status
Values:
0x01 (NVIC_I2C_INT_ACTIVE) - I2C interrupt is active
          </description>
        </field>
        <field name="UART1_ERROR" bitoffset="18" bitlength="1">
          <description>UART1 buffer overflow/underrun error interrupt active status
Values:
0x01 (NVIC_UART1_ERROR_INT_ACTIVE) - UART1 error interrupt is active
          </description>
        </field>
        <field name="UART1_TX" bitoffset="17" bitlength="1">
          <description>UART1 transmit interrupt active status
Values:
0x01 (NVIC_UART1_TX_INT_ACTIVE) - UART1 transmit interrupt is active
          </description>
        </field>
        <field name="UART1_RX" bitoffset="16" bitlength="1">
          <description>UART1 receive interrupt active status
Values:
0x01 (NVIC_UART1_RX_INT_ACTIVE) - UART1 receive interrupt is active
          </description>
        </field>
        <field name="UART0_ERROR" bitoffset="15" bitlength="1">
          <description>UART0 buffer overflow/underrun error interrupt active status
Values:
0x01 (NVIC_UART0_ERROR_INT_ACTIVE) - UART0 error interrupt is active
          </description>
        </field>
        <field name="UART0_TX" bitoffset="14" bitlength="1">
          <description>UART0 transmit interrupt active status
Values:
0x01 (NVIC_UART0_TX_INT_ACTIVE) - UART0 transmit interrupt is active
          </description>
        </field>
        <field name="UART0_RX" bitoffset="13" bitlength="1">
          <description>UART0 receive interrupt active status
Values:
0x01 (NVIC_UART0_RX_INT_ACTIVE) - UART0 receive interrupt is active
          </description>
        </field>
        <field name="TIMER3" bitoffset="12" bitlength="1">
          <description>TIMER3 interrupt active status
Values:
0x01 (NVIC_TIMER3_INT_ACTIVE) - TIMER3 interrupt is active
          </description>
        </field>
        <field name="TIMER2" bitoffset="11" bitlength="1">
          <description>TIMER2 interrupt active status
Values:
0x01 (NVIC_TIMER2_INT_ACTIVE) - TIMER2 interrupt is active
          </description>
        </field>
        <field name="TIMER1" bitoffset="10" bitlength="1">
          <description>TIMER1 interrupt active status
Values:
0x01 (NVIC_TIMER1_INT_ACTIVE) - TIMER1 interrupt is active
          </description>
        </field>
        <field name="TIMER0" bitoffset="9" bitlength="1">
          <description>TIMER0 interrupt active status
Values:
0x01 (NVIC_TIMER0_INT_ACTIVE) - TIMER0 interrupt is active
          </description>
        </field>
        <field name="WATCHDOG" bitoffset="8" bitlength="1">
          <description>Watchdog interrupt active status
Values:
0x01 (NVIC_WATCHDOG_INT_ACTIVE) - Watchdog interrupt is active
          </description>
        </field>
        <field name="GPIO_GP1" bitoffset="7" bitlength="1">
          <description>GPIO_GP1 interrupt active status
Values:
0x01 (NVIC_GPIO_GP1_INT_ACTIVE) - GPIO_GP1 interrupt is active
          </description>
        </field>
        <field name="GPIO_GP0" bitoffset="6" bitlength="1">
          <description>GPIO_GP0 interrupt active status
Values:
0x01 (NVIC_GPIO_GP0_INT_ACTIVE) - GPIO_GP0 interrupt is active
          </description>
        </field>
        <field name="NO_EXT_CLK_DETECT" bitoffset="5" bitlength="1">
          <description>No external clock interrupt active status
Values:
0x01 (NVIC_NO_EXT_CLK_DETECT_INT_ACTIVE) - No external clock interrupt is active
          </description>
        </field>
        <field name="THRESHOLD_COMPARE" bitoffset="4" bitlength="1">
          <description>Threshold compare interrupt active status
Values:
0x01 (NVIC_THRESHOLD_COMPARE_INT_ACTIVE) - Threshold compare interrupt is active
          </description>
        </field>
        <field name="RTC_CLOCK" bitoffset="3" bitlength="1">
          <description>RTC clock interrupt active status
Values:
0x01 (NVIC_RTC_CLOCK_INT_ACTIVE) - RTC clock interrupt is active
          </description>
        </field>
        <field name="RTC_ALARM" bitoffset="2" bitlength="1">
          <description>RTC alarm interrupt active status
Values:
0x01 (NVIC_RTC_ALARM_INT_ACTIVE) - RTC alarm interrupt is active
          </description>
        </field>
        <field name="WAKEUP_IF5_PIN0" bitoffset="1" bitlength="1">
          <description>Analog wakeup interrupt active status
Values:
0x01 (NVIC_WAKEUP_IF5_PIN0_INT_ACTIVE) - Analog wakeup interrupt is active
          </description>
        </field>
        <field name="WAKEUP" bitoffset="0" bitlength="1">
          <description>Wakeup interrupt active status
Values:
0x01 (NVIC_WAKEUP_INT_ACTIVE) - Wakeup interrupt is active
          </description>
        </field>
      </register>
      <register name="NVIC_ACTIVE1" address="0xE000E304" access="RW" resetvalue="0x00000000">
        <description>NVIC External Interrupt Active Register 1</description>
        <field name="GPIO_GP7" bitoffset="22" bitlength="1">
          <description>GPIO_GP7 interrupt active status
Values:
0x01 (NVIC_GPIO_GP7_INT_ACTIVE) - GPIO_GP7 interrupt is active
          </description>
        </field>
        <field name="GPIO_GP6" bitoffset="21" bitlength="1">
          <description>GPIO_GP6 interrupt active status
Values:
0x01 (NVIC_GPIO_GP6_INT_ACTIVE) - GPIO_GP6 interrupt is active
          </description>
        </field>
        <field name="GPIO_GP5" bitoffset="20" bitlength="1">
          <description>GPIO_GP5 interrupt active status
Values:
0x01 (NVIC_GPIO_GP5_INT_ACTIVE) - GPIO_GP5 interrupt is active
          </description>
        </field>
        <field name="GPIO_GP4" bitoffset="19" bitlength="1">
          <description>GPIO_GP4 interrupt active status
Values:
0x01 (NVIC_GPIO_GP4_INT_ACTIVE) - GPIO_GP4 interrupt is active
          </description>
        </field>
        <field name="GPIO_GP3" bitoffset="18" bitlength="1">
          <description>GPIO_GP3 interrupt active status
Values:
0x01 (NVIC_GPIO_GP3_INT_ACTIVE) - GPIO_GP3 interrupt is active
          </description>
        </field>
        <field name="GPIO_GP2" bitoffset="17" bitlength="1">
          <description>GPIO_GP2 interrupt active status
Values:
0x01 (NVIC_GPIO_GP2_INT_ACTIVE) - GPIO_GP2 interrupt is active
          </description>
        </field>
        <field name="ECC_CORRECTED" bitoffset="16" bitlength="1">
          <description>ECC error corrected interrupt active status
Values:
0x01 (NVIC_ECC_CORRECTED_INT_ACTIVE) - ECC error corrected interrupt is active
          </description>
        </field>
        <field name="USB_EP5OUT" bitoffset="15" bitlength="1">
          <description>USB EP5OUT interrupt active status
Values:
0x01 (NVIC_USB_EP5OUT_INT_ACTIVE) - USB EP5OUT interrupt is active
          </description>
        </field>
        <field name="USB_EP5IN" bitoffset="14" bitlength="1">
          <description>USB EP5IN interrupt active status
Values:
0x01 (NVIC_USB_EP5IN_INT_ACTIVE) - USB EP5IN interrupt is active
          </description>
        </field>
        <field name="USB_EP4OUT" bitoffset="13" bitlength="1">
          <description>USB EP4OUT interrupt active status
Values:
0x01 (NVIC_USB_EP4OUT_INT_ACTIVE) - USB EP4OUT interrupt is active
          </description>
        </field>
        <field name="USB_EP4IN" bitoffset="12" bitlength="1">
          <description>USB EP4IN interrupt active status
Values:
0x01 (NVIC_USB_EP4IN_INT_ACTIVE) - USB EP4IN interrupt is active
          </description>
        </field>
        <field name="USB_EP3OUT" bitoffset="11" bitlength="1">
          <description>USB EP3OUT interrupt active status
Values:
0x01 (NVIC_USB_EP3OUT_INT_ACTIVE) - USB EP3OUT interrupt is active
          </description>
        </field>
        <field name="USB_EP3IN" bitoffset="10" bitlength="1">
          <description>USB EP3IN interrupt active status
Values:
0x01 (NVIC_USB_EP3IN_INT_ACTIVE) - USB EP3IN interrupt is active
          </description>
        </field>
        <field name="USB_EP2OUT" bitoffset="9" bitlength="1">
          <description>USB EP2OUT interrupt active status
Values:
0x01 (NVIC_USB_EP2OUT_INT_ACTIVE) - USB EP2OUT interrupt is active
          </description>
        </field>
        <field name="USB_EP2IN" bitoffset="8" bitlength="1">
          <description>USB EP2IN interrupt active status
Values:
0x01 (NVIC_USB_EP2IN_INT_ACTIVE) - USB EP2IN interrupt is active
          </description>
        </field>
        <field name="USB_EP0OUT" bitoffset="7" bitlength="1">
          <description>USB EP0OUT interrupt active status
Values:
0x01 (NVIC_USB_EP0OUT_INT_ACTIVE) - USB EP0OUT interrupt is active
          </description>
        </field>
        <field name="USB_EP0IN" bitoffset="6" bitlength="1">
          <description>USB EP0IN interrupt active status
Values:
0x01 (NVIC_USB_EP0IN_INT_ACTIVE) - USB EP0IN interrupt is active
          </description>
        </field>
        <field name="USB_RESET" bitoffset="5" bitlength="1">
          <description>USB set interrupt active status
Values:
0x01 (NVIC_USB_RESET_INT_ACTIVE) - USB reset interrupt is active
          </description>
        </field>
        <field name="USB_SUSPEND" bitoffset="4" bitlength="1">
          <description>USB suspend interrupt active status
Values:
0x01 (NVIC_USB_SUSPEND_INT_ACTIVE) - USB suspend interrupt is active
          </description>
        </field>
        <field name="USB_SUTOK" bitoffset="3" bitlength="1">
          <description>USB setup data loading interrupt active status
Values:
0x01 (NVIC_USB_SUTOK_INT_ACTIVE) - USB setup data loading interrupt is active
          </description>
        </field>
        <field name="USB_SOF" bitoffset="2" bitlength="1">
          <description>USB start of frame interrupt active status
Values:
0x01 (NVIC_USB_SOF_INT_ACTIVE) - USB start of frame interrupt is active
          </description>
        </field>
        <field name="USB_SDAV" bitoffset="1" bitlength="1">
          <description>USB setup data available interrupt active status
Values:
0x01 (NVIC_USB_SDAV_INT_ACTIVE) - USB setup data available interrupt is active
          </description>
        </field>
        <field name="USB_WAKEUP" bitoffset="0" bitlength="1">
          <description>USB wakeup interrupt active status
Values:
0x01 (NVIC_USB_WAKEUP_INT_ACTIVE) - USB wakeup interrupt is active
          </description>
        </field>
      </register>
      <register name="NVIC_PRIORITY0" address="0xE000E400" access="RW" resetvalue="0x00000000">
        <description>NVIC External Interrupt Priority Register 0</description>
        <field name="RTC_CLOCK_PRIORITY" bitoffset="24" bitlength="8">
          <description>          </description>
        </field>
        <field name="RTC_ALARM_PRIORITY" bitoffset="16" bitlength="8">
          <description>          </description>
        </field>
        <field name="WAKEUP_IF5_PIN0_PRIORITY" bitoffset="8" bitlength="8">
          <description>          </description>
        </field>
        <field name="WAKEUP_PRIORITY" bitoffset="0" bitlength="8">
          <description>          </description>
        </field>
      </register>
      <register name="NVIC_PRIORITY1" address="0xE000E404" access="RW" resetvalue="0x00000000">
        <description>NVIC External Interrupt Priority Register 1</description>
        <field name="GPIO_GP1_PRIORITY" bitoffset="24" bitlength="8">
          <description>          </description>
        </field>
        <field name="GPIO_GP0_PRIORITY" bitoffset="16" bitlength="8">
          <description>          </description>
        </field>
        <field name="NO_EXT_CLK_DETECT_PRIORITY" bitoffset="8" bitlength="8">
          <description>          </description>
        </field>
        <field name="THRESHOLD_COMPARE_PRIORITY" bitoffset="0" bitlength="8">
          <description>          </description>
        </field>
      </register>
      <register name="NVIC_PRIORITY2" address="0xE000E408" access="RW" resetvalue="0x00000000">
        <description>NVIC External Interrupt Priority Register 2</description>
        <field name="TIMER2_PRIORITY" bitoffset="24" bitlength="8">
          <description>          </description>
        </field>
        <field name="TIMER1_PRIORITY" bitoffset="16" bitlength="8">
          <description>          </description>
        </field>
        <field name="TIMER0_PRIORITY" bitoffset="8" bitlength="8">
          <description>          </description>
        </field>
        <field name="WATCHDOG_PRIORITY" bitoffset="0" bitlength="8">
          <description>          </description>
        </field>
      </register>
      <register name="NVIC_PRIORITY3" address="0xE000E40C" access="RW" resetvalue="0x00000000">
        <description>NVIC External Interrupt Priority Register 3</description>
        <field name="UART0_ERROR_PRIORITY" bitoffset="24" bitlength="8">
          <description>          </description>
        </field>
        <field name="UART0_TX_PRIORITY" bitoffset="16" bitlength="8">
          <description>          </description>
        </field>
        <field name="UART0_RX_PRIORITY" bitoffset="8" bitlength="8">
          <description>          </description>
        </field>
        <field name="TIMER3_PRIORITY" bitoffset="0" bitlength="8">
          <description>          </description>
        </field>
      </register>
      <register name="NVIC_PRIORITY4" address="0xE000E410" access="RW" resetvalue="0x00000000">
        <description>NVIC External Interrupt Priority Register 4</description>
        <field name="I2C_PRIORITY" bitoffset="24" bitlength="8">
          <description>          </description>
        </field>
        <field name="UART1_ERROR_PRIORITY" bitoffset="16" bitlength="8">
          <description>          </description>
        </field>
        <field name="UART1_TX_PRIORITY" bitoffset="8" bitlength="8">
          <description>          </description>
        </field>
        <field name="UART1_RX_PRIORITY" bitoffset="0" bitlength="8">
          <description>          </description>
        </field>
      </register>
      <register name="NVIC_PRIORITY5" address="0xE000E414" access="RW" resetvalue="0x00000000">
        <description>NVIC External Interrupt Priority Register 5</description>
        <field name="SPI1_ERROR_PRIORITY" bitoffset="24" bitlength="8">
          <description>          </description>
        </field>
        <field name="SPI1_PRIORITY" bitoffset="16" bitlength="8">
          <description>          </description>
        </field>
        <field name="SPI0_ERROR_PRIORITY" bitoffset="8" bitlength="8">
          <description>          </description>
        </field>
        <field name="SPI0_PRIORITY" bitoffset="0" bitlength="8">
          <description>          </description>
        </field>
      </register>
      <register name="NVIC_PRIORITY6" address="0xE000E418" access="RW" resetvalue="0x00000000">
        <description>NVIC External Interrupt Priority Register 6</description>
        <field name="ADC_PRIORITY" bitoffset="24" bitlength="8">
          <description>          </description>
        </field>
        <field name="PCM_ERROR_PRIORITY" bitoffset="16" bitlength="8">
          <description>          </description>
        </field>
        <field name="PCM_TX_PRIORITY" bitoffset="8" bitlength="8">
          <description>          </description>
        </field>
        <field name="PCM_RX_PRIORITY" bitoffset="0" bitlength="8">
          <description>          </description>
        </field>
      </register>
      <register name="NVIC_PRIORITY7" address="0xE000E41C" access="RW" resetvalue="0x00000000">
        <description>NVIC External Interrupt Priority Register 7</description>
        <field name="DMA3_PRIORITY" bitoffset="24" bitlength="8">
          <description>          </description>
        </field>
        <field name="DMA2_PRIORITY" bitoffset="16" bitlength="8">
          <description>          </description>
        </field>
        <field name="DMA1_PRIORITY" bitoffset="8" bitlength="8">
          <description>          </description>
        </field>
        <field name="DMA0_PRIORITY" bitoffset="0" bitlength="8">
          <description>          </description>
        </field>
      </register>
      <register name="NVIC_PRIORITY8" address="0xE000E420" access="RW" resetvalue="0x00000000">
        <description>NVIC External Interrupt Priority Register 8</description>
        <field name="USB_SUTOK_PRIORITY" bitoffset="24" bitlength="8">
          <description>          </description>
        </field>
        <field name="USB_SOF_PRIORITY" bitoffset="16" bitlength="8">
          <description>          </description>
        </field>
        <field name="USB_SDAV_PRIORITY" bitoffset="8" bitlength="8">
          <description>          </description>
        </field>
        <field name="USB_WAKEUP_PRIORITY" bitoffset="0" bitlength="8">
          <description>          </description>
        </field>
      </register>
      <register name="NVIC_PRIORITY9" address="0xE000E424" access="RW" resetvalue="0x00000000">
        <description>NVIC External Interrupt Priority Register 9</description>
        <field name="USB_EP0OUT_PRIORITY" bitoffset="24" bitlength="8">
          <description>          </description>
        </field>
        <field name="USB_EP0IN_PRIORITY" bitoffset="16" bitlength="8">
          <description>          </description>
        </field>
        <field name="USB_RESET_PRIORITY" bitoffset="8" bitlength="8">
          <description>          </description>
        </field>
        <field name="USB_SUSPEND_PRIORITY" bitoffset="0" bitlength="8">
          <description>          </description>
        </field>
      </register>
      <register name="NVIC_PRIORITY10" address="0xE000E428" access="RW" resetvalue="0x00000000">
        <description>NVIC External Interrupt Priority Register 10</description>
        <field name="USB_EP3OUT_PRIORITY" bitoffset="24" bitlength="8">
          <description>          </description>
        </field>
        <field name="USB_EP3IN_PRIORITY" bitoffset="16" bitlength="8">
          <description>          </description>
        </field>
        <field name="USB_EP2OUT_PRIORITY" bitoffset="8" bitlength="8">
          <description>          </description>
        </field>
        <field name="USB_EP2IN_PRIORITY" bitoffset="0" bitlength="8">
          <description>          </description>
        </field>
      </register>
      <register name="NVIC_PRIORITY11" address="0xE000E42C" access="RW" resetvalue="0x00000000">
        <description>NVIC External Interrupt Priority Register 11</description>
        <field name="USB_EP5OUT_PRIORITY" bitoffset="24" bitlength="8">
          <description>          </description>
        </field>
        <field name="USB_EP5IN_PRIORITY" bitoffset="16" bitlength="8">
          <description>          </description>
        </field>
        <field name="USB_EP4OUT_PRIORITY" bitoffset="8" bitlength="8">
          <description>          </description>
        </field>
        <field name="USB_EP4IN_PRIORITY" bitoffset="0" bitlength="8">
          <description>          </description>
        </field>
      </register>
      <register name="NVIC_PRIORITY12" address="0xE000E430" access="RW" resetvalue="0x00000000">
        <description>NVIC External Interrupt Priority Register 12</description>
        <field name="GPIO_GP4_PRIORITY" bitoffset="24" bitlength="8">
          <description>          </description>
        </field>
        <field name="GPIO_GP3_PRIORITY" bitoffset="16" bitlength="8">
          <description>          </description>
        </field>
        <field name="GPIO_GP2_PRIORITY" bitoffset="8" bitlength="8">
          <description>          </description>
        </field>
        <field name="ECC_CORRECTED_PRIORITY" bitoffset="0" bitlength="8">
          <description>          </description>
        </field>
      </register>
      <register name="NVIC_PRIORITY13" address="0xE000E430" access="RW" resetvalue="0x00000000">
        <description>NVIC External Interrupt Priority Register 13</description>
        <field name="GPIO_GP7_PRIORITY" bitoffset="16" bitlength="8">
          <description>          </description>
        </field>
        <field name="GPIO_GP6_PRIORITY" bitoffset="8" bitlength="8">
          <description>          </description>
        </field>
        <field name="GPIO_GP5_PRIORITY" bitoffset="0" bitlength="8">
          <description>          </description>
        </field>
      </register>
      <register name="NVIC_INT_CTRL" address="0xE000ED04" access="RW" resetvalue="0x00000000">
        <description>NVIC Interrupt Control and State Register</description>
        <field name="NMIPENDSET" bitoffset="31" bitlength="1">
          <description>Indicates the NMI exception is pending
Values:
0x01 (NVIC_NMI_SETPEND) - Set NMI exception to pending
          </description>
        </field>
        <field name="PENDSVSET" bitoffset="28" bitlength="1">
          <description>Write 1 to set pending status for PendSV exception. Read indicates PendSV pending status
Values:
0x01 (NVIC_PENDSV_SETPEND) - Set PendSV exception to pending
          </description>
        </field>
        <field name="PENDSVCLR" bitoffset="27" bitlength="1">
          <description>Write 1 to clear PendSV exception pending status
Values:
0x01 (NVIC_PENDSV_CLRPEND) - Clear PendSV exception pending status
          </description>
        </field>
        <field name="PENDSTSET" bitoffset="26" bitlength="1">
          <description>Write 1 to set pending status for SYSTICK exception. Read value indicates SYSTICK pending status
Values:
0x01 (NVIC_SYSTICK_SETPEND) - Set SYSTICK exception to pending
          </description>
        </field>
        <field name="PENDSTCLR" bitoffset="25" bitlength="1">
          <description>Write 1 to clear SYSTICK exception pending status
Values:
0x01 (NVIC_SYSTICK_CLRPEND) - Clear SYSTICK exception pending status
          </description>
        </field>
        <field name="ISRPREEMPT" bitoffset="23" bitlength="1">
          <description>Indicates that a pending interrupt is going to be active in the next step          </description>
        </field>
        <field name="ISRPENDING" bitoffset="22" bitlength="1">
          <description>Indicates that an external interrupt is pending          </description>
        </field>
        <field name="VECTPENDING" bitoffset="12" bitlength="10">
          <description>Pending external interrupt number          </description>
        </field>
        <field name="RETTOBASE" bitoffset="11" bitlength="1">
          <description>Set to 1 when the an exception handler is being run.          </description>
        </field>
        <field name="VECTACTIVE" bitoffset="0" bitlength="10">
          <description>Number of current running interrupt service routine          </description>
        </field>
      </register>
      <register name="NVIC_VTABLE_OFFSET" address="0xE000ED08" access="RW" resetvalue="0x00000000">
        <description>NVIC Vector Table Offset Register</description>
        <field name="TBLBASE" bitoffset="29" bitlength="1">
          <description>Indicates if table base is in code or RAM
Values:
0x00 (NVIC_TBLBASE_CODE) - Vector table base is in code memory region
0x01 (NVIC_TBLBASE_RAM) - Vector table base is in SRAM memory region
          </description>
        </field>
        <field name="TBLOFF" bitoffset="7" bitlength="22">
          <description>Table offset value in code or RAM region. Must be multiple of 128.          </description>
        </field>
      </register>
      <register name="NVIC_APP_INT_CTRL" address="0xE000ED0C" access="RW" resetvalue="0xFA050000">
        <description>NVIC Application Interrupt and Reset Control Register</description>
        <field name="VECTKEY" bitoffset="16" bitlength="16">
          <description>Access key for writing this register. Must be set to 0x05FA to write the other register fields.
Values:
0x5FA (NVIC_VECTKEY_UNLOCK) - Unlocks the NVIC_APP_INT_CTRL register
0xFA05 (NVIC_VECTKEY_UNLOCK_READBACK) - Readback value when reading the VECTKEY field after unlocking
          </description>
        </field>
        <field name="ENDIANNESS" bitoffset="15" bitlength="1">
          <description>Indicates endianness for data.
Values:
0x00 (NVIC_LITTLE_ENDIAN) - Indicates core is configured for little endian data
          </description>
        </field>
        <field name="PRIGROUP" bitoffset="8" bitlength="3">
          <description>Priority group setting. Controls how many bits in the priority register are used for pre-empty priority vs. sub-priority.
Values:
0x03 (NVIC_PRIGROUP_4_0) - Indicates 4 bits for pre-emption priority and 0 bits for sub-priority
0x04 (NVIC_PRIGROUP_3_1) - Indicates 3 bits for pre-emption priority and 1 bit for sub-priority
0x05 (NVIC_PRIGROUP_2_2) - Indicates 2 bits for pre-emption priority and 2 bits for sub-priority
0x06 (NVIC_PRIGROUP_1_3) - Indicates 1 bit for pre-emption priority and 3 bits for sub-priority
0x07 (NVIC_PRIGROUP_0_4) - Indicates 0 bits for pre-emption priority and 4 bits for sub-priority
          </description>
        </field>
        <field name="SYSRESETREQ" bitoffset="2" bitlength="1">
          <description>Requests a chip-level system reset
Values:
0x01 (NVIC_SYSRESET) - Requests a chjp-level system reset
          </description>
        </field>
        <field name="VECTCLRACTIVE" bitoffset="1" bitlength="1">
          <description>Clears all active exception state information
Values:
0x01 (NVIC_CLEAR_ACTIVE_VECTORS) - Clears all active exception state information
          </description>
        </field>
        <field name="VECTRESET" bitoffset="0" bitlength="1">
          <description>Reset the Cortex-M3
Values:
0x01 (NVIC_VECTRESET) - Reset the Cortex-M3
          </description>
        </field>
      </register>
      <register name="NVIC_SYS_CTRL" address="0xE000ED10" access="RW" resetvalue="0x00000000">
        <description>NVIC System Control Register</description>
        <field name="SEVONPEND" bitoffset="4" bitlength="1">
          <description>Set to 1 to cause the WFE to wake up if a new interrupt is pended          </description>
        </field>
        <field name="SLEEPDEEP" bitoffset="2" bitlength="1">
          <description>Enable SLEEPDEEP output signal when entering sleep mode
Values:
0x00 (NVIC_SLEEPDEEP_DISABLE) - Disable SLEEPDEEP output signal when entering sleep mode
0x01 (NVIC_SLEEPDEEP_ENABLE) - Enable SLEEPDEEP output signal when entering sleep mode
          </description>
        </field>
        <field name="SLEEPONEXIT" bitoffset="1" bitlength="1">
          <description>Enable sleep on exit feature when returning from handler to thread mode
Values:
0x00 (NVIC_SLEEPONEXIT_DISABLE) - Disable sleep on exit feature
0x01 (NVIC_SLEEPONEXIT_ENABLE) - Enable sleep on exit feature
          </description>
        </field>
      </register>
      <register name="NVIC_CFG_CTRL" address="0xE000ED14" access="RW" resetvalue="0x00000000">
        <description>NVIC Configuration Control Register</description>
        <field name="STKALIGN" bitoffset="9" bitlength="1">
          <description>Force stack to be double-word aligned
Values:
0x00 (NVIC_STKALIGN_DISABLE) - Disable double-word stack alignment
0x01 (NVIC_STKALIGN_ENABLE) - Enable double-word stack alignment
          </description>
        </field>
        <field name="BFHFNMIGN" bitoffset="8" bitlength="1">
          <description>Ignore data bus faults in hard fault and NMI exceptions
Values:
0x00 (NVIC_BFHFNMIGN_DISABLE) - Disable ignoring of data bus faults in hard fault and NMI exception handlers. Bus faults in these handlers will cause lock-up
0x01 (NVIC_BFHFNMIGN_ENABLE) - Enable ignoring of data bus faults in hard fault and NMI exception handlers
          </description>
        </field>
        <field name="DIV_0_TRP" bitoffset="4" bitlength="1">
          <description>Trap on divide by zero
Values:
0x00 (NVIC_DIV_0_TRP_DISABLE) - Disable trapping on divide by zero
0x01 (NVIC_DIV_0_TRP_ENABLE) - Enable trapping on divide by zero
          </description>
        </field>
        <field name="UNALIGN_TRP" bitoffset="3" bitlength="1">
          <description>Trap on unaligned data access
Values:
0x00 (NVIC_UNALIGN_TRP_DISABLE) - Disable trapping on unaligned data access
0x01 (NVIC_UNALIGN_TRP_ENABLE) - Enable trapping on unaligned data access
          </description>
        </field>
        <field name="USERSETMPEND" bitoffset="1" bitlength="1">
          <description>Allow user code to write to software trigger interrupt register
Values:
0x00 (NVIC_USERSETMPEND_DISABLE) - Disable user code access to software trigger interrupt register
0x01 (NVIC_USERSETMPEND_ENABLE) - Enable user code access to software trigger interrupt register
          </description>
        </field>
        <field name="NONBASETHRDENA" bitoffset="0" bitlength="1">
          <description>Non base thread mode enable
Values:
0x00 (NVIC_NONBASETHRDENA_DISABLE) - Only allow thread mode on return from last exception
0x01 (NVIC_NONBASETHRDENA_ENABLE) - Allow thread mode from any handler level by controlled return value
          </description>
        </field>
      </register>
      <register name="NVIC_SYS_PRIORITY0" address="0xE000ED18" access="RW" resetvalue="0x00000000">
        <description>NVIC System Interrupt Priority Register 0</description>
        <field name="NVIC_USAGE_FAULT_PRIORITY" bitoffset="16" bitlength="8">
          <description>          </description>
        </field>
        <field name="NVIC_BUS_FAULT_PRIORITY" bitoffset="8" bitlength="8">
          <description>          </description>
        </field>
        <field name="NVIC_MEM_FAULT_PRIORITY" bitoffset="0" bitlength="8">
          <description>          </description>
        </field>
      </register>
      <register name="NVIC_SYS_PRIORITY1" address="0xE000ED1C" access="RW" resetvalue="0x00000000">
        <description>NVIC System Interrupt Priority Register 1</description>
        <field name="NVIC_SVC_PRIORITY" bitoffset="24" bitlength="8">
          <description>          </description>
        </field>
      </register>
      <register name="NVIC_SYS_PRIORITY2" address="0xE000ED20" access="RW" resetvalue="0x00000000">
        <description>NVIC System Interrupt Priority Register 2</description>
        <field name="NVIC_SYSTICK_PRIORITY" bitoffset="24" bitlength="8">
          <description>          </description>
        </field>
        <field name="NVIC_PENDSV_PRIORITY" bitoffset="16" bitlength="8">
          <description>          </description>
        </field>
        <field name="NVIC_MONITOR_PRIORITY" bitoffset="0" bitlength="8">
          <description>          </description>
        </field>
      </register>
      <register name="NVIC_SYS_HNDLR_CTRL" address="0xE000ED24" access="RW" resetvalue="0x00000000">
        <description>NVIC System Handler Control and State Register</description>
        <field name="USGFAULTEN" bitoffset="18" bitlength="1">
          <description>Usage fault handler enable
Values:
0x00 (NVIC_USGFAULT_DISABLE) - Disable usage fault handler
0x01 (NVIC_USGFAULT_ENABLE) - Enable usage fault handler
          </description>
        </field>
        <field name="BUSFAULTEN" bitoffset="17" bitlength="1">
          <description>Bus fault handler enable
Values:
0x00 (NVIC_BUSFAULT_DISABLE) - Disable bus fault handler
0x01 (NVIC_BUSFAULT_ENABLE) - Enable bus fault handler
          </description>
        </field>
        <field name="MEMFAULTEN" bitoffset="16" bitlength="1">
          <description>Memory management fault handler enable
Values:
0x00 (NVIC_MEMFAULT_DISABLE) - Disable memory management fault handler
0x01 (NVIC_MEMFAULT_ENABLE) - Enable memory management fault handler
          </description>
        </field>
        <field name="SVCALLPENDED" bitoffset="15" bitlength="1">
          <description>SVCall is pending or was started and replaced by a higher priority exception
Values:
0x00 (NVIC_SVCALL_CLRPEND) - SVCall handler not pending
0x01 (NVIC_SVCALL_SETPEND) - SVCall handler is pending
          </description>
        </field>
        <field name="BUSFAULTPENDED" bitoffset="14" bitlength="1">
          <description>Bus fault is pending or was started and replaced by a higher priority exception
Values:
0x00 (NVIC_BUSFAULT_CLRPEND) - Bus fault handler not pending
0x01 (NVIC_BUSFAULT_SETPEND) - Bus fault handler is pending
          </description>
        </field>
        <field name="MEMFAULTPENDED" bitoffset="13" bitlength="1">
          <description>Memory management fault is pending or was started and replaced by a higher priority exception
Values:
0x00 (NVIC_MEMFAULT_CLRPEND) - Memory management fault handler not pending
0x01 (NVIC_MEMFAULT_SETPEND) - Memory management fault handler is pending
          </description>
        </field>
        <field name="USGFAULTPENDED" bitoffset="12" bitlength="1">
          <description>Usage fault is pending or was started and replaced by a higher priority exception
Values:
0x00 (NVIC_USGFAULT_CLRPEND) - Usagefault handler not pending
0x01 (NVIC_USGFAULT_SETPEND) - Usage fault handler is pending
          </description>
        </field>
        <field name="SYSTICKACT" bitoffset="11" bitlength="1">
          <description>SYSTICK exception handler is active
Values:
0x01 (NVIC_SYSTICK_ACTIVE) - SYSTICK exception handler is active
          </description>
        </field>
        <field name="PENDSVACT" bitoffset="10" bitlength="1">
          <description>PendSV exception handler is active
Values:
0x01 (NVIC_PENDSV_ACTIVE) - PendSV exception handler is active
          </description>
        </field>
        <field name="MONITORACT" bitoffset="8" bitlength="1">
          <description>Debug monitor exception handler is active
Values:
0x01 (NVIC_MONITOR_ACTIVE) - Debug monitor exception handler is active
          </description>
        </field>
        <field name="SVCALLACT" bitoffset="7" bitlength="1">
          <description>SVCall exception handler is active
Values:
0x01 (NVIC_SVCALL_ACTIVE) - SVCall exception is active
          </description>
        </field>
        <field name="USGFAULTACT" bitoffset="3" bitlength="1">
          <description>Usage fault exception handler is active
Values:
0x01 (NVIC_USGFAULT_ACTIVE) - Usage fault exception handler is active
          </description>
        </field>
        <field name="BUSFAULTACT" bitoffset="1" bitlength="1">
          <description>Bus fault exception handler is active
Values:
0x01 (NVIC_BUSFAULT_ACTIVE) - Bus fault exception handler is active
          </description>
        </field>
        <field name="MEMFAULTACT" bitoffset="0" bitlength="1">
          <description>Memory management fault exception handler is active
Values:
0x01 (NVIC_MEMFAULT_ACTIVE) - Memory management fault exception handler is active
          </description>
        </field>
      </register>
      <register name="NVIC_FSR" address="0xE000ED28" access="RW" resetvalue="0x00000000">
        <description>NVIC  Fault Status Register</description>
        <field name="DIVBYZERO" bitoffset="25" bitlength="1">
          <description>Indicates divide by zero will take place          </description>
        </field>
        <field name="UNALIGNED" bitoffset="24" bitlength="1">
          <description>Indicates unaligned access will take place          </description>
        </field>
        <field name="NOCP" bitoffset="19" bitlength="1">
          <description>Attempt to execute a coprocessor instruction          </description>
        </field>
        <field name="INVPC" bitoffset="18" bitlength="1">
          <description>Attempt to do exception with bad value in EXC_RETURN number          </description>
        </field>
        <field name="INVSTATE" bitoffset="17" bitlength="1">
          <description>Attempt to switch to invalid (e.g. ARM) state          </description>
        </field>
        <field name="UNDEFINSTR" bitoffset="16" bitlength="1">
          <description>Attempt to execute an undefined instruction          </description>
        </field>
        <field name="BFARVALID" bitoffset="15" bitlength="1">
          <description>Indicates if bus fault address register is valid
Values:
0x00 (NVIC_BFAR_INVALID) - Bus fault address register is not valid
0x01 (NVIC_BFAR_VALID) - Bus fault address register is valid
          </description>
        </field>
        <field name="STKERR" bitoffset="12" bitlength="1">
          <description>Indicates stacking error          </description>
        </field>
        <field name="UNSTKERR" bitoffset="11" bitlength="1">
          <description>Indicates unstacking error          </description>
        </field>
        <field name="IMPRECISERR" bitoffset="10" bitlength="1">
          <description>Indicates imprecise data access violation          </description>
        </field>
        <field name="PRECISERR" bitoffset="9" bitlength="1">
          <description>Indicates precise data access violation          </description>
        </field>
        <field name="IBUSERR" bitoffset="8" bitlength="1">
          <description>Indicates instruction access violation          </description>
        </field>
        <field name="MMARVALID" bitoffset="7" bitlength="1">
          <description>Indicates if memory management fault address register is valid
Values:
0x00 (NVIC_MMAR_INVALID) - Memory management fault address register is not valid
0x01 (NVIC_MMAR_VALID) - Memory management fault address register is valid
          </description>
        </field>
        <field name="MSTKERR" bitoffset="4" bitlength="1">
          <description>Indicates stacking error          </description>
        </field>
        <field name="MUNSTKERR" bitoffset="3" bitlength="1">
          <description>Indicates unstacking error          </description>
        </field>
        <field name="DACCVIOL" bitoffset="1" bitlength="1">
          <description>Indicates data access violation          </description>
        </field>
        <field name="IACCVIOL" bitoffset="0" bitlength="1">
          <description>Indicates instruction access violation          </description>
        </field>
      </register>
      <register name="NVIC_HFSR" address="0xE000ED2C" access="RW" resetvalue="0x00000000">
        <description>NVIC Hard Fault Status Register</description>
        <field name="DEBUGEVT" bitoffset="31" bitlength="1">
          <description>Indicates hard fault is triggered by debug event          </description>
        </field>
        <field name="FORCED" bitoffset="30" bitlength="1">
          <description>Indicates hard fault is taken because of a lower priority (e.g., bus, memory management or usage) fault          </description>
        </field>
        <field name="VECTBL" bitoffset="1" bitlength="1">
          <description>Indicates hard fault is taken due to failed vector fetch          </description>
        </field>
      </register>
      <register name="NVIC_DFSR" address="0xE000ED30" access="RW" resetvalue="0x00000000">
        <description>NVIC Debug Fault Status Register</description>
        <field name="EXTERNAL" bitoffset="4" bitlength="1">
          <description>Indicates external debug request signal asserted          </description>
        </field>
        <field name="VCATCH" bitoffset="3" bitlength="1">
          <description>Indicates vector fetch occurred          </description>
        </field>
        <field name="DWTTRAP" bitoffset="2" bitlength="1">
          <description>Indicates DWT match occurred          </description>
        </field>
        <field name="BKPT" bitoffset="1" bitlength="1">
          <description>Indicates BKPT instruction executed          </description>
        </field>
        <field name="HALTED" bitoffset="0" bitlength="1">
          <description>Indicates halt requested by NVIC          </description>
        </field>
      </register>
      <register name="NVIC_MMAR" address="0xE000ED34" access="RO" resetvalue="0x00000000">
        <description>NVIC Memory Management Fault Address Register</description>
        <field name="NVIC_MMAR" bitoffset="0" bitlength="32">
          <description>          </description>
        </field>
      </register>
      <register name="NVIC_BFAR" address="0xE000ED38" access="RO" resetvalue="0x00000000">
        <description>NVIC Bus Fault Address Register</description>
        <field name="NVIC_BFAR" bitoffset="0" bitlength="32">
          <description>          </description>
        </field>
      </register>
      <register name="NVIC_SW_INT" address="0xE000EF00" access="WO" resetvalue="0x00000000">
        <description>NVIC Software Trigger Interrupt Register</description>
        <field name="INTID" bitoffset="0" bitlength="8">
          <description>The interrupt number to trigger          </description>
        </field>
      </register>
    </registergroup>
    <registergroup name="Debug" description="Debug Controller">
      <register name="DEBUG_HALT_CTRL" address="0xE000EDF0" access="RW" resetvalue="0x01010001">
        <description>Debug Halting Control and Status Register</description>
        <field name="KEY" bitoffset="16" bitlength="16">
          <description>Debug key must be written to this field in order to write the rest of the register
Values:
0xA05F (DEBUG_HALT_KEY) - Key to unlock DEBUGHALT_CTRL register
          </description>
        </field>
        <field name="S_RESET_ST" bitoffset="25" bitlength="1">
          <description>Core has been reset or is being rest. Bit is cleared on read.          </description>
        </field>
        <field name="S_RETIRE_ST" bitoffset="24" bitlength="1">
          <description>          </description>
        </field>
        <field name="S_LOCKUP" bitoffset="19" bitlength="1">
          <description>Indicates if core is in lockup state          </description>
        </field>
        <field name="S_SLEEP" bitoffset="18" bitlength="1">
          <description>Indicates if core is in sleep mode          </description>
        </field>
        <field name="S_HALT" bitoffset="17" bitlength="1">
          <description>Indicates is core is halted          </description>
        </field>
        <field name="S_REGRDY" bitoffset="16" bitlength="1">
          <description>Indicates register read/write operation is completed          </description>
        </field>
        <field name="C_SNAPSTALL" bitoffset="5" bitlength="1">
          <description>Set to break a stalled memory access          </description>
        </field>
        <field name="C_MASKINTS" bitoffset="3" bitlength="1">
          <description>Mask interrupts while stepping          </description>
        </field>
        <field name="C_STEP" bitoffset="2" bitlength="1">
          <description>Single step the processor          </description>
        </field>
        <field name="C_HALT" bitoffset="1" bitlength="1">
          <description>Halt the processor          </description>
        </field>
        <field name="C_DEBUGEN" bitoffset="0" bitlength="1">
          <description>Enable halt mode debugging          </description>
        </field>
      </register>
      <register name="DEBUG_REGSELECT" address="0xE000EDF4" access="WO" resetvalue="0x00000000">
        <description>Debug Core Register Selector Register</description>
        <field name="REGWNR" bitoffset="16" bitlength="1">
          <description>Indicates direction of register transfer
Values:
0x00 (REGWNR_READ) - Indicates register read
0x01 (REGWNR_WRITE) - Indicates register write
          </description>
        </field>
        <field name="REGSEL" bitoffset="0" bitlength="5">
          <description>Indicates register to be accessed
Values:
0x00 (REGSEL_R0) - Select R0
0x01 (REGSEL_R1) - Select R1
0x02 (REGSEL_R2) - Select R2
0x03 (REGSEL_R3) - Select R3
0x04 (REGSEL_R4) - Select R4
0x05 (REGSEL_R5) - Select R5
0x06 (REGSEL_R6) - Select R6
0x07 (REGSEL_R7) - Select R7
0x08 (REGSEL_R8) - Select R8
0x09 (REGSEL_R9) - Select R9
0x0A (REGSEL_R10) - Select R10
0x0B (REGSEL_R11) - Select R11
0x0C (REGSEL_R12) - Select R12
0x0D (REGSEL_R13) - Select R13
0x0E (REGSEL_R14) - Select R14
0x0F (REGSEL_R15) - Select R15
0x10 (REGSEL_PSRFLGS) - Select xPSR/flags
0x11 (REGSEL_MSP) - Select main stack pointer
0x12 (REGSEL_PSP) - Select process stack pointer
0x14 (REGSEL_SPECREG) - Access other registers including control, FAULTMASK, BASEPRI and PRIMASK
          </description>
        </field>
      </register>
      <register name="DEBUG_REGDATA" address="0xE000EDF8" access="RW" resetvalue="0x00000000">
        <description>Debug Core Register Data Register</description>
        <field name="DEBUG_REGDATA" bitoffset="0" bitlength="32">
          <description>Register read/write data for debugging          </description>
        </field>
      </register>
      <register name="DEBUG_EXCEPT_CTRL" address="0xE000EDFC" access="RW" resetvalue="0x00000000">
        <description>Debug Exception and Monitor Control Register</description>
        <field name="TRCENA" bitoffset="24" bitlength="1">
          <description>Trace system enable          </description>
        </field>
        <field name="MON_REQ" bitoffset="19" bitlength="1">
          <description>Indicates that the debug monitor is caused by a manual pending request rather than a hardware event          </description>
        </field>
        <field name="MON_STEP" bitoffset="18" bitlength="1">
          <description>Single step the processor          </description>
        </field>
        <field name="MON_PEND" bitoffset="17" bitlength="1">
          <description>Pend the monitor exception request
Values:
0x00 (DEBUG_MON_CLRPEND) - Clear the pending status of the debug monitor exception
0x01 (DEBUG_MON_SETPEND) - Set pending status of the debug monitor exception
          </description>
        </field>
        <field name="MON_EN" bitoffset="16" bitlength="1">
          <description>Enable the debug monitor exception
Values:
0x00 (DEBUG_MON_DISABLE) - Disable debug monitor exceptions
0x01 (DEBUG_MON_ENABLE) - Enable debug monitor exceptions
          </description>
        </field>
        <field name="VC_HARDERR" bitoffset="10" bitlength="1">
          <description>Debug trap on hard faults          </description>
        </field>
        <field name="VC_INTERR" bitoffset="9" bitlength="1">
          <description>Debug trap on interrupt service errors          </description>
        </field>
        <field name="VC_BUSERR" bitoffset="8" bitlength="1">
          <description>Debug trap on bus faults          </description>
        </field>
        <field name="VC_STATERR" bitoffset="7" bitlength="1">
          <description>Debug trap on usage fault state errors          </description>
        </field>
        <field name="VC_CHKERR" bitoffset="6" bitlength="1">
          <description>Debug trap on fault-enabled checking errors (e.g. unaligned access, divide by zero, etc.)          </description>
        </field>
        <field name="VC_NOCPERR" bitoffset="5" bitlength="1">
          <description>Debug trap on usage fault no coprocessor errors          </description>
        </field>
        <field name="VC_MMERR" bitoffset="4" bitlength="1">
          <description>Debug trap on memory management fault          </description>
        </field>
        <field name="VC_CORERESET" bitoffset="0" bitlength="1">
          <description>Debug trap on core reset          </description>
        </field>
      </register>
    </registergroup>
  </group>
</model>
